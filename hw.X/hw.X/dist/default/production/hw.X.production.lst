

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Apr 09 19:45:01 2022

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           	psect	idataCOMRAM
    62  003278                     __pidataCOMRAM:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _LCD_INIT_STRING
    66  003278  28                 	db	40
    67  003279  0C                 	db	12
    68  00327A  01                 	db	1
    69  00327B  06                 	db	6
    70                           
    71                           	psect	idataBANK0
    72  00327C                     __pidataBANK0:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _flag
    76  00327C  0002               	dw	2
    77                           
    78                           	psect	mediumconst
    79  00FEF2                     __pmediumconst:
    80                           	opt stack 0
    81  00FEF2  00                 	db	0
    82  00FEF3                     __npowers_:
    83                           	opt stack 0
    84  00FEF3  0000               	dw	0
    85  00FEF5  3F80               	dw	16256
    86  00FEF7  CCCD               	dw	52429
    87  00FEF9  3DCC               	dw	15820
    88  00FEFB  D70A               	dw	55050
    89  00FEFD  3C23               	dw	15395
    90  00FEFF  126F               	dw	4719
    91  00FF01  3A83               	dw	14979
    92  00FF03  B717               	dw	46871
    93  00FF05  38D1               	dw	14545
    94  00FF07  C5AC               	dw	50604
    95  00FF09  3727               	dw	14119
    96  00FF0B  37BD               	dw	14269
    97  00FF0D  3586               	dw	13702
    98  00FF0F  BF95               	dw	49045
    99  00FF11  33D6               	dw	13270
   100  00FF13  CC77               	dw	52343
   101  00FF15  322B               	dw	12843
   102  00FF17  705F               	dw	28767
   103  00FF19  3089               	dw	12425
   104  00FF1B  E6FF               	dw	59135
   105  00FF1D  2EDB               	dw	11995
   106  00FF1F  E508               	dw	58632
   107  00FF21  1E3C               	dw	7740
   108  00FF23  4260               	dw	16992
   109  00FF25  0DA2               	dw	3490
   110  00FF27                     __end_of__npowers_:
   111                           	opt stack 0
   112  00FF27                     __powers_:
   113                           	opt stack 0
   114  00FF27  0000               	dw	0
   115  00FF29  3F80               	dw	16256
   116  00FF2B  0000               	dw	0
   117  00FF2D  4120               	dw	16672
   118  00FF2F  0000               	dw	0
   119  00FF31  42C8               	dw	17096
   120  00FF33  0000               	dw	0
   121  00FF35  447A               	dw	17530
   122  00FF37  4000               	dw	16384
   123  00FF39  461C               	dw	17948
   124  00FF3B  5000               	dw	20480
   125  00FF3D  47C3               	dw	18371
   126  00FF3F  2400               	dw	9216
   127  00FF41  4974               	dw	18804
   128  00FF43  9680               	dw	38528
   129  00FF45  4B18               	dw	19224
   130  00FF47  BC20               	dw	48160
   131  00FF49  4CBE               	dw	19646
   132  00FF4B  6B28               	dw	27432
   133  00FF4D  4E6E               	dw	20078
   134  00FF4F  02F9               	dw	761
   135  00FF51  5015               	dw	20501
   136  00FF53  78EC               	dw	30956
   137  00FF55  60AD               	dw	24749
   138  00FF57  F2CA               	dw	62154
   139  00FF59  7149               	dw	29001
   140  00FF5B                     __end_of__powers_:
   141                           	opt stack 0
   142  00FF5B                     _dpowers:
   143                           	opt stack 0
   144  00FF5B  0001               	dw	1
   145  00FF5D  0000               	dw	0
   146  00FF5F  000A               	dw	10
   147  00FF61  0000               	dw	0
   148  00FF63  0064               	dw	100
   149  00FF65  0000               	dw	0
   150  00FF67  03E8               	dw	1000
   151  00FF69  0000               	dw	0
   152  00FF6B  2710               	dw	10000
   153  00FF6D  0000               	dw	0
   154  00FF6F  86A0               	dw	34464
   155  00FF71  0001               	dw	1
   156  00FF73  4240               	dw	16960
   157  00FF75  000F               	dw	15
   158  00FF77  9680               	dw	38528
   159  00FF79  0098               	dw	152
   160  00FF7B  E100               	dw	57600
   161  00FF7D  05F5               	dw	1525
   162  00FF7F  CA00               	dw	51712
   163  00FF81  3B9A               	dw	15258
   164  00FF83                     __end_of_dpowers:
   165                           	opt stack 0
   166  0000                     _ADCON0	set	4034
   167  0000                     _ADCON0bits	set	4034
   168  0000                     _ADCON1	set	4033
   169  0000                     _ADCON2	set	4032
   170  0000                     _ADRESH	set	4036
   171  0000                     _ADRESL	set	4035
   172  0000                     _BAUDCONbits	set	4024
   173  0000                     _INTCON	set	4082
   174  0000                     _INTCON2	set	4081
   175  0000                     _INTCON2bits	set	4081
   176  0000                     _INTCON3	set	4080
   177  0000                     _INTCON3bits	set	4080
   178  0000                     _INTCONbits	set	4082
   179  0000                     _IPR1	set	3999
   180  0000                     _IPR2	set	4002
   181  0000                     _PIE1	set	3997
   182  0000                     _PIE2	set	4000
   183  0000                     _PIR1	set	3998
   184  0000                     _PIR1bits	set	3998
   185  0000                     _PIR2	set	4001
   186  0000                     _PORTBbits	set	3969
   187  0000                     _PORTC	set	3970
   188  0000                     _PORTCbits	set	3970
   189  0000                     _PORTEbits	set	3972
   190  0000                     _RCONbits	set	4048
   191  0000                     _RCREG	set	4014
   192  0000                     _RCSTA	set	4011
   193  0000                     _RCSTAbits	set	4011
   194  0000                     _SPBRG	set	4015
   195  0000                     _SPBRGH	set	4016
   196  0000                     _T0CON	set	4053
   197  0000                     _TMR3H	set	4019
   198  0000                     _TMR3L	set	4018
   199  0000                     _TRISA	set	3986
   200  0000                     _TRISB	set	3987
   201  0000                     _TRISC	set	3988
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISE	set	3990
   204  0000                     _TXREG	set	4013
   205  0000                     _TXSTA	set	4012
   206  0000                     _TXSTAbits	set	4012
   207  00FF83                     STR_6:
   208                           
   209                           ; BSR set to: 1
   210  00FF83  54                 	db	84	;'T'
   211  00FF84  69                 	db	105	;'i'
   212  00FF85  6D                 	db	109	;'m'
   213  00FF86  65                 	db	101	;'e'
   214  00FF87  3A                 	db	58	;':'
   215  00FF88  25                 	db	37
   216  00FF89  30                 	db	48	;'0'
   217  00FF8A  32                 	db	50	;'2'
   218  00FF8B  64                 	db	100	;'d'
   219  00FF8C  3A                 	db	58	;':'
   220  00FF8D  25                 	db	37
   221  00FF8E  30                 	db	48	;'0'
   222  00FF8F  32                 	db	50	;'2'
   223  00FF90  64                 	db	100	;'d'
   224  00FF91  3A                 	db	58	;':'
   225  00FF92  25                 	db	37
   226  00FF93  30                 	db	48	;'0'
   227  00FF94  32                 	db	50	;'2'
   228  00FF95  64                 	db	100	;'d'
   229  00FF96  20                 	db	32
   230  00FF97  00                 	db	0
   231  00FF98                     STR_2:
   232                           
   233                           ; BSR set to: 1
   234  00FF98  31                 	db	49	;'1'
   235  00FF99  30                 	db	48	;'0'
   236  00FF9A  20                 	db	32
   237  00FF9B  73                 	db	115	;'s'
   238  00FF9C  65                 	db	101	;'e'
   239  00FF9D  63                 	db	99	;'c'
   240  00FF9E  20                 	db	32
   241  00FF9F  20                 	db	32
   242  00FFA0  20                 	db	32
   243  00FFA1  20                 	db	32
   244  00FFA2  20                 	db	32
   245  00FFA3  20                 	db	32
   246  00FFA4  20                 	db	32
   247  00FFA5  20                 	db	32
   248  00FFA6  20                 	db	32
   249  00FFA7  20                 	db	32
   250  00FFA8  00                 	db	0
   251  00FFA9                     STR_1:
   252                           
   253                           ; BSR set to: 1
   254  00FFA9  73                 	db	115	;'s'
   255  00FFAA  65                 	db	101	;'e'
   256  00FFAB  63                 	db	99	;'c'
   257  00FFAC  20                 	db	32
   258  00FFAD  20                 	db	32
   259  00FFAE  20                 	db	32
   260  00FFAF  20                 	db	32
   261  00FFB0  20                 	db	32
   262  00FFB1  20                 	db	32
   263  00FFB2  20                 	db	32
   264  00FFB3  20                 	db	32
   265  00FFB4  20                 	db	32
   266  00FFB5  20                 	db	32
   267  00FFB6  20                 	db	32
   268  00FFB7  00                 	db	0
   269  00FFB8                     STR_3:
   270                           
   271                           ; BSR set to: 1
   272  00FFB8  6D                 	db	109	;'m'
   273  00FFB9  69                 	db	105	;'i'
   274  00FFBA  6E                 	db	110	;'n'
   275  00FFBB  20                 	db	32
   276  00FFBC  20                 	db	32
   277  00FFBD  20                 	db	32
   278  00FFBE  20                 	db	32
   279  00FFBF  20                 	db	32
   280  00FFC0  20                 	db	32
   281  00FFC1  20                 	db	32
   282  00FFC2  20                 	db	32
   283  00FFC3  20                 	db	32
   284  00FFC4  20                 	db	32
   285  00FFC5  00                 	db	0
   286  00FFC6                     STR_4:
   287                           
   288                           ; BSR set to: 1
   289  00FFC6  31                 	db	49	;'1'
   290  00FFC7  30                 	db	48	;'0'
   291  00FFC8  20                 	db	32
   292  00FFC9  6D                 	db	109	;'m'
   293  00FFCA  69                 	db	105	;'i'
   294  00FFCB  6E                 	db	110	;'n'
   295  00FFCC  20                 	db	32
   296  00FFCD  20                 	db	32
   297  00FFCE  20                 	db	32
   298  00FFCF  20                 	db	32
   299  00FFD0  20                 	db	32
   300  00FFD1  20                 	db	32
   301  00FFD2  00                 	db	0
   302  00FFD3                     STR_5:
   303                           
   304                           ; BSR set to: 1
   305  00FFD3  68                 	db	104	;'h'
   306  00FFD4  6F                 	db	111	;'o'
   307  00FFD5  75                 	db	117	;'u'
   308  00FFD6  72                 	db	114	;'r'
   309  00FFD7  20                 	db	32
   310  00FFD8  20                 	db	32
   311  00FFD9  20                 	db	32
   312  00FFDA  20                 	db	32
   313  00FFDB  20                 	db	32
   314  00FFDC  20                 	db	32
   315  00FFDD  00                 	db	0
   316  00FFDE                     STR_10:
   317                           
   318                           ; BSR set to: 1
   319  00FFDE  53                 	db	83	;'S'
   320  00FFDF  50                 	db	80	;'P'
   321  00FFE0  3A                 	db	58	;':'
   322  00FFE1  25                 	db	37
   323  00FFE2  36                 	db	54	;'6'
   324  00FFE3  2E                 	db	46
   325  00FFE4  32                 	db	50	;'2'
   326  00FFE5  66                 	db	102	;'f'
   327  00FFE6  43                 	db	67	;'C'
   328  00FFE7  00                 	db	0
   329  00FFE8                     STR_7:
   330                           
   331                           ; BSR set to: 1
   332  00FFE8  43                 	db	67	;'C'
   333  00FFE9  54                 	db	84	;'T'
   334  00FFEA  3A                 	db	58	;':'
   335  00FFEB  25                 	db	37
   336  00FFEC  36                 	db	54	;'6'
   337  00FFED  2E                 	db	46
   338  00FFEE  32                 	db	50	;'2'
   339  00FFEF  66                 	db	102	;'f'
   340  00FFF0  43                 	db	67	;'C'
   341  00FFF1  00                 	db	0
   342  00FFF2                     STR_11:
   343                           
   344                           ; BSR set to: 1
   345  00FFF2  4D                 	db	77	;'M'
   346  00FFF3  44                 	db	68	;'D'
   347  00FFF4  3A                 	db	58	;':'
   348  00FFF5  20                 	db	32
   349  00FFF6  00                 	db	0
   350  00FFF7                     STR_8:
   351                           
   352                           ; BSR set to: 1
   353  00FFF7  43                 	db	67	;'C'
   354  00FFF8  4B                 	db	75	;'K'
   355  00FFF9  3A                 	db	58	;':'
   356  00FFFA  00                 	db	0
   357  00FFFB                     STR_9:
   358                           
   359                           ; BSR set to: 1
   360  00FFFB  48                 	db	72	;'H'
   361  00FFFC  54                 	db	84	;'T'
   362  00FFFD  3A                 	db	58	;':'
   363  00FFFE  00                 	db	0
   364                           
   365                           ; #config settings
   366  00FFFF  00                 	db	0	; dummy byte at the end
   367  0000                     
   368                           	psect	cinit
   369  002E60                     __pcinit:
   370                           	opt stack 0
   371  002E60                     start_initialization:
   372                           	opt stack 0
   373  002E60                     __initialization:
   374                           	opt stack 0
   375                           
   376                           ; Clear objects allocated to BANK1 (18 bytes)
   377  002E60  EE01  F082         	lfsr	0,__pbssBANK1
   378  002E64  0E12               	movlw	18
   379  002E66                     clear_0:
   380  002E66  6AEE               	clrf	postinc0,c
   381  002E68  06E8               	decf	wreg,f,c
   382  002E6A  E1FD               	bnz	clear_0
   383                           
   384                           ; Clear objects allocated to BANK0 (46 bytes)
   385  002E6C  EE00  F080         	lfsr	0,__pbssBANK0
   386  002E70  0E2E               	movlw	46
   387  002E72                     clear_1:
   388  002E72  6AEE               	clrf	postinc0,c
   389  002E74  06E8               	decf	wreg,f,c
   390  002E76  E1FD               	bnz	clear_1
   391                           
   392                           ; Clear objects allocated to COMRAM (6 bytes)
   393  002E78  6A6C               	clrf	(__pbssCOMRAM+5)& (0+255),c
   394  002E7A  6A6B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   395  002E7C  6A6A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   396  002E7E  6A69               	clrf	(__pbssCOMRAM+2)& (0+255),c
   397  002E80  6A68               	clrf	(__pbssCOMRAM+1)& (0+255),c
   398  002E82  6A67               	clrf	__pbssCOMRAM& (0+255),c
   399                           
   400                           ; Initialize objects allocated to BANK0 (2 bytes)
   401                           ; load TBLPTR registers with __pidataBANK0
   402  002E84  0E7C               	movlw	low __pidataBANK0
   403  002E86  6EF6               	movwf	tblptrl,c
   404  002E88  0E32               	movlw	high __pidataBANK0
   405  002E8A  6EF7               	movwf	tblptrh,c
   406  002E8C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   407  002E8E  6EF8               	movwf	tblptru,c
   408  002E90  0009               	tblrd		*+	;fetch initializer
   409  002E92  CFF5 F0D7          	movff	tablat,__pdataBANK0
   410  002E96  0009               	tblrd		*+	;fetch initializer
   411  002E98  CFF5 F0D8          	movff	tablat,__pdataBANK0+1
   412                           
   413                           ; Initialize objects allocated to COMRAM (4 bytes)
   414                           ; load TBLPTR registers with __pidataCOMRAM
   415  002E9C  0E78               	movlw	low __pidataCOMRAM
   416  002E9E  6EF6               	movwf	tblptrl,c
   417  002EA0  0E32               	movlw	high __pidataCOMRAM
   418  002EA2  6EF7               	movwf	tblptrh,c
   419  002EA4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   420  002EA6  6EF8               	movwf	tblptru,c
   421  002EA8  EE00  F06D         	lfsr	0,__pdataCOMRAM
   422  002EAC  EE10 F004          	lfsr	1,4
   423  002EB0                     copy_data0:
   424  002EB0  0009               	tblrd		*+
   425  002EB2  CFF5 FFEE          	movff	tablat,postinc0
   426  002EB6  50E5               	movf	postdec1,w,c
   427  002EB8  50E1               	movf	fsr1l,w,c
   428  002EBA  E1FA               	bnz	copy_data0
   429  002EBC                     end_of_initialization:
   430                           	opt stack 0
   431  002EBC                     __end_of__initialization:
   432                           	opt stack 0
   433  002EBC  9071               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   434  002EBE  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   435  002EC0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   436  002EC2  6EF8               	movwf	tblptru,c
   437  002EC4  0100               	movlb	0
   438  002EC6  EF28  F006         	goto	_main	;jump to C main() function
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	bssCOMRAM
   449  000067                     __pbssCOMRAM:
   450                           	opt stack 0
   451  000067                     _RPS:
   452                           	opt stack 0
   453  000067                     	ds	2
   454  000069                     _RPS_count:
   455                           	opt stack 0
   456  000069                     	ds	2
   457  00006B                     _ft:
   458                           	opt stack 0
   459  00006B                     	ds	2
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           postdec1	equ	0xFE5
   467                           fsr1l	equ	0xFE1
   468                           
   469                           	psect	dataCOMRAM
   470  00006D                     __pdataCOMRAM:
   471                           	opt stack 0
   472  00006D                     _LCD_INIT_STRING:
   473                           	opt stack 0
   474  00006D                     	ds	4
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1l	equ	0xFE1
   483                           
   484                           	psect	bssBANK0
   485  000080                     __pbssBANK0:
   486                           	opt stack 0
   487  000080                     _Buffer:
   488                           	opt stack 0
   489  000080                     	ds	32
   490  0000A0                     _HS:
   491                           	opt stack 0
   492  0000A0                     	ds	4
   493  0000A4                     _spf:
   494                           	opt stack 0
   495  0000A4                     	ds	4
   496  0000A8                     _tempf:
   497                           	opt stack 0
   498  0000A8                     	ds	4
   499  0000AC                     _timer_flag:
   500                           	opt stack 0
   501  0000AC                     	ds	2
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	dataBANK0
   512  0000D7                     __pdataBANK0:
   513                           	opt stack 0
   514  0000D7                     _flag:
   515                           	opt stack 0
   516  0000D7                     	ds	2
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           postdec1	equ	0xFE5
   524                           fsr1l	equ	0xFE1
   525                           
   526                           	psect	bssBANK1
   527  000182                     __pbssBANK1:
   528                           	opt stack 0
   529  000182                     _sp:
   530                           	opt stack 0
   531  000182                     	ds	4
   532  000186                     _temp:
   533                           	opt stack 0
   534  000186                     	ds	4
   535  00018A                     _hour:
   536                           	opt stack 0
   537  00018A                     	ds	2
   538  00018C                     _min:
   539                           	opt stack 0
   540  00018C                     	ds	2
   541  00018E                     _mode:
   542                           	opt stack 0
   543  00018E                     	ds	2
   544  000190                     _sec:
   545                           	opt stack 0
   546  000190                     	ds	2
   547  000192                     _start_flag:
   548                           	opt stack 0
   549  000192                     	ds	2
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559                           	psect	cstackBANK1
   560  000100                     __pcstackBANK1:
   561                           	opt stack 0
   562  000100                     display@LCDP:
   563                           	opt stack 0
   564                           
   565                           ; 64 bytes @ 0x0
   566  000100                     	ds	64
   567  000140                     display@LCD:
   568                           	opt stack 0
   569                           
   570                           ; 64 bytes @ 0x40
   571  000140                     	ds	64
   572  000180                     display@C:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x80
   576  000180                     	ds	1
   577  000181                     display@H:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x81
   581  000181                     	ds	1
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           postinc0	equ	0xFEE
   587                           wreg	equ	0xFE8
   588                           postdec1	equ	0xFE5
   589                           fsr1l	equ	0xFE1
   590                           
   591                           	psect	cstackBANK0
   592  0000AE                     __pcstackBANK0:
   593                           	opt stack 0
   594  0000AE                     ?_sprintf:
   595                           	opt stack 0
   596  0000AE                     sprintf@sp:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x0
   600  0000AE                     	ds	2
   601  0000B0                     sprintf@f:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x2
   605  0000B0                     	ds	8
   606  0000B8                     _sprintf$1688:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0xA
   610  0000B8                     	ds	4
   611  0000BC                     sprintf@ap:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0xE
   615  0000BC                     	ds	2
   616  0000BE                     sprintf@tmpval:
   617                           	opt stack 0
   618                           
   619                           ; 4 bytes @ 0x10
   620  0000BE                     	ds	4
   621  0000C2                     sprintf@val:
   622                           	opt stack 0
   623                           
   624                           ; 4 bytes @ 0x14
   625  0000C2                     	ds	4
   626  0000C6                     sprintf@exp:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x18
   630  0000C6                     	ds	2
   631  0000C8                     sprintf@flag:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x1A
   635  0000C8                     	ds	2
   636  0000CA                     sprintf@width:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x1C
   640  0000CA                     	ds	2
   641  0000CC                     sprintf@fval:
   642                           	opt stack 0
   643                           
   644                           ; 4 bytes @ 0x1E
   645  0000CC                     	ds	4
   646  0000D0                     sprintf@prec:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x22
   650  0000D0                     	ds	2
   651  0000D2                     sprintf@c:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x24
   655  0000D2                     	ds	1
   656  0000D3                     ??_display:
   657                           
   658                           ; 1 bytes @ 0x25
   659  0000D3                     	ds	2
   660  0000D5                     main@i:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x27
   664  0000D5                     	ds	2
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           postdec1	equ	0xFE5
   672                           fsr1l	equ	0xFE1
   673                           
   674                           	psect	cstackCOMRAM
   675  000001                     __pcstackCOMRAM:
   676                           	opt stack 0
   677  000001                     ??_highIsr:
   678  000001                     
   679                           ; 1 bytes @ 0x0
   680  000001                     	ds	14
   681  00000F                     ??_isdigit:
   682  00000F                     ??_delay_cycles:
   683  00000F                     ?_read_adc_raw_no_lib:
   684                           	opt stack 0
   685  00000F                     ?___wmul:
   686                           	opt stack 0
   687  00000F                     ?___awmod:
   688                           	opt stack 0
   689  00000F                     ?__tdiv_to_l_:
   690                           	opt stack 0
   691  00000F                     ?__div_to_l_:
   692                           	opt stack 0
   693  00000F                     ?___flneg:
   694                           	opt stack 0
   695  00000F                     ?___lldiv:
   696                           	opt stack 0
   697  00000F                     delay_ms@n:
   698                           	opt stack 0
   699  00000F                     ___wmul@multiplier:
   700                           	opt stack 0
   701  00000F                     ___awmod@dividend:
   702                           	opt stack 0
   703  00000F                     __div_to_l_@f1:
   704                           	opt stack 0
   705  00000F                     ___flneg@f1:
   706                           	opt stack 0
   707  00000F                     __tdiv_to_l_@f1:
   708                           	opt stack 0
   709  00000F                     ___lldiv@dividend:
   710                           	opt stack 0
   711                           
   712                           ; 4 bytes @ 0xE
   713  00000F                     	ds	1
   714  000010                     _isdigit$1314:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0xF
   718  000010                     	ds	1
   719  000011                     ??_read_adc_raw_no_lib:
   720  000011                     isdigit@c:
   721                           	opt stack 0
   722  000011                     delay_ms@i:
   723                           	opt stack 0
   724  000011                     ___wmul@multiplicand:
   725                           	opt stack 0
   726  000011                     ___awmod@divisor:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x10
   730  000011                     	ds	1
   731  000012                     delay_cycles@n:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x11
   735  000012                     	ds	1
   736  000013                     ___awmod@counter:
   737                           	opt stack 0
   738  000013                     delay_cycles@x:
   739                           	opt stack 0
   740  000013                     read_adc_raw_no_lib@raw_value:
   741                           	opt stack 0
   742  000013                     ___wmul@product:
   743                           	opt stack 0
   744  000013                     __div_to_l_@f2:
   745                           	opt stack 0
   746  000013                     __tdiv_to_l_@f2:
   747                           	opt stack 0
   748  000013                     ___lldiv@divisor:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x12
   752  000013                     	ds	1
   753  000014                     ___awmod@sign:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x13
   757  000014                     	ds	1
   758  000015                     ??_lcd_send_nibble:
   759  000015                     ?___awdiv:
   760                           	opt stack 0
   761  000015                     ?___xxtofl:
   762                           	opt stack 0
   763  000015                     read_adc_raw_no_lib@channel:
   764                           	opt stack 0
   765  000015                     ___awdiv@dividend:
   766                           	opt stack 0
   767  000015                     ___xxtofl@val:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x14
   771  000015                     	ds	1
   772  000016                     lcd_send_nibble@n:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x15
   776  000016                     	ds	1
   777  000017                     ??__tdiv_to_l_:
   778  000017                     lcd_send_byte@n:
   779                           	opt stack 0
   780  000017                     ___awdiv@divisor:
   781                           	opt stack 0
   782  000017                     __div_to_l_@quot:
   783                           	opt stack 0
   784  000017                     ___lldiv@quotient:
   785                           	opt stack 0
   786                           
   787                           ; 4 bytes @ 0x16
   788  000017                     	ds	1
   789  000018                     lcd_send_byte@cm_data:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x17
   793  000018                     	ds	1
   794  000019                     ??___xxtofl:
   795  000019                     lcd_init@i:
   796                           	opt stack 0
   797  000019                     lcd_gotoxy@y:
   798                           	opt stack 0
   799  000019                     ___awdiv@counter:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x18
   803  000019                     	ds	1
   804  00001A                     lcd_gotoxy@x:
   805                           	opt stack 0
   806  00001A                     ___awdiv@sign:
   807                           	opt stack 0
   808  00001A                     __tdiv_to_l_@quot:
   809                           	opt stack 0
   810                           
   811                           ; 4 bytes @ 0x19
   812  00001A                     	ds	1
   813  00001B                     lcd_gotoxy@address:
   814                           	opt stack 0
   815  00001B                     __div_to_l_@cntr:
   816                           	opt stack 0
   817  00001B                     ___lldiv@counter:
   818                           	opt stack 0
   819  00001B                     ___awdiv@quotient:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x1A
   823  00001B                     	ds	1
   824  00001C                     ?___llmod:
   825                           	opt stack 0
   826  00001C                     lcd_putc@c:
   827                           	opt stack 0
   828  00001C                     __div_to_l_@exp1:
   829                           	opt stack 0
   830  00001C                     ___llmod@dividend:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x1B
   834  00001C                     	ds	1
   835  00001D                     ?___flmul:
   836                           	opt stack 0
   837  00001D                     ___xxtofl@sign:
   838                           	opt stack 0
   839  00001D                     lcd_puts@s:
   840                           	opt stack 0
   841  00001D                     ___flmul@b:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x1C
   845  00001D                     	ds	1
   846  00001E                     __tdiv_to_l_@cntr:
   847                           	opt stack 0
   848  00001E                     ___xxtofl@exp:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x1D
   852  00001E                     	ds	1
   853  00001F                     __tdiv_to_l_@exp1:
   854                           	opt stack 0
   855  00001F                     ___xxtofl@arg:
   856                           	opt stack 0
   857                           
   858                           ; 4 bytes @ 0x1E
   859  00001F                     	ds	1
   860  000020                     ___llmod@divisor:
   861                           	opt stack 0
   862                           
   863                           ; 4 bytes @ 0x1F
   864  000020                     	ds	1
   865  000021                     ___flmul@a:
   866                           	opt stack 0
   867                           
   868                           ; 4 bytes @ 0x20
   869  000021                     	ds	2
   870  000023                     ?___fldiv:
   871                           	opt stack 0
   872  000023                     ___fldiv@b:
   873                           	opt stack 0
   874                           
   875                           ; 4 bytes @ 0x22
   876  000023                     	ds	1
   877  000024                     ___llmod@counter:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x23
   881  000024                     	ds	1
   882  000025                     ??___flmul:
   883                           
   884                           ; 1 bytes @ 0x24
   885  000025                     	ds	2
   886  000027                     ___fldiv@a:
   887                           	opt stack 0
   888                           
   889                           ; 4 bytes @ 0x26
   890  000027                     	ds	2
   891  000029                     ___flmul@sign:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x28
   895  000029                     	ds	1
   896  00002A                     ___flmul@grs:
   897                           	opt stack 0
   898                           
   899                           ; 4 bytes @ 0x29
   900  00002A                     	ds	1
   901  00002B                     ??___fldiv:
   902                           
   903                           ; 1 bytes @ 0x2A
   904  00002B                     	ds	3
   905  00002E                     ___flmul@aexp:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x2D
   909  00002E                     	ds	1
   910  00002F                     ___fldiv@sign:
   911                           	opt stack 0
   912  00002F                     ___flmul@bexp:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x2E
   916  00002F                     	ds	1
   917  000030                     ___fldiv@rem:
   918                           	opt stack 0
   919  000030                     ___flmul@prod:
   920                           	opt stack 0
   921                           
   922                           ; 4 bytes @ 0x2F
   923  000030                     	ds	4
   924  000034                     ___fldiv@new_exp:
   925                           	opt stack 0
   926  000034                     ___flmul@temp:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x33
   930  000034                     	ds	2
   931  000036                     ?_fround:
   932                           	opt stack 0
   933  000036                     ?_scale:
   934                           	opt stack 0
   935  000036                     ___fldiv@grs:
   936                           	opt stack 0
   937                           
   938                           ; 4 bytes @ 0x35
   939  000036                     	ds	4
   940  00003A                     ___fldiv@bexp:
   941                           	opt stack 0
   942  00003A                     _fround$1686:
   943                           	opt stack 0
   944  00003A                     _scale$1687:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x39
   948  00003A                     	ds	1
   949  00003B                     ___fldiv@aexp:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x3A
   953  00003B                     	ds	1
   954  00003C                     ?_read_adc_voltage:
   955                           	opt stack 0
   956                           
   957                           ; 4 bytes @ 0x3B
   958  00003C                     	ds	2
   959  00003E                     scale@scl:
   960                           	opt stack 0
   961  00003E                     _fround$1685:
   962                           	opt stack 0
   963                           
   964                           ; 4 bytes @ 0x3D
   965  00003E                     	ds	1
   966  00003F                     ?___fltol:
   967                           	opt stack 0
   968  00003F                     ___fltol@f1:
   969                           	opt stack 0
   970                           
   971                           ; 4 bytes @ 0x3E
   972  00003F                     	ds	1
   973  000040                     read_adc_voltage@voltage:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x3F
   977  000040                     	ds	2
   978  000042                     fround@prec:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x41
   982  000042                     	ds	1
   983  000043                     ??___fltol:
   984  000043                     ?___fladd:
   985                           	opt stack 0
   986  000043                     ___fladd@b:
   987                           	opt stack 0
   988                           
   989                           ; 4 bytes @ 0x42
   990  000043                     	ds	1
   991  000044                     read_adc_voltage@raw_value:
   992                           	opt stack 0
   993                           
   994                           ; 2 bytes @ 0x43
   995  000044                     	ds	2
   996  000046                     read_adc_voltage@channel:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x45
  1000  000046                     	ds	1
  1001  000047                     ___fltol@sign1:
  1002                           	opt stack 0
  1003  000047                     ___fladd@a:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x46
  1007  000047                     	ds	1
  1008  000048                     ___fltol@exp1:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x47
  1012  000048                     	ds	3
  1013  00004B                     ??___fladd:
  1014                           
  1015                           ; 1 bytes @ 0x4A
  1016  00004B                     	ds	8
  1017  000053                     ___fladd@signs:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x52
  1021  000053                     	ds	1
  1022  000054                     ___fladd@aexp:
  1023                           	opt stack 0
  1024                           
  1025                           ; 1 bytes @ 0x53
  1026  000054                     	ds	1
  1027  000055                     ___fladd@bexp:
  1028                           	opt stack 0
  1029                           
  1030                           ; 1 bytes @ 0x54
  1031  000055                     	ds	1
  1032  000056                     ___fladd@grs:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0x55
  1036  000056                     	ds	1
  1037  000057                     ?___flsub:
  1038                           	opt stack 0
  1039  000057                     ___flge@ff1:
  1040                           	opt stack 0
  1041  000057                     ___flsub@b:
  1042                           	opt stack 0
  1043                           
  1044                           ; 4 bytes @ 0x56
  1045  000057                     	ds	4
  1046  00005B                     ___flge@ff2:
  1047                           	opt stack 0
  1048  00005B                     ___flsub@a:
  1049                           	opt stack 0
  1050                           
  1051                           ; 4 bytes @ 0x5A
  1052  00005B                     	ds	4
  1053  00005F                     ??___flge:
  1054                           
  1055                           ; 1 bytes @ 0x5E
  1056  00005F                     	ds	4
  1057  000063                     ??_sprintf:
  1058                           
  1059                           ; 1 bytes @ 0x62
  1060  000063                     	ds	4
  1061  000067                     tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           postdec1	equ	0xFE5
  1068                           fsr1l	equ	0xFE1
  1069                           
  1070                           ; 1 bytes @ 0x66
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1073 ;;
  1074 ;; *************** function _main *****************
  1075 ;; Defined at:
  1076 ;;		line 251 in file "hw.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  i               2   39[BANK0 ] int 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;Total ram usage:        2 bytes
  1095 ;; Hardware stack levels required when called:   10
  1096 ;; This function calls:
  1097 ;;		___fladd
  1098 ;;		___flge
  1099 ;;		___flmul
  1100 ;;		_delay_ms
  1101 ;;		_display
  1102 ;;		_init_adc_no_lib
  1103 ;;		_lcd_init
  1104 ;;		_lcd_send_byte
  1105 ;;		_read_adc_voltage
  1106 ;;		_setupPorts
  1107 ;; This function is called by:
  1108 ;;		Startup code after reset
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text0
  1113  000C50                     __ptext0:
  1114                           	opt stack 0
  1115  000C50                     _main:
  1116                           	opt stack 21
  1117                           
  1118                           ;hw.c: 252: setupPorts();
  1119                           
  1120                           ; BSR set to: 1
  1121                           ;incstack = 0
  1122  000C50  ECFB  F018         	call	_setupPorts	;wreg free
  1123                           
  1124                           ;hw.c: 253: init_adc_no_lib();
  1125  000C54  EC31  F019         	call	_init_adc_no_lib	;wreg free
  1126                           
  1127                           ;hw.c: 254: INTCON3bits.INT2IF=1;
  1128  000C58  82F0               	bsf	intcon3,1,c	;volatile
  1129                           
  1130                           ;hw.c: 255: INTCON = 0;
  1131  000C5A  0E00               	movlw	0
  1132  000C5C  6EF2               	movwf	intcon,c	;volatile
  1133                           
  1134                           ;hw.c: 257: INTCON = 0;
  1135  000C5E  0E00               	movlw	0
  1136  000C60  6EF2               	movwf	intcon,c	;volatile
  1137                           
  1138                           ;hw.c: 258: RCONbits.IPEN =0;
  1139  000C62  9ED0               	bcf	4048,7,c	;volatile
  1140                           
  1141                           ;hw.c: 260: INTCONbits.INT0IE = 1;
  1142  000C64  88F2               	bsf	intcon,4,c	;volatile
  1143                           
  1144                           ;hw.c: 261: INTCONbits.TMR0IE=1;
  1145  000C66  8AF2               	bsf	intcon,5,c	;volatile
  1146                           
  1147                           ;hw.c: 264: INTCON2 = 0;
  1148  000C68  0E00               	movlw	0
  1149  000C6A  6EF1               	movwf	intcon2,c	;volatile
  1150                           
  1151                           ;hw.c: 266: INTCON3 = 0;
  1152  000C6C  0E00               	movlw	0
  1153  000C6E  6EF0               	movwf	intcon3,c	;volatile
  1154                           
  1155                           ;hw.c: 267: INTCON3bits.INT1IE = 1;
  1156  000C70  86F0               	bsf	intcon3,3,c	;volatile
  1157                           
  1158                           ;hw.c: 269: INTCON2bits.INTEDG1 = 1;
  1159  000C72  8AF1               	bsf	intcon2,5,c	;volatile
  1160                           
  1161                           ;hw.c: 270: INTCON2bits.INTEDG0= 1;
  1162  000C74  8CF1               	bsf	intcon2,6,c	;volatile
  1163                           
  1164                           ;hw.c: 271: T0CON=0X80;
  1165  000C76  0E80               	movlw	128
  1166  000C78  6ED5               	movwf	4053,c	;volatile
  1167                           
  1168                           ;hw.c: 273: PIE1 = 0;
  1169  000C7A  0E00               	movlw	0
  1170  000C7C  6E9D               	movwf	3997,c	;volatile
  1171                           
  1172                           ;hw.c: 274: PIR1 = 0;
  1173  000C7E  0E00               	movlw	0
  1174  000C80  6E9E               	movwf	3998,c	;volatile
  1175                           
  1176                           ;hw.c: 275: IPR1 = 0;
  1177  000C82  0E00               	movlw	0
  1178  000C84  6E9F               	movwf	3999,c	;volatile
  1179                           
  1180                           ;hw.c: 276: PIE2 = 0;
  1181  000C86  0E00               	movlw	0
  1182  000C88  6EA0               	movwf	4000,c	;volatile
  1183                           
  1184                           ;hw.c: 277: PIE2 = 0;
  1185  000C8A  0E00               	movlw	0
  1186  000C8C  6EA0               	movwf	4000,c	;volatile
  1187                           
  1188                           ;hw.c: 278: PIR2 = 0;
  1189  000C8E  0E00               	movlw	0
  1190  000C90  6EA1               	movwf	4001,c	;volatile
  1191                           
  1192                           ;hw.c: 279: IPR2 = 0;
  1193  000C92  0E00               	movlw	0
  1194  000C94  6EA2               	movwf	4002,c	;volatile
  1195                           
  1196                           ;hw.c: 281: INTCONbits.GIEH = 1;
  1197  000C96  8EF2               	bsf	intcon,7,c	;volatile
  1198                           
  1199                           ;hw.c: 282: INTCONbits.GIEL = 1;
  1200  000C98  8CF2               	bsf	intcon,6,c	;volatile
  1201                           
  1202                           ;hw.c: 284: lcd_init();
  1203  000C9A  EC98  F017         	call	_lcd_init	;wreg free
  1204                           
  1205                           ;hw.c: 285: lcd_send_byte(0, 1);
  1206  000C9E  0E01               	movlw	1
  1207  000CA0  6E17               	movwf	lcd_send_byte@n,c
  1208  000CA2  0E00               	movlw	0
  1209  000CA4  EC4F  F018         	call	_lcd_send_byte
  1210                           
  1211                           ;hw.c: 287: PORTCbits.RC1=1;
  1212  000CA8  8282               	bsf	3970,1,c	;volatile
  1213                           
  1214                           ;hw.c: 288: start_flag=0;
  1215  000CAA  0E00               	movlw	0
  1216  000CAC  0101               	movlb	1	; () banked
  1217  000CAE  6F93               	movwf	(_start_flag+1)& (0+255),b
  1218  000CB0  0E00               	movlw	0
  1219  000CB2  6F92               	movwf	_start_flag& (0+255),b
  1220  000CB4                     l282:
  1221  000CB4  0004               	clrwdt		;# 
  1222                           
  1223                           ;hw.c: 296: spf = read_adc_voltage(0);
  1224  000CB6  0E00               	movlw	0
  1225  000CB8  EC76  F016         	call	_read_adc_voltage
  1226  000CBC  C03C  F0A4         	movff	?_read_adc_voltage,_spf
  1227  000CC0  C03D  F0A5         	movff	?_read_adc_voltage+1,_spf+1
  1228  000CC4  C03E  F0A6         	movff	?_read_adc_voltage+2,_spf+2
  1229  000CC8  C03F  F0A7         	movff	?_read_adc_voltage+3,_spf+3
  1230                           
  1231                           ;hw.c: 297: sp=spf*40.0;
  1232  000CCC  C0A4  F01D         	movff	_spf,___flmul@b
  1233  000CD0  C0A5  F01E         	movff	_spf+1,___flmul@b+1
  1234  000CD4  C0A6  F01F         	movff	_spf+2,___flmul@b+2
  1235  000CD8  C0A7  F020         	movff	_spf+3,___flmul@b+3
  1236  000CDC  0E00               	movlw	0
  1237  000CDE  6E21               	movwf	___flmul@a,c
  1238  000CE0  0E00               	movlw	0
  1239  000CE2  6E22               	movwf	___flmul@a+1,c
  1240  000CE4  0E20               	movlw	32
  1241  000CE6  6E23               	movwf	___flmul@a+2,c
  1242  000CE8  0E42               	movlw	66
  1243  000CEA  6E24               	movwf	___flmul@a+3,c
  1244  000CEC  ECDB  F00B         	call	___flmul	;wreg free
  1245  000CF0  C01D  F182         	movff	?___flmul,_sp
  1246  000CF4  C01E  F183         	movff	?___flmul+1,_sp+1
  1247  000CF8  C01F  F184         	movff	?___flmul+2,_sp+2
  1248  000CFC  C020  F185         	movff	?___flmul+3,_sp+3
  1249                           
  1250                           ;hw.c: 300: tempf =read_adc_voltage(2);
  1251  000D00  0E02               	movlw	2
  1252  000D02  EC76  F016         	call	_read_adc_voltage
  1253  000D06  C03C  F0A8         	movff	?_read_adc_voltage,_tempf
  1254  000D0A  C03D  F0A9         	movff	?_read_adc_voltage+1,_tempf+1
  1255  000D0E  C03E  F0AA         	movff	?_read_adc_voltage+2,_tempf+2
  1256  000D12  C03F  F0AB         	movff	?_read_adc_voltage+3,_tempf+3
  1257                           
  1258                           ;hw.c: 301: temp=tempf*200.0;
  1259  000D16  C0A8  F01D         	movff	_tempf,___flmul@b
  1260  000D1A  C0A9  F01E         	movff	_tempf+1,___flmul@b+1
  1261  000D1E  C0AA  F01F         	movff	_tempf+2,___flmul@b+2
  1262  000D22  C0AB  F020         	movff	_tempf+3,___flmul@b+3
  1263  000D26  0E00               	movlw	0
  1264  000D28  6E21               	movwf	___flmul@a,c
  1265  000D2A  0E00               	movlw	0
  1266  000D2C  6E22               	movwf	___flmul@a+1,c
  1267  000D2E  0E48               	movlw	72
  1268  000D30  6E23               	movwf	___flmul@a+2,c
  1269  000D32  0E43               	movlw	67
  1270  000D34  6E24               	movwf	___flmul@a+3,c
  1271  000D36  ECDB  F00B         	call	___flmul	;wreg free
  1272  000D3A  C01D  F186         	movff	?___flmul,_temp
  1273  000D3E  C01E  F187         	movff	?___flmul+1,_temp+1
  1274  000D42  C01F  F188         	movff	?___flmul+2,_temp+2
  1275  000D46  C020  F189         	movff	?___flmul+3,_temp+3
  1276                           
  1277                           ;hw.c: 305: if(temp <= sp) {
  1278  000D4A  C182  F057         	movff	_sp,___flge@ff1
  1279  000D4E  C183  F058         	movff	_sp+1,___flge@ff1+1
  1280  000D52  C184  F059         	movff	_sp+2,___flge@ff1+2
  1281  000D56  C185  F05A         	movff	_sp+3,___flge@ff1+3
  1282  000D5A  C186  F05B         	movff	_temp,___flge@ff2
  1283  000D5E  C187  F05C         	movff	_temp+1,___flge@ff2+1
  1284  000D62  C188  F05D         	movff	_temp+2,___flge@ff2+2
  1285  000D66  C189  F05E         	movff	_temp+3,___flge@ff2+3
  1286  000D6A  ECF3  F014         	call	___flge	;wreg free
  1287  000D6E  A0D8               	btfss	status,0,c
  1288  000D70  D002               	goto	l5330
  1289                           
  1290                           ;hw.c: 306: PORTCbits.RC5 = 1;
  1291  000D72  8A82               	bsf	3970,5,c	;volatile
  1292                           
  1293                           ;hw.c: 307: }
  1294  000D74  D026               	goto	l5334
  1295  000D76                     l5330:
  1296                           
  1297                           ;hw.c: 308: else if(temp >= (sp + HS)) {
  1298  000D76  C186  F057         	movff	_temp,___flge@ff1
  1299  000D7A  C187  F058         	movff	_temp+1,___flge@ff1+1
  1300  000D7E  C188  F059         	movff	_temp+2,___flge@ff1+2
  1301  000D82  C189  F05A         	movff	_temp+3,___flge@ff1+3
  1302  000D86  C0A0  F047         	movff	_HS,___fladd@a
  1303  000D8A  C0A1  F048         	movff	_HS+1,___fladd@a+1
  1304  000D8E  C0A2  F049         	movff	_HS+2,___fladd@a+2
  1305  000D92  C0A3  F04A         	movff	_HS+3,___fladd@a+3
  1306  000D96  C182  F043         	movff	_sp,___fladd@b
  1307  000D9A  C183  F044         	movff	_sp+1,___fladd@b+1
  1308  000D9E  C184  F045         	movff	_sp+2,___fladd@b+2
  1309  000DA2  C185  F046         	movff	_sp+3,___fladd@b+3
  1310  000DA6  EC83  F00D         	call	___fladd	;wreg free
  1311  000DAA  C043  F05B         	movff	?___fladd,___flge@ff2
  1312  000DAE  C044  F05C         	movff	?___fladd+1,___flge@ff2+1
  1313  000DB2  C045  F05D         	movff	?___fladd+2,___flge@ff2+2
  1314  000DB6  C046  F05E         	movff	?___fladd+3,___flge@ff2+3
  1315  000DBA  ECF3  F014         	call	___flge	;wreg free
  1316  000DBE  B0D8               	btfsc	status,0,c
  1317                           
  1318                           ;hw.c: 309: PORTCbits.RC5 = 0;
  1319  000DC0  9A82               	bcf	3970,5,c	;volatile
  1320  000DC2                     l5334:
  1321                           
  1322                           ;hw.c: 311: }
  1323                           ;hw.c: 317: if(start_flag==1){
  1324  000DC2  0101               	movlb	1	; () banked
  1325  000DC4  0592               	decf	_start_flag& (0+255),w,b
  1326  000DC6  0101               	movlb	1	; () banked
  1327  000DC8  1193               	iorwf	(_start_flag+1)& (0+255),w,b
  1328  000DCA  A4D8               	btfss	status,2,c
  1329  000DCC  D06E               	goto	l5366
  1330                           
  1331                           ; BSR set to: 1
  1332                           ;hw.c: 318: if(sec>0 || min>0 || hour>0 ){
  1333  000DCE  0101               	movlb	1	; () banked
  1334  000DD0  BF91               	btfsc	(_sec+1)& (0+255),7,b
  1335  000DD2  D007               	goto	l5338
  1336  000DD4  0101               	movlb	1	; () banked
  1337  000DD6  5191               	movf	(_sec+1)& (0+255),w,b
  1338  000DD8  E118               	bnz	l5342
  1339  000DDA  0101               	movlb	1	; () banked
  1340  000DDC  0590               	decf	_sec& (0+255),w,b
  1341  000DDE  B0D8               	btfsc	status,0,c
  1342  000DE0  D014               	goto	l5342
  1343  000DE2                     l5338:
  1344                           
  1345                           ; BSR set to: 1
  1346  000DE2  0101               	movlb	1	; () banked
  1347  000DE4  BF8D               	btfsc	(_min+1)& (0+255),7,b
  1348  000DE6  D007               	goto	l5340
  1349  000DE8  0101               	movlb	1	; () banked
  1350  000DEA  518D               	movf	(_min+1)& (0+255),w,b
  1351  000DEC  E10E               	bnz	l5342
  1352  000DEE  0101               	movlb	1	; () banked
  1353  000DF0  058C               	decf	_min& (0+255),w,b
  1354  000DF2  B0D8               	btfsc	status,0,c
  1355  000DF4  D00A               	goto	l5342
  1356  000DF6                     l5340:
  1357                           
  1358                           ; BSR set to: 1
  1359  000DF6  0101               	movlb	1	; () banked
  1360  000DF8  BF8B               	btfsc	(_hour+1)& (0+255),7,b
  1361  000DFA  D040               	goto	l5358
  1362  000DFC  0101               	movlb	1	; () banked
  1363  000DFE  518B               	movf	(_hour+1)& (0+255),w,b
  1364  000E00  E104               	bnz	l5342
  1365  000E02  0101               	movlb	1	; () banked
  1366  000E04  058A               	decf	_hour& (0+255),w,b
  1367  000E06  A0D8               	btfss	status,0,c
  1368  000E08  D039               	goto	l5358
  1369  000E0A                     l5342:
  1370                           
  1371                           ; BSR set to: 1
  1372                           ;hw.c: 319: if(sec==0 && min==0){
  1373  000E0A  0101               	movlb	1	; () banked
  1374  000E0C  5190               	movf	_sec& (0+255),w,b
  1375  000E0E  0101               	movlb	1	; () banked
  1376  000E10  1191               	iorwf	(_sec+1)& (0+255),w,b
  1377  000E12  A4D8               	btfss	status,2,c
  1378  000E14  D01A               	goto	l290
  1379                           
  1380                           ; BSR set to: 1
  1381  000E16  0101               	movlb	1	; () banked
  1382  000E18  518C               	movf	_min& (0+255),w,b
  1383  000E1A  0101               	movlb	1	; () banked
  1384  000E1C  118D               	iorwf	(_min+1)& (0+255),w,b
  1385  000E1E  A4D8               	btfss	status,2,c
  1386  000E20  D014               	goto	l290
  1387                           
  1388                           ; BSR set to: 1
  1389                           ;hw.c: 320: hour=hour-1;
  1390  000E22  0EFF               	movlw	255
  1391  000E24  0101               	movlb	1	; () banked
  1392  000E26  258A               	addwf	_hour& (0+255),w,b
  1393  000E28  0101               	movlb	1	; () banked
  1394  000E2A  6F8A               	movwf	_hour& (0+255),b
  1395  000E2C  0EFF               	movlw	255
  1396  000E2E  0101               	movlb	1	; () banked
  1397  000E30  218B               	addwfc	(_hour+1)& (0+255),w,b
  1398  000E32  0101               	movlb	1	; () banked
  1399  000E34  6F8B               	movwf	(_hour+1)& (0+255),b
  1400                           
  1401                           ; BSR set to: 1
  1402                           ;hw.c: 321: min=59;
  1403  000E36  0E00               	movlw	0
  1404  000E38  0101               	movlb	1	; () banked
  1405  000E3A  6F8D               	movwf	(_min+1)& (0+255),b
  1406  000E3C  0E3B               	movlw	59
  1407  000E3E  6F8C               	movwf	_min& (0+255),b
  1408                           
  1409                           ; BSR set to: 1
  1410                           ;hw.c: 322: sec=59;
  1411  000E40  0E00               	movlw	0
  1412  000E42  0101               	movlb	1	; () banked
  1413  000E44  6F91               	movwf	(_sec+1)& (0+255),b
  1414  000E46  0E3B               	movlw	59
  1415  000E48  6F90               	movwf	_sec& (0+255),b
  1416  000E4A                     l290:
  1417                           
  1418                           ; BSR set to: 1
  1419                           ;hw.c: 324: }
  1420                           ;hw.c: 325: if(sec==0){
  1421  000E4A  0101               	movlb	1	; () banked
  1422  000E4C  5190               	movf	_sec& (0+255),w,b
  1423  000E4E  0101               	movlb	1	; () banked
  1424  000E50  1191               	iorwf	(_sec+1)& (0+255),w,b
  1425  000E52  A4D8               	btfss	status,2,c
  1426  000E54  D00F               	goto	l5356
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;hw.c: 326: min=min-1;
  1430  000E56  0EFF               	movlw	255
  1431  000E58  0101               	movlb	1	; () banked
  1432  000E5A  258C               	addwf	_min& (0+255),w,b
  1433  000E5C  0101               	movlb	1	; () banked
  1434  000E5E  6F8C               	movwf	_min& (0+255),b
  1435  000E60  0EFF               	movlw	255
  1436  000E62  0101               	movlb	1	; () banked
  1437  000E64  218D               	addwfc	(_min+1)& (0+255),w,b
  1438  000E66  0101               	movlb	1	; () banked
  1439  000E68  6F8D               	movwf	(_min+1)& (0+255),b
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;hw.c: 327: sec=59;
  1443  000E6A  0E00               	movlw	0
  1444  000E6C  0101               	movlb	1	; () banked
  1445  000E6E  6F91               	movwf	(_sec+1)& (0+255),b
  1446  000E70  0E3B               	movlw	59
  1447  000E72  6F90               	movwf	_sec& (0+255),b
  1448  000E74                     l5356:
  1449                           
  1450                           ; BSR set to: 1
  1451                           ;hw.c: 328: }
  1452                           ;hw.c: 330: sec--;
  1453  000E74  0101               	movlb	1	; () banked
  1454  000E76  0790               	decf	_sec& (0+255),f,b
  1455  000E78  A0D8               	btfss	status,0,c
  1456  000E7A  0791               	decf	(_sec+1)& (0+255),f,b
  1457  000E7C                     l5358:
  1458                           
  1459                           ; BSR set to: 1
  1460                           ;hw.c: 331: }
  1461                           ;hw.c: 333: if(sec==0&& min==0&&hour==0)
  1462  000E7C  0101               	movlb	1	; () banked
  1463  000E7E  5190               	movf	_sec& (0+255),w,b
  1464  000E80  0101               	movlb	1	; () banked
  1465  000E82  1191               	iorwf	(_sec+1)& (0+255),w,b
  1466  000E84  A4D8               	btfss	status,2,c
  1467  000E86  D011               	goto	l5366
  1468                           
  1469                           ; BSR set to: 1
  1470  000E88  0101               	movlb	1	; () banked
  1471  000E8A  518C               	movf	_min& (0+255),w,b
  1472  000E8C  0101               	movlb	1	; () banked
  1473  000E8E  118D               	iorwf	(_min+1)& (0+255),w,b
  1474  000E90  A4D8               	btfss	status,2,c
  1475  000E92  D00B               	goto	l5366
  1476                           
  1477                           ; BSR set to: 1
  1478  000E94  0101               	movlb	1	; () banked
  1479  000E96  518A               	movf	_hour& (0+255),w,b
  1480  000E98  0101               	movlb	1	; () banked
  1481  000E9A  118B               	iorwf	(_hour+1)& (0+255),w,b
  1482  000E9C  A4D8               	btfss	status,2,c
  1483  000E9E  D005               	goto	l5366
  1484                           
  1485                           ; BSR set to: 1
  1486                           ;hw.c: 334: {
  1487                           ;hw.c: 335: flag=1;
  1488  000EA0  0E00               	movlw	0
  1489  000EA2  0100               	movlb	0	; () banked
  1490  000EA4  6FD8               	movwf	(_flag+1)& (0+255),b
  1491  000EA6  0E01               	movlw	1
  1492  000EA8  6FD7               	movwf	_flag& (0+255),b
  1493  000EAA                     l5366:
  1494                           
  1495                           ;hw.c: 336: }
  1496                           ;hw.c: 338: }
  1497                           ;hw.c: 341: if(flag){
  1498  000EAA  0100               	movlb	0	; () banked
  1499  000EAC  51D7               	movf	_flag& (0+255),w,b
  1500  000EAE  0100               	movlb	0	; () banked
  1501  000EB0  11D8               	iorwf	(_flag+1)& (0+255),w,b
  1502  000EB2  B4D8               	btfsc	status,2,c
  1503  000EB4  D021               	goto	l5384
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;hw.c: 342: for(int i=0;i<4;i++){
  1507  000EB6  0E00               	movlw	0
  1508  000EB8  0100               	movlb	0	; () banked
  1509  000EBA  6FD6               	movwf	(main@i+1)& (0+255),b
  1510  000EBC  0E00               	movlw	0
  1511  000EBE  6FD5               	movwf	main@i& (0+255),b
  1512  000EC0                     l5370:
  1513                           
  1514                           ; BSR set to: 0
  1515  000EC0  0100               	movlb	0	; () banked
  1516  000EC2  BFD6               	btfsc	(main@i+1)& (0+255),7,b
  1517  000EC4  D008               	goto	l294
  1518  000EC6  0100               	movlb	0	; () banked
  1519  000EC8  51D6               	movf	(main@i+1)& (0+255),w,b
  1520  000ECA  E111               	bnz	l5382
  1521  000ECC  0E04               	movlw	4
  1522  000ECE  0100               	movlb	0	; () banked
  1523  000ED0  5DD5               	subwf	main@i& (0+255),w,b
  1524  000ED2  B0D8               	btfsc	status,0,c
  1525  000ED4  D00C               	goto	l5382
  1526  000ED6                     l294:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;hw.c: 343: PORTCbits.RC1=0;
  1530  000ED6  9282               	bcf	3970,1,c	;volatile
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;hw.c: 344: delay_ms(100);
  1534  000ED8  0E00               	movlw	0
  1535  000EDA  6E10               	movwf	delay_ms@n+1,c
  1536  000EDC  0E64               	movlw	100
  1537  000EDE  6E0F               	movwf	delay_ms@n,c
  1538  000EE0  ECD8  F018         	call	_delay_ms	;wreg free
  1539                           
  1540                           ;hw.c: 345: PORTCbits.RC1=1;
  1541  000EE4  8282               	bsf	3970,1,c	;volatile
  1542  000EE6  0100               	movlb	0	; () banked
  1543  000EE8  4BD5               	infsnz	main@i& (0+255),f,b
  1544  000EEA  2BD6               	incf	(main@i+1)& (0+255),f,b
  1545  000EEC  D7E9               	goto	l5370
  1546  000EEE                     l5382:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;hw.c: 348: }
  1550                           ;hw.c: 349: flag=0;
  1551  000EEE  0E00               	movlw	0
  1552  000EF0  0100               	movlb	0	; () banked
  1553  000EF2  6FD8               	movwf	(_flag+1)& (0+255),b
  1554  000EF4  0E00               	movlw	0
  1555  000EF6  6FD7               	movwf	_flag& (0+255),b
  1556  000EF8                     l5384:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;hw.c: 351: }
  1560                           ;hw.c: 356: if(PORTBbits.RB3==0){
  1561  000EF8  B681               	btfsc	3969,3,c	;volatile
  1562  000EFA  D0E3               	goto	l5466
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;hw.c: 357: delay_ms(500);
  1566  000EFC  0E01               	movlw	1
  1567  000EFE  6E10               	movwf	delay_ms@n+1,c
  1568  000F00  0EF4               	movlw	244
  1569  000F02  6E0F               	movwf	delay_ms@n,c
  1570  000F04  ECD8  F018         	call	_delay_ms	;wreg free
  1571                           
  1572                           ;hw.c: 358: if(mode==0){
  1573  000F08  0101               	movlb	1	; () banked
  1574  000F0A  518E               	movf	_mode& (0+255),w,b
  1575  000F0C  0101               	movlb	1	; () banked
  1576  000F0E  118F               	iorwf	(_mode+1)& (0+255),w,b
  1577  000F10  A4D8               	btfss	status,2,c
  1578  000F12  D024               	goto	l5404
  1579                           
  1580                           ; BSR set to: 1
  1581                           ;hw.c: 359: if(sec<59)
  1582  000F14  0101               	movlb	1	; () banked
  1583  000F16  BF91               	btfsc	(_sec+1)& (0+255),7,b
  1584  000F18  D008               	goto	l5392
  1585  000F1A  0101               	movlb	1	; () banked
  1586  000F1C  5191               	movf	(_sec+1)& (0+255),w,b
  1587  000F1E  E109               	bnz	l5394
  1588  000F20  0E3B               	movlw	59
  1589  000F22  0101               	movlb	1	; () banked
  1590  000F24  5D90               	subwf	_sec& (0+255),w,b
  1591  000F26  B0D8               	btfsc	status,0,c
  1592  000F28  D004               	goto	l5394
  1593  000F2A                     l5392:
  1594                           
  1595                           ; BSR set to: 1
  1596                           ;hw.c: 360: sec++;
  1597  000F2A  0101               	movlb	1	; () banked
  1598  000F2C  4B90               	infsnz	_sec& (0+255),f,b
  1599  000F2E  2B91               	incf	(_sec+1)& (0+255),f,b
  1600  000F30  D0C8               	goto	l5466
  1601  000F32                     l5394:
  1602                           
  1603                           ; BSR set to: 1
  1604                           ;hw.c: 361: else {
  1605                           ;hw.c: 363: sec=0;
  1606  000F32  0E00               	movlw	0
  1607  000F34  0101               	movlb	1	; () banked
  1608  000F36  6F91               	movwf	(_sec+1)& (0+255),b
  1609  000F38  0E00               	movlw	0
  1610  000F3A  6F90               	movwf	_sec& (0+255),b
  1611                           
  1612                           ; BSR set to: 1
  1613                           ;hw.c: 364: min++;
  1614  000F3C  0101               	movlb	1	; () banked
  1615  000F3E  4B8C               	infsnz	_min& (0+255),f,b
  1616  000F40  2B8D               	incf	(_min+1)& (0+255),f,b
  1617                           
  1618                           ; BSR set to: 1
  1619                           ;hw.c: 365: if(min==60){
  1620  000F42  0E3C               	movlw	60
  1621  000F44  0101               	movlb	1	; () banked
  1622  000F46  198C               	xorwf	_min& (0+255),w,b
  1623  000F48  0101               	movlb	1	; () banked
  1624  000F4A  118D               	iorwf	(_min+1)& (0+255),w,b
  1625  000F4C  A4D8               	btfss	status,2,c
  1626  000F4E  D0B9               	goto	l5466
  1627                           
  1628                           ; BSR set to: 1
  1629                           ;hw.c: 366: min=0;
  1630  000F50  0E00               	movlw	0
  1631  000F52  0101               	movlb	1	; () banked
  1632  000F54  6F8D               	movwf	(_min+1)& (0+255),b
  1633  000F56  0E00               	movlw	0
  1634  000F58  6F8C               	movwf	_min& (0+255),b
  1635  000F5A  D0B0               	goto	l5464
  1636  000F5C                     l5404:
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;hw.c: 372: else if(mode==1){
  1640  000F5C  0101               	movlb	1	; () banked
  1641  000F5E  058E               	decf	_mode& (0+255),w,b
  1642  000F60  0101               	movlb	1	; () banked
  1643  000F62  118F               	iorwf	(_mode+1)& (0+255),w,b
  1644  000F64  A4D8               	btfss	status,2,c
  1645  000F66  D033               	goto	l5420
  1646                           
  1647                           ; BSR set to: 1
  1648                           ;hw.c: 373: if(sec<50)
  1649  000F68  0101               	movlb	1	; () banked
  1650  000F6A  BF91               	btfsc	(_sec+1)& (0+255),7,b
  1651  000F6C  D008               	goto	l5408
  1652  000F6E  0101               	movlb	1	; () banked
  1653  000F70  5191               	movf	(_sec+1)& (0+255),w,b
  1654  000F72  E110               	bnz	l5410
  1655  000F74  0E32               	movlw	50
  1656  000F76  0101               	movlb	1	; () banked
  1657  000F78  5D90               	subwf	_sec& (0+255),w,b
  1658  000F7A  B0D8               	btfsc	status,0,c
  1659  000F7C  D00B               	goto	l5410
  1660  000F7E                     l5408:
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;hw.c: 374: sec=sec+10;
  1664  000F7E  0E0A               	movlw	10
  1665  000F80  0101               	movlb	1	; () banked
  1666  000F82  2590               	addwf	_sec& (0+255),w,b
  1667  000F84  0101               	movlb	1	; () banked
  1668  000F86  6F90               	movwf	_sec& (0+255),b
  1669  000F88  0E00               	movlw	0
  1670  000F8A  0101               	movlb	1	; () banked
  1671  000F8C  2191               	addwfc	(_sec+1)& (0+255),w,b
  1672  000F8E  0101               	movlb	1	; () banked
  1673  000F90  6F91               	movwf	(_sec+1)& (0+255),b
  1674  000F92  D097               	goto	l5466
  1675  000F94                     l5410:
  1676                           
  1677                           ; BSR set to: 1
  1678                           ;hw.c: 376: else{
  1679                           ;hw.c: 378: sec=sec-50;
  1680  000F94  0ECE               	movlw	206
  1681  000F96  0101               	movlb	1	; () banked
  1682  000F98  2590               	addwf	_sec& (0+255),w,b
  1683  000F9A  0101               	movlb	1	; () banked
  1684  000F9C  6F90               	movwf	_sec& (0+255),b
  1685  000F9E  0EFF               	movlw	255
  1686  000FA0  0101               	movlb	1	; () banked
  1687  000FA2  2191               	addwfc	(_sec+1)& (0+255),w,b
  1688  000FA4  0101               	movlb	1	; () banked
  1689  000FA6  6F91               	movwf	(_sec+1)& (0+255),b
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;hw.c: 379: min++;
  1693  000FA8  0101               	movlb	1	; () banked
  1694  000FAA  4B8C               	infsnz	_min& (0+255),f,b
  1695  000FAC  2B8D               	incf	(_min+1)& (0+255),f,b
  1696                           
  1697                           ; BSR set to: 1
  1698                           ;hw.c: 380: if(min==60){
  1699  000FAE  0E3C               	movlw	60
  1700  000FB0  0101               	movlb	1	; () banked
  1701  000FB2  198C               	xorwf	_min& (0+255),w,b
  1702  000FB4  0101               	movlb	1	; () banked
  1703  000FB6  118D               	iorwf	(_min+1)& (0+255),w,b
  1704  000FB8  A4D8               	btfss	status,2,c
  1705  000FBA  D083               	goto	l5466
  1706                           
  1707                           ; BSR set to: 1
  1708                           ;hw.c: 381: hour++;
  1709  000FBC  0101               	movlb	1	; () banked
  1710  000FBE  4B8A               	infsnz	_hour& (0+255),f,b
  1711  000FC0  2B8B               	incf	(_hour+1)& (0+255),f,b
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;hw.c: 382: min=0;
  1715  000FC2  0E00               	movlw	0
  1716  000FC4  0101               	movlb	1	; () banked
  1717  000FC6  6F8D               	movwf	(_min+1)& (0+255),b
  1718  000FC8  0E00               	movlw	0
  1719  000FCA  6F8C               	movwf	_min& (0+255),b
  1720                           
  1721                           ; BSR set to: 1
  1722                           ;hw.c: 383: }
  1723                           ;hw.c: 384: }
  1724                           ;hw.c: 386: }
  1725                           
  1726                           ; BSR set to: 1
  1727  000FCC  D07A               	goto	l5466
  1728  000FCE                     l5420:
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;hw.c: 387: else if(mode==2){
  1732  000FCE  0E02               	movlw	2
  1733  000FD0  0101               	movlb	1	; () banked
  1734  000FD2  198E               	xorwf	_mode& (0+255),w,b
  1735  000FD4  0101               	movlb	1	; () banked
  1736  000FD6  118F               	iorwf	(_mode+1)& (0+255),w,b
  1737  000FD8  A4D8               	btfss	status,2,c
  1738  000FDA  D02D               	goto	l5438
  1739                           
  1740                           ; BSR set to: 1
  1741                           ;hw.c: 388: if(min<59)
  1742  000FDC  0101               	movlb	1	; () banked
  1743  000FDE  BF8D               	btfsc	(_min+1)& (0+255),7,b
  1744  000FE0  D008               	goto	l5424
  1745  000FE2  0101               	movlb	1	; () banked
  1746  000FE4  518D               	movf	(_min+1)& (0+255),w,b
  1747  000FE6  E109               	bnz	l5426
  1748  000FE8  0E3B               	movlw	59
  1749  000FEA  0101               	movlb	1	; () banked
  1750  000FEC  5D8C               	subwf	_min& (0+255),w,b
  1751  000FEE  B0D8               	btfsc	status,0,c
  1752  000FF0  D004               	goto	l5426
  1753  000FF2                     l5424:
  1754                           
  1755                           ; BSR set to: 1
  1756                           ;hw.c: 389: min++;
  1757  000FF2  0101               	movlb	1	; () banked
  1758  000FF4  4B8C               	infsnz	_min& (0+255),f,b
  1759  000FF6  2B8D               	incf	(_min+1)& (0+255),f,b
  1760  000FF8  D064               	goto	l5466
  1761  000FFA                     l5426:
  1762                           
  1763                           ; BSR set to: 1
  1764                           ;hw.c: 390: else {
  1765                           ;hw.c: 391: min=0;
  1766  000FFA  0E00               	movlw	0
  1767  000FFC  0101               	movlb	1	; () banked
  1768  000FFE  6F8D               	movwf	(_min+1)& (0+255),b
  1769  001000  0E00               	movlw	0
  1770  001002  6F8C               	movwf	_min& (0+255),b
  1771                           
  1772                           ; BSR set to: 1
  1773                           ;hw.c: 392: hour++;
  1774  001004  0101               	movlb	1	; () banked
  1775  001006  4B8A               	infsnz	_hour& (0+255),f,b
  1776  001008  2B8B               	incf	(_hour+1)& (0+255),f,b
  1777  00100A                     l5430:
  1778                           
  1779                           ; BSR set to: 1
  1780                           ;hw.c: 393: if(hour==25){
  1781  00100A  0E19               	movlw	25
  1782  00100C  0101               	movlb	1	; () banked
  1783  00100E  198A               	xorwf	_hour& (0+255),w,b
  1784  001010  0101               	movlb	1	; () banked
  1785  001012  118B               	iorwf	(_hour+1)& (0+255),w,b
  1786  001014  A4D8               	btfss	status,2,c
  1787  001016  D055               	goto	l5466
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;hw.c: 394: hour--;
  1791  001018  0101               	movlb	1	; () banked
  1792  00101A  078A               	decf	_hour& (0+255),f,b
  1793  00101C  A0D8               	btfss	status,0,c
  1794  00101E  078B               	decf	(_hour+1)& (0+255),f,b
  1795                           
  1796                           ; BSR set to: 1
  1797                           ;hw.c: 395: min=0;
  1798  001020  0E00               	movlw	0
  1799  001022  0101               	movlb	1	; () banked
  1800  001024  6F8D               	movwf	(_min+1)& (0+255),b
  1801  001026  0E00               	movlw	0
  1802  001028  6F8C               	movwf	_min& (0+255),b
  1803                           
  1804                           ; BSR set to: 1
  1805                           ;hw.c: 396: sec=0;
  1806  00102A  0E00               	movlw	0
  1807  00102C  0101               	movlb	1	; () banked
  1808  00102E  6F91               	movwf	(_sec+1)& (0+255),b
  1809  001030  0E00               	movlw	0
  1810  001032  6F90               	movwf	_sec& (0+255),b
  1811                           
  1812                           ; BSR set to: 1
  1813                           ;hw.c: 397: }
  1814                           ;hw.c: 398: }
  1815                           ;hw.c: 400: }
  1816                           
  1817                           ; BSR set to: 1
  1818  001034  D046               	goto	l5466
  1819  001036                     l5438:
  1820                           
  1821                           ; BSR set to: 1
  1822                           ;hw.c: 402: else if(mode==3){
  1823  001036  0E03               	movlw	3
  1824  001038  0101               	movlb	1	; () banked
  1825  00103A  198E               	xorwf	_mode& (0+255),w,b
  1826  00103C  0101               	movlb	1	; () banked
  1827  00103E  118F               	iorwf	(_mode+1)& (0+255),w,b
  1828  001040  A4D8               	btfss	status,2,c
  1829  001042  D02E               	goto	l5458
  1830                           
  1831                           ; BSR set to: 1
  1832                           ;hw.c: 403: if(min<50)
  1833  001044  0101               	movlb	1	; () banked
  1834  001046  BF8D               	btfsc	(_min+1)& (0+255),7,b
  1835  001048  D008               	goto	l5442
  1836  00104A  0101               	movlb	1	; () banked
  1837  00104C  518D               	movf	(_min+1)& (0+255),w,b
  1838  00104E  E110               	bnz	l5444
  1839  001050  0E32               	movlw	50
  1840  001052  0101               	movlb	1	; () banked
  1841  001054  5D8C               	subwf	_min& (0+255),w,b
  1842  001056  B0D8               	btfsc	status,0,c
  1843  001058  D00B               	goto	l5444
  1844  00105A                     l5442:
  1845                           
  1846                           ; BSR set to: 1
  1847                           ;hw.c: 404: min=min+10;
  1848  00105A  0E0A               	movlw	10
  1849  00105C  0101               	movlb	1	; () banked
  1850  00105E  258C               	addwf	_min& (0+255),w,b
  1851  001060  0101               	movlb	1	; () banked
  1852  001062  6F8C               	movwf	_min& (0+255),b
  1853  001064  0E00               	movlw	0
  1854  001066  0101               	movlb	1	; () banked
  1855  001068  218D               	addwfc	(_min+1)& (0+255),w,b
  1856  00106A  0101               	movlb	1	; () banked
  1857  00106C  6F8D               	movwf	(_min+1)& (0+255),b
  1858  00106E  D029               	goto	l5466
  1859  001070                     l5444:
  1860                           
  1861                           ; BSR set to: 1
  1862                           ;hw.c: 405: else{
  1863                           ;hw.c: 406: min=min+10;
  1864  001070  0E0A               	movlw	10
  1865  001072  0101               	movlb	1	; () banked
  1866  001074  258C               	addwf	_min& (0+255),w,b
  1867  001076  0101               	movlb	1	; () banked
  1868  001078  6F8C               	movwf	_min& (0+255),b
  1869  00107A  0E00               	movlw	0
  1870  00107C  0101               	movlb	1	; () banked
  1871  00107E  218D               	addwfc	(_min+1)& (0+255),w,b
  1872  001080  0101               	movlb	1	; () banked
  1873  001082  6F8D               	movwf	(_min+1)& (0+255),b
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;hw.c: 407: hour++;
  1877  001084  0101               	movlb	1	; () banked
  1878  001086  4B8A               	infsnz	_hour& (0+255),f,b
  1879  001088  2B8B               	incf	(_hour+1)& (0+255),f,b
  1880                           
  1881                           ; BSR set to: 1
  1882                           ;hw.c: 408: min=min-60;
  1883  00108A  0EC4               	movlw	196
  1884  00108C  0101               	movlb	1	; () banked
  1885  00108E  258C               	addwf	_min& (0+255),w,b
  1886  001090  0101               	movlb	1	; () banked
  1887  001092  6F8C               	movwf	_min& (0+255),b
  1888  001094  0EFF               	movlw	255
  1889  001096  0101               	movlb	1	; () banked
  1890  001098  218D               	addwfc	(_min+1)& (0+255),w,b
  1891  00109A  0101               	movlb	1	; () banked
  1892  00109C  6F8D               	movwf	(_min+1)& (0+255),b
  1893  00109E  D7B5               	goto	l5430
  1894  0010A0                     l5458:
  1895                           
  1896                           ; BSR set to: 1
  1897                           ;hw.c: 418: else if(mode==4){
  1898  0010A0  0E04               	movlw	4
  1899  0010A2  0101               	movlb	1	; () banked
  1900  0010A4  198E               	xorwf	_mode& (0+255),w,b
  1901  0010A6  0101               	movlb	1	; () banked
  1902  0010A8  118F               	iorwf	(_mode+1)& (0+255),w,b
  1903  0010AA  A4D8               	btfss	status,2,c
  1904  0010AC  D00A               	goto	l5466
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;hw.c: 419: if(hour==24){
  1908  0010AE  0E18               	movlw	24
  1909  0010B0  0101               	movlb	1	; () banked
  1910  0010B2  198A               	xorwf	_hour& (0+255),w,b
  1911  0010B4  0101               	movlb	1	; () banked
  1912  0010B6  118B               	iorwf	(_hour+1)& (0+255),w,b
  1913  0010B8  B4D8               	btfsc	status,2,c
  1914  0010BA  D003               	goto	l5466
  1915  0010BC                     l5464:
  1916                           
  1917                           ; BSR set to: 1
  1918                           ;hw.c: 422: else
  1919                           ;hw.c: 423: {
  1920                           ;hw.c: 424: hour++;
  1921  0010BC  0101               	movlb	1	; () banked
  1922  0010BE  4B8A               	infsnz	_hour& (0+255),f,b
  1923  0010C0  2B8B               	incf	(_hour+1)& (0+255),f,b
  1924  0010C2                     l5466:
  1925                           
  1926                           ;hw.c: 425: }
  1927                           ;hw.c: 429: }
  1928                           ;hw.c: 430: }
  1929                           ;hw.c: 435: if(PORTBbits.RB4==0){
  1930  0010C2  B881               	btfsc	3969,4,c	;volatile
  1931  0010C4  D14D               	goto	l320
  1932                           
  1933                           ;hw.c: 436: delay_ms(500);
  1934  0010C6  0E01               	movlw	1
  1935  0010C8  6E10               	movwf	delay_ms@n+1,c
  1936  0010CA  0EF4               	movlw	244
  1937  0010CC  6E0F               	movwf	delay_ms@n,c
  1938  0010CE  ECD8  F018         	call	_delay_ms	;wreg free
  1939                           
  1940                           ;hw.c: 437: if(mode==0){
  1941  0010D2  0101               	movlb	1	; () banked
  1942  0010D4  518E               	movf	_mode& (0+255),w,b
  1943  0010D6  0101               	movlb	1	; () banked
  1944  0010D8  118F               	iorwf	(_mode+1)& (0+255),w,b
  1945  0010DA  A4D8               	btfss	status,2,c
  1946  0010DC  D04F               	goto	l5500
  1947                           
  1948                           ; BSR set to: 1
  1949                           ;hw.c: 438: if(sec==0){
  1950  0010DE  0101               	movlb	1	; () banked
  1951  0010E0  5190               	movf	_sec& (0+255),w,b
  1952  0010E2  0101               	movlb	1	; () banked
  1953  0010E4  1191               	iorwf	(_sec+1)& (0+255),w,b
  1954  0010E6  A4D8               	btfss	status,2,c
  1955  0010E8  D032               	goto	l5490
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;hw.c: 439: if(min>0)
  1959  0010EA  0101               	movlb	1	; () banked
  1960  0010EC  BF8D               	btfsc	(_min+1)& (0+255),7,b
  1961  0010EE  D00B               	goto	l5478
  1962  0010F0  0101               	movlb	1	; () banked
  1963  0010F2  518D               	movf	(_min+1)& (0+255),w,b
  1964  0010F4  E104               	bnz	u6640
  1965  0010F6  0101               	movlb	1	; () banked
  1966  0010F8  058C               	decf	_min& (0+255),w,b
  1967  0010FA  A0D8               	btfss	status,0,c
  1968  0010FC  D004               	goto	l5478
  1969  0010FE                     u6640:
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;hw.c: 440: min--;
  1973  0010FE  0101               	movlb	1	; () banked
  1974  001100  078C               	decf	_min& (0+255),f,b
  1975  001102  A0D8               	btfss	status,0,c
  1976  001104  078D               	decf	(_min+1)& (0+255),f,b
  1977  001106                     l5478:
  1978                           
  1979                           ; BSR set to: 1
  1980                           ;hw.c: 441: sec=59;
  1981  001106  0E00               	movlw	0
  1982  001108  0101               	movlb	1	; () banked
  1983  00110A  6F91               	movwf	(_sec+1)& (0+255),b
  1984  00110C  0E3B               	movlw	59
  1985  00110E  6F90               	movwf	_sec& (0+255),b
  1986                           
  1987                           ; BSR set to: 1
  1988                           ;hw.c: 442: if(min==0 && hour >0 ){
  1989  001110  0101               	movlb	1	; () banked
  1990  001112  518C               	movf	_min& (0+255),w,b
  1991  001114  0101               	movlb	1	; () banked
  1992  001116  118D               	iorwf	(_min+1)& (0+255),w,b
  1993  001118  A4D8               	btfss	status,2,c
  1994  00111A  D122               	goto	l320
  1995                           
  1996                           ; BSR set to: 1
  1997  00111C  0101               	movlb	1	; () banked
  1998  00111E  BF8B               	btfsc	(_hour+1)& (0+255),7,b
  1999  001120  D11F               	goto	l320
  2000  001122  0101               	movlb	1	; () banked
  2001  001124  518B               	movf	(_hour+1)& (0+255),w,b
  2002  001126  E104               	bnz	u6660
  2003  001128  0101               	movlb	1	; () banked
  2004  00112A  058A               	decf	_hour& (0+255),w,b
  2005  00112C  A0D8               	btfss	status,0,c
  2006  00112E  D118               	goto	l320
  2007  001130                     u6660:
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;hw.c: 443: hour--;
  2011  001130  0101               	movlb	1	; () banked
  2012  001132  078A               	decf	_hour& (0+255),f,b
  2013  001134  A0D8               	btfss	status,0,c
  2014  001136  078B               	decf	(_hour+1)& (0+255),f,b
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;hw.c: 444: min=59;
  2018  001138  0E00               	movlw	0
  2019  00113A  0101               	movlb	1	; () banked
  2020  00113C  6F8D               	movwf	(_min+1)& (0+255),b
  2021  00113E  0E3B               	movlw	59
  2022  001140  6F8C               	movwf	_min& (0+255),b
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;hw.c: 445: sec=59;
  2026  001142  0E00               	movlw	0
  2027  001144  0101               	movlb	1	; () banked
  2028  001146  6F91               	movwf	(_sec+1)& (0+255),b
  2029  001148  0E3B               	movlw	59
  2030  00114A  6F90               	movwf	_sec& (0+255),b
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;hw.c: 447: }
  2034                           ;hw.c: 450: }
  2035  00114C  D109               	goto	l320
  2036  00114E                     l5490:
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;hw.c: 451: else if(sec==0 && min==0 && hour==0)
  2040  00114E  0101               	movlb	1	; () banked
  2041  001150  5190               	movf	_sec& (0+255),w,b
  2042  001152  0101               	movlb	1	; () banked
  2043  001154  1191               	iorwf	(_sec+1)& (0+255),w,b
  2044  001156  A4D8               	btfss	status,2,c
  2045  001158  D00C               	goto	l5498
  2046                           
  2047                           ; BSR set to: 1
  2048  00115A  0101               	movlb	1	; () banked
  2049  00115C  518C               	movf	_min& (0+255),w,b
  2050  00115E  0101               	movlb	1	; () banked
  2051  001160  118D               	iorwf	(_min+1)& (0+255),w,b
  2052  001162  A4D8               	btfss	status,2,c
  2053  001164  D006               	goto	l5498
  2054                           
  2055                           ; BSR set to: 1
  2056  001166  0101               	movlb	1	; () banked
  2057  001168  518A               	movf	_hour& (0+255),w,b
  2058  00116A  0101               	movlb	1	; () banked
  2059  00116C  118B               	iorwf	(_hour+1)& (0+255),w,b
  2060  00116E  B4D8               	btfsc	status,2,c
  2061  001170  D0F7               	goto	l320
  2062  001172                     l5498:
  2063                           
  2064                           ; BSR set to: 1
  2065                           ;hw.c: 455: else {
  2066                           ;hw.c: 457: sec--;
  2067  001172  0101               	movlb	1	; () banked
  2068  001174  0790               	decf	_sec& (0+255),f,b
  2069  001176  A0D8               	btfss	status,0,c
  2070  001178  0791               	decf	(_sec+1)& (0+255),f,b
  2071                           
  2072                           ; BSR set to: 1
  2073                           ;hw.c: 458: }
  2074                           ;hw.c: 461: }
  2075                           
  2076                           ; BSR set to: 1
  2077  00117A  D0F2               	goto	l320
  2078  00117C                     l5500:
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;hw.c: 462: else if(mode==1){
  2082  00117C  0101               	movlb	1	; () banked
  2083  00117E  058E               	decf	_mode& (0+255),w,b
  2084  001180  0101               	movlb	1	; () banked
  2085  001182  118F               	iorwf	(_mode+1)& (0+255),w,b
  2086  001184  A4D8               	btfss	status,2,c
  2087  001186  D05F               	goto	l5536
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;hw.c: 464: if(sec>=10){
  2091  001188  0101               	movlb	1	; () banked
  2092  00118A  BF91               	btfsc	(_sec+1)& (0+255),7,b
  2093  00118C  D008               	goto	l5506
  2094  00118E  0101               	movlb	1	; () banked
  2095  001190  5191               	movf	(_sec+1)& (0+255),w,b
  2096  001192  E11F               	bnz	l5514
  2097  001194  0E0A               	movlw	10
  2098  001196  0101               	movlb	1	; () banked
  2099  001198  5D90               	subwf	_sec& (0+255),w,b
  2100  00119A  B0D8               	btfsc	status,0,c
  2101  00119C  D01A               	goto	l5514
  2102  00119E                     l5506:
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;hw.c: 467: else if(sec<10 && min>0){
  2106  00119E  0101               	movlb	1	; () banked
  2107  0011A0  BF91               	btfsc	(_sec+1)& (0+255),7,b
  2108  0011A2  D008               	goto	l5508
  2109  0011A4  0101               	movlb	1	; () banked
  2110  0011A6  5191               	movf	(_sec+1)& (0+255),w,b
  2111  0011A8  E11F               	bnz	l5516
  2112  0011AA  0E0A               	movlw	10
  2113  0011AC  0101               	movlb	1	; () banked
  2114  0011AE  5D90               	subwf	_sec& (0+255),w,b
  2115  0011B0  B0D8               	btfsc	status,0,c
  2116  0011B2  D01A               	goto	l5516
  2117  0011B4                     l5508:
  2118                           
  2119                           ; BSR set to: 1
  2120  0011B4  0101               	movlb	1	; () banked
  2121  0011B6  BF8D               	btfsc	(_min+1)& (0+255),7,b
  2122  0011B8  D017               	goto	l5516
  2123  0011BA  0101               	movlb	1	; () banked
  2124  0011BC  518D               	movf	(_min+1)& (0+255),w,b
  2125  0011BE  E104               	bnz	u6730
  2126  0011C0  0101               	movlb	1	; () banked
  2127  0011C2  058C               	decf	_min& (0+255),w,b
  2128  0011C4  A0D8               	btfss	status,0,c
  2129  0011C6  D010               	goto	l5516
  2130  0011C8                     u6730:
  2131                           
  2132                           ; BSR set to: 1
  2133                           ;hw.c: 468: min--;
  2134  0011C8  0101               	movlb	1	; () banked
  2135  0011CA  078C               	decf	_min& (0+255),f,b
  2136  0011CC  A0D8               	btfss	status,0,c
  2137  0011CE  078D               	decf	(_min+1)& (0+255),f,b
  2138  0011D0  D02F               	goto	l5526
  2139  0011D2                     l5514:
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;hw.c: 470: sec=sec-10;
  2143  0011D2  0EF6               	movlw	246
  2144  0011D4  0101               	movlb	1	; () banked
  2145  0011D6  2590               	addwf	_sec& (0+255),w,b
  2146  0011D8  0101               	movlb	1	; () banked
  2147  0011DA  6F90               	movwf	_sec& (0+255),b
  2148  0011DC  0EFF               	movlw	255
  2149  0011DE  0101               	movlb	1	; () banked
  2150  0011E0  2191               	addwfc	(_sec+1)& (0+255),w,b
  2151  0011E2  0101               	movlb	1	; () banked
  2152  0011E4  6F91               	movwf	(_sec+1)& (0+255),b
  2153                           
  2154                           ;hw.c: 471: }
  2155  0011E6  D0BC               	goto	l320
  2156  0011E8                     l5516:
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;hw.c: 472: else if (sec<10 && min==0 &&hour>0){
  2160  0011E8  0101               	movlb	1	; () banked
  2161  0011EA  BF91               	btfsc	(_sec+1)& (0+255),7,b
  2162  0011EC  D008               	goto	l5518
  2163  0011EE  0101               	movlb	1	; () banked
  2164  0011F0  5191               	movf	(_sec+1)& (0+255),w,b
  2165  0011F2  E104               	bnz	u6741
  2166  0011F4  0E0A               	movlw	10
  2167  0011F6  0101               	movlb	1	; () banked
  2168  0011F8  5D90               	subwf	_sec& (0+255),w,b
  2169  0011FA  B0D8               	btfsc	status,0,c
  2170  0011FC                     u6741:
  2171  0011FC  D0B1               	goto	l320
  2172  0011FE                     l5518:
  2173                           
  2174                           ; BSR set to: 1
  2175  0011FE  0101               	movlb	1	; () banked
  2176  001200  518C               	movf	_min& (0+255),w,b
  2177  001202  0101               	movlb	1	; () banked
  2178  001204  118D               	iorwf	(_min+1)& (0+255),w,b
  2179  001206  A4D8               	btfss	status,2,c
  2180  001208  D0AB               	goto	l320
  2181                           
  2182                           ; BSR set to: 1
  2183  00120A  0101               	movlb	1	; () banked
  2184  00120C  BF8B               	btfsc	(_hour+1)& (0+255),7,b
  2185  00120E  D0A8               	goto	l320
  2186  001210  0101               	movlb	1	; () banked
  2187  001212  518B               	movf	(_hour+1)& (0+255),w,b
  2188  001214  E104               	bnz	u6760
  2189  001216  0101               	movlb	1	; () banked
  2190  001218  058A               	decf	_hour& (0+255),w,b
  2191  00121A  A0D8               	btfss	status,0,c
  2192  00121C  D0A1               	goto	l320
  2193  00121E                     u6760:
  2194                           
  2195                           ; BSR set to: 1
  2196                           ;hw.c: 473: hour--;
  2197  00121E  0101               	movlb	1	; () banked
  2198  001220  078A               	decf	_hour& (0+255),f,b
  2199  001222  A0D8               	btfss	status,0,c
  2200  001224  078B               	decf	(_hour+1)& (0+255),f,b
  2201                           
  2202                           ; BSR set to: 1
  2203                           ;hw.c: 474: min=59;
  2204  001226  0E00               	movlw	0
  2205  001228  0101               	movlb	1	; () banked
  2206  00122A  6F8D               	movwf	(_min+1)& (0+255),b
  2207  00122C  0E3B               	movlw	59
  2208  00122E  6F8C               	movwf	_min& (0+255),b
  2209  001230                     l5526:
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;hw.c: 475: sec=sec+60;
  2213  001230  0E3C               	movlw	60
  2214  001232  0101               	movlb	1	; () banked
  2215  001234  2590               	addwf	_sec& (0+255),w,b
  2216  001236  0101               	movlb	1	; () banked
  2217  001238  6F90               	movwf	_sec& (0+255),b
  2218  00123A  0E00               	movlw	0
  2219  00123C  0101               	movlb	1	; () banked
  2220  00123E  2191               	addwfc	(_sec+1)& (0+255),w,b
  2221  001240  0101               	movlb	1	; () banked
  2222  001242  6F91               	movwf	(_sec+1)& (0+255),b
  2223  001244  D7C6               	goto	l5514
  2224  001246                     l5536:
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;hw.c: 485: else if(mode==2){
  2228  001246  0E02               	movlw	2
  2229  001248  0101               	movlb	1	; () banked
  2230  00124A  198E               	xorwf	_mode& (0+255),w,b
  2231  00124C  0101               	movlb	1	; () banked
  2232  00124E  118F               	iorwf	(_mode+1)& (0+255),w,b
  2233  001250  A4D8               	btfss	status,2,c
  2234  001252  D031               	goto	l5558
  2235                           
  2236                           ; BSR set to: 1
  2237                           ;hw.c: 486: if(min==0){
  2238  001254  0101               	movlb	1	; () banked
  2239  001256  518C               	movf	_min& (0+255),w,b
  2240  001258  0101               	movlb	1	; () banked
  2241  00125A  118D               	iorwf	(_min+1)& (0+255),w,b
  2242  00125C  A4D8               	btfss	status,2,c
  2243  00125E  D014               	goto	l5548
  2244                           
  2245                           ; BSR set to: 1
  2246                           ;hw.c: 487: if(hour>0){
  2247  001260  0101               	movlb	1	; () banked
  2248  001262  BF8B               	btfsc	(_hour+1)& (0+255),7,b
  2249  001264  D07D               	goto	l320
  2250  001266  0101               	movlb	1	; () banked
  2251  001268  518B               	movf	(_hour+1)& (0+255),w,b
  2252  00126A  E104               	bnz	u6790
  2253  00126C  0101               	movlb	1	; () banked
  2254  00126E  058A               	decf	_hour& (0+255),w,b
  2255  001270  A0D8               	btfss	status,0,c
  2256  001272  D076               	goto	l320
  2257  001274                     u6790:
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;hw.c: 488: hour--;
  2261  001274  0101               	movlb	1	; () banked
  2262  001276  078A               	decf	_hour& (0+255),f,b
  2263  001278  A0D8               	btfss	status,0,c
  2264  00127A  078B               	decf	(_hour+1)& (0+255),f,b
  2265                           
  2266                           ; BSR set to: 1
  2267                           ;hw.c: 489: min=59;}
  2268  00127C  0E00               	movlw	0
  2269  00127E  0101               	movlb	1	; () banked
  2270  001280  6F8D               	movwf	(_min+1)& (0+255),b
  2271  001282  0E3B               	movlw	59
  2272  001284  6F8C               	movwf	_min& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;hw.c: 493: }
  2276                           ;hw.c: 496: }
  2277                           
  2278                           ; BSR set to: 1
  2279                           
  2280                           ; BSR set to: 1
  2281  001286  D06C               	goto	l320
  2282  001288                     l5548:
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;hw.c: 497: else if(sec==0 && min==0 && hour==0)
  2286  001288  0101               	movlb	1	; () banked
  2287  00128A  5190               	movf	_sec& (0+255),w,b
  2288  00128C  0101               	movlb	1	; () banked
  2289  00128E  1191               	iorwf	(_sec+1)& (0+255),w,b
  2290  001290  A4D8               	btfss	status,2,c
  2291  001292  D00C               	goto	l5556
  2292                           
  2293                           ; BSR set to: 1
  2294  001294  0101               	movlb	1	; () banked
  2295  001296  518C               	movf	_min& (0+255),w,b
  2296  001298  0101               	movlb	1	; () banked
  2297  00129A  118D               	iorwf	(_min+1)& (0+255),w,b
  2298  00129C  A4D8               	btfss	status,2,c
  2299  00129E  D006               	goto	l5556
  2300                           
  2301                           ; BSR set to: 1
  2302  0012A0  0101               	movlb	1	; () banked
  2303  0012A2  518A               	movf	_hour& (0+255),w,b
  2304  0012A4  0101               	movlb	1	; () banked
  2305  0012A6  118B               	iorwf	(_hour+1)& (0+255),w,b
  2306  0012A8  B4D8               	btfsc	status,2,c
  2307  0012AA  D05A               	goto	l320
  2308  0012AC                     l5556:
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;hw.c: 501: else {
  2312                           ;hw.c: 503: min--;
  2313  0012AC  0101               	movlb	1	; () banked
  2314  0012AE  078C               	decf	_min& (0+255),f,b
  2315  0012B0  A0D8               	btfss	status,0,c
  2316  0012B2  078D               	decf	(_min+1)& (0+255),f,b
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;hw.c: 504: }
  2320                           ;hw.c: 506: }
  2321                           
  2322                           ; BSR set to: 1
  2323  0012B4  D055               	goto	l320
  2324  0012B6                     l5558:
  2325                           
  2326                           ; BSR set to: 1
  2327                           ;hw.c: 508: else if(mode==3){
  2328  0012B6  0E03               	movlw	3
  2329  0012B8  0101               	movlb	1	; () banked
  2330  0012BA  198E               	xorwf	_mode& (0+255),w,b
  2331  0012BC  0101               	movlb	1	; () banked
  2332  0012BE  118F               	iorwf	(_mode+1)& (0+255),w,b
  2333  0012C0  A4D8               	btfss	status,2,c
  2334  0012C2  D039               	goto	l5578
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;hw.c: 509: if(min>10){
  2338  0012C4  0101               	movlb	1	; () banked
  2339  0012C6  BF8D               	btfsc	(_min+1)& (0+255),7,b
  2340  0012C8  D008               	goto	l5564
  2341  0012CA  0101               	movlb	1	; () banked
  2342  0012CC  518D               	movf	(_min+1)& (0+255),w,b
  2343  0012CE  E128               	bnz	l5572
  2344  0012D0  0E0B               	movlw	11
  2345  0012D2  0101               	movlb	1	; () banked
  2346  0012D4  5D8C               	subwf	_min& (0+255),w,b
  2347  0012D6  B0D8               	btfsc	status,0,c
  2348  0012D8  D023               	goto	l5572
  2349  0012DA                     l5564:
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;hw.c: 512: else if(min<10 && hour>0){
  2353  0012DA  0101               	movlb	1	; () banked
  2354  0012DC  BF8D               	btfsc	(_min+1)& (0+255),7,b
  2355  0012DE  D008               	goto	l5566
  2356  0012E0  0101               	movlb	1	; () banked
  2357  0012E2  518D               	movf	(_min+1)& (0+255),w,b
  2358  0012E4  E13D               	bnz	l320
  2359  0012E6  0E0A               	movlw	10
  2360  0012E8  0101               	movlb	1	; () banked
  2361  0012EA  5D8C               	subwf	_min& (0+255),w,b
  2362  0012EC  B0D8               	btfsc	status,0,c
  2363  0012EE  D038               	goto	l320
  2364  0012F0                     l5566:
  2365                           
  2366                           ; BSR set to: 1
  2367  0012F0  0101               	movlb	1	; () banked
  2368  0012F2  BF8B               	btfsc	(_hour+1)& (0+255),7,b
  2369  0012F4  D035               	goto	l320
  2370  0012F6  0101               	movlb	1	; () banked
  2371  0012F8  518B               	movf	(_hour+1)& (0+255),w,b
  2372  0012FA  E104               	bnz	u6860
  2373  0012FC  0101               	movlb	1	; () banked
  2374  0012FE  058A               	decf	_hour& (0+255),w,b
  2375  001300  A0D8               	btfss	status,0,c
  2376  001302  D02E               	goto	l320
  2377  001304                     u6860:
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;hw.c: 513: hour--;
  2381  001304  0101               	movlb	1	; () banked
  2382  001306  078A               	decf	_hour& (0+255),f,b
  2383  001308  A0D8               	btfss	status,0,c
  2384  00130A  078B               	decf	(_hour+1)& (0+255),f,b
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;hw.c: 514: min=min+60;
  2388  00130C  0E3C               	movlw	60
  2389  00130E  0101               	movlb	1	; () banked
  2390  001310  258C               	addwf	_min& (0+255),w,b
  2391  001312  0101               	movlb	1	; () banked
  2392  001314  6F8C               	movwf	_min& (0+255),b
  2393  001316  0E00               	movlw	0
  2394  001318  0101               	movlb	1	; () banked
  2395  00131A  218D               	addwfc	(_min+1)& (0+255),w,b
  2396  00131C  0101               	movlb	1	; () banked
  2397  00131E  6F8D               	movwf	(_min+1)& (0+255),b
  2398  001320                     l5572:
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;hw.c: 515: min=min-10;
  2402  001320  0EF6               	movlw	246
  2403  001322  0101               	movlb	1	; () banked
  2404  001324  258C               	addwf	_min& (0+255),w,b
  2405  001326  0101               	movlb	1	; () banked
  2406  001328  6F8C               	movwf	_min& (0+255),b
  2407  00132A  0EFF               	movlw	255
  2408  00132C  0101               	movlb	1	; () banked
  2409  00132E  218D               	addwfc	(_min+1)& (0+255),w,b
  2410  001330  0101               	movlb	1	; () banked
  2411  001332  6F8D               	movwf	(_min+1)& (0+255),b
  2412                           
  2413                           ; BSR set to: 1
  2414                           ;hw.c: 519: }
  2415                           ;hw.c: 521: }
  2416                           
  2417                           ; BSR set to: 1
  2418                           
  2419                           ; BSR set to: 1
  2420                           
  2421                           ; BSR set to: 1
  2422                           
  2423                           ; BSR set to: 1
  2424                           
  2425                           ; BSR set to: 1
  2426                           
  2427                           ;hw.c: 516: }
  2428  001334  D015               	goto	l320
  2429  001336                     l5578:
  2430                           
  2431                           ; BSR set to: 1
  2432                           ;hw.c: 523: else if(mode==4){
  2433  001336  0E04               	movlw	4
  2434  001338  0101               	movlb	1	; () banked
  2435  00133A  198E               	xorwf	_mode& (0+255),w,b
  2436  00133C  0101               	movlb	1	; () banked
  2437  00133E  118F               	iorwf	(_mode+1)& (0+255),w,b
  2438  001340  A4D8               	btfss	status,2,c
  2439  001342  D00E               	goto	l320
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;hw.c: 524: if(hour>0){
  2443  001344  0101               	movlb	1	; () banked
  2444  001346  BF8B               	btfsc	(_hour+1)& (0+255),7,b
  2445  001348  D00B               	goto	l320
  2446  00134A  0101               	movlb	1	; () banked
  2447  00134C  518B               	movf	(_hour+1)& (0+255),w,b
  2448  00134E  E104               	bnz	u6880
  2449  001350  0101               	movlb	1	; () banked
  2450  001352  058A               	decf	_hour& (0+255),w,b
  2451  001354  A0D8               	btfss	status,0,c
  2452  001356  D004               	goto	l320
  2453  001358                     u6880:
  2454                           
  2455                           ; BSR set to: 1
  2456                           ;hw.c: 525: hour--;
  2457  001358  0101               	movlb	1	; () banked
  2458  00135A  078A               	decf	_hour& (0+255),f,b
  2459  00135C  A0D8               	btfss	status,0,c
  2460  00135E  078B               	decf	(_hour+1)& (0+255),f,b
  2461  001360                     l320:
  2462                           
  2463                           ;hw.c: 530: }
  2464                           ;hw.c: 534: }
  2465                           ;hw.c: 537: }
  2466                           ;hw.c: 538: if(PORTBbits.RB5==0){
  2467  001360  BA81               	btfsc	3969,5,c	;volatile
  2468  001362  D015               	goto	l357
  2469                           
  2470                           ;hw.c: 541: sec=0;
  2471  001364  0E00               	movlw	0
  2472  001366  0101               	movlb	1	; () banked
  2473  001368  6F91               	movwf	(_sec+1)& (0+255),b
  2474  00136A  0E00               	movlw	0
  2475  00136C  6F90               	movwf	_sec& (0+255),b
  2476                           
  2477                           ;hw.c: 542: min=0;
  2478  00136E  0E00               	movlw	0
  2479  001370  0101               	movlb	1	; () banked
  2480  001372  6F8D               	movwf	(_min+1)& (0+255),b
  2481  001374  0E00               	movlw	0
  2482  001376  6F8C               	movwf	_min& (0+255),b
  2483                           
  2484                           ;hw.c: 543: hour=0;
  2485  001378  0E00               	movlw	0
  2486  00137A  0101               	movlb	1	; () banked
  2487  00137C  6F8B               	movwf	(_hour+1)& (0+255),b
  2488  00137E  0E00               	movlw	0
  2489  001380  6F8A               	movwf	_hour& (0+255),b
  2490                           
  2491                           ;hw.c: 545: start_flag=0;
  2492  001382  0E00               	movlw	0
  2493  001384  0101               	movlb	1	; () banked
  2494  001386  6F93               	movwf	(_start_flag+1)& (0+255),b
  2495  001388  0E00               	movlw	0
  2496  00138A  6F92               	movwf	_start_flag& (0+255),b
  2497                           
  2498                           ; BSR set to: 1
  2499                           ;hw.c: 547: PORTCbits.RC5 = 0;
  2500  00138C  9A82               	bcf	3970,5,c	;volatile
  2501  00138E                     l357:
  2502                           
  2503                           ;hw.c: 548: }
  2504                           ;hw.c: 553: timer_flag=0;
  2505  00138E  0E00               	movlw	0
  2506  001390  0100               	movlb	0	; () banked
  2507  001392  6FAD               	movwf	(_timer_flag+1)& (0+255),b
  2508  001394  0E00               	movlw	0
  2509  001396  6FAC               	movwf	_timer_flag& (0+255),b
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;hw.c: 559: display();
  2513  001398  EC21  F00F         	call	_display	;wreg free
  2514  00139C  D48B               	goto	l282
  2515  00139E                     __end_of_main:
  2516                           	opt stack 0
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           intcon	equ	0xFF2
  2522                           intcon2	equ	0xFF1
  2523                           intcon3	equ	0xFF0
  2524                           postinc0	equ	0xFEE
  2525                           wreg	equ	0xFE8
  2526                           postdec1	equ	0xFE5
  2527                           fsr1l	equ	0xFE1
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _setupPorts *****************
  2531 ;; Defined at:
  2532 ;;		line 154 in file "hw.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    3
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text1
  2561  0031F6                     __ptext1:
  2562                           	opt stack 0
  2563  0031F6                     _setupPorts:
  2564                           	opt stack 27
  2565                           
  2566                           ;hw.c: 156: ADCON0 =0;
  2567                           
  2568                           ;incstack = 0
  2569  0031F6  0E00               	movlw	0
  2570  0031F8  6EC2               	movwf	4034,c	;volatile
  2571                           
  2572                           ;hw.c: 157: ADCON1 = 0x0C;
  2573  0031FA  0E0C               	movlw	12
  2574  0031FC  6EC1               	movwf	4033,c	;volatile
  2575                           
  2576                           ;hw.c: 158: TRISB = 0xFF;
  2577  0031FE  6893               	setf	3987,c	;volatile
  2578                           
  2579                           ;hw.c: 159: TRISC = 0x80;
  2580  003200  0E80               	movlw	128
  2581  003202  6E94               	movwf	3988,c	;volatile
  2582                           
  2583                           ;hw.c: 160: PORTC =0x00;
  2584  003204  0E00               	movlw	0
  2585  003206  6E82               	movwf	3970,c	;volatile
  2586                           
  2587                           ;hw.c: 161: TRISA = 0xFF;
  2588  003208  6892               	setf	3986,c	;volatile
  2589                           
  2590                           ;hw.c: 162: TRISD = 0x00;
  2591  00320A  0E00               	movlw	0
  2592  00320C  6E95               	movwf	3989,c	;volatile
  2593                           
  2594                           ;hw.c: 163: TRISE= 0x00;
  2595  00320E  0E00               	movlw	0
  2596  003210  6E96               	movwf	3990,c	;volatile
  2597  003212  0012               	return		;funcret
  2598  003214                     __end_of_setupPorts:
  2599                           	opt stack 0
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           intcon	equ	0xFF2
  2605                           intcon2	equ	0xFF1
  2606                           intcon3	equ	0xFF0
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           postdec1	equ	0xFE5
  2610                           fsr1l	equ	0xFE1
  2611                           status	equ	0xFD8
  2612                           
  2613 ;; *************** function _read_adc_voltage *****************
  2614 ;; Defined at:
  2615 ;;		line 45 in file "my_adc.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  channel         1    wreg     unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  channel         1   69[COMRAM] unsigned char 
  2620 ;;  voltage         4   63[COMRAM] float 
  2621 ;;  raw_value       2   67[COMRAM] int 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  4   59[COMRAM] float 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;Total ram usage:       11 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    4
  2638 ;; This function calls:
  2639 ;;		___fldiv
  2640 ;;		___wmul
  2641 ;;		___xxtofl
  2642 ;;		_read_adc_raw_no_lib
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text2
  2649  002CEC                     __ptext2:
  2650                           	opt stack 0
  2651  002CEC                     _read_adc_voltage:
  2652                           	opt stack 26
  2653                           
  2654                           ;incstack = 0
  2655                           ;read_adc_voltage@channel stored from wreg
  2656  002CEC  6E46               	movwf	read_adc_voltage@channel,c
  2657                           
  2658                           ;my_adc.c: 46: int raw_value;
  2659                           ;my_adc.c: 47: float voltage;
  2660                           ;my_adc.c: 48: raw_value = read_adc_raw_no_lib(channel);
  2661  002CEE  5046               	movf	read_adc_voltage@channel,w,c
  2662  002CF0  EC32  F018         	call	_read_adc_raw_no_lib
  2663  002CF4  C00F  F044         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  2664  002CF8  C010  F045         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  2665                           
  2666                           ;my_adc.c: 49: voltage = (raw_value * 5) / 1023.0;
  2667  002CFC  C044  F00F         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  2668  002D00  C045  F010         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  2669  002D04  0E00               	movlw	0
  2670  002D06  6E12               	movwf	___wmul@multiplicand+1,c
  2671  002D08  0E05               	movlw	5
  2672  002D0A  6E11               	movwf	___wmul@multiplicand,c
  2673  002D0C  ECB3  F018         	call	___wmul	;wreg free
  2674  002D10  C00F  F015         	movff	?___wmul,___xxtofl@val
  2675  002D14  C010  F016         	movff	?___wmul+1,___xxtofl@val+1
  2676  002D18  0E00               	movlw	0
  2677  002D1A  BE16               	btfsc	___xxtofl@val+1,7,c
  2678  002D1C  0EFF               	movlw	-1
  2679  002D1E  6E17               	movwf	___xxtofl@val+2,c
  2680  002D20  6E18               	movwf	___xxtofl@val+3,c
  2681  002D22  0E01               	movlw	1
  2682  002D24  EC1E  F013         	call	___xxtofl
  2683  002D28  C015  F023         	movff	?___xxtofl,___fldiv@b
  2684  002D2C  C016  F024         	movff	?___xxtofl+1,___fldiv@b+1
  2685  002D30  C017  F025         	movff	?___xxtofl+2,___fldiv@b+2
  2686  002D34  C018  F026         	movff	?___xxtofl+3,___fldiv@b+3
  2687  002D38  0E00               	movlw	0
  2688  002D3A  6E27               	movwf	___fldiv@a,c
  2689  002D3C  0EC0               	movlw	192
  2690  002D3E  6E28               	movwf	___fldiv@a+1,c
  2691  002D40  0E7F               	movlw	127
  2692  002D42  6E29               	movwf	___fldiv@a+2,c
  2693  002D44  0E44               	movlw	68
  2694  002D46  6E2A               	movwf	___fldiv@a+3,c
  2695  002D48  EC87  F010         	call	___fldiv	;wreg free
  2696  002D4C  C023  F040         	movff	?___fldiv,read_adc_voltage@voltage
  2697  002D50  C024  F041         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  2698  002D54  C025  F042         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  2699  002D58  C026  F043         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  2700                           
  2701                           ;my_adc.c: 50: return voltage;
  2702  002D5C  C040  F03C         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  2703  002D60  C041  F03D         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  2704  002D64  C042  F03E         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  2705  002D68  C043  F03F         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  2706  002D6C  0012               	return	
  2707  002D6E                     __end_of_read_adc_voltage:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           intcon	equ	0xFF2
  2714                           intcon2	equ	0xFF1
  2715                           intcon3	equ	0xFF0
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1l	equ	0xFE1
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _read_adc_raw_no_lib *****************
  2723 ;; Defined at:
  2724 ;;		line 29 in file "my_adc.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  channel         1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  channel         1   20[COMRAM] unsigned char 
  2729 ;;  raw_value       2   18[COMRAM] int 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  2   14[COMRAM] int 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        7 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    3
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_read_adc_voltage
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text3
  2754  003064                     __ptext3:
  2755                           	opt stack 0
  2756  003064                     _read_adc_raw_no_lib:
  2757                           	opt stack 26
  2758                           
  2759                           ;incstack = 0
  2760                           ;read_adc_raw_no_lib@channel stored from wreg
  2761  003064  6E15               	movwf	read_adc_raw_no_lib@channel,c
  2762                           
  2763                           ;my_adc.c: 30: int raw_value;
  2764                           ;my_adc.c: 32: ADCON0bits.CHS = channel ;
  2765  003066  C015  F011         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  2766  00306A  4611               	rlncf	??_read_adc_raw_no_lib,f,c
  2767  00306C  4611               	rlncf	??_read_adc_raw_no_lib,f,c
  2768  00306E  50C2               	movf	4034,w,c	;volatile
  2769  003070  1811               	xorwf	??_read_adc_raw_no_lib,w,c
  2770  003072  0BC3               	andlw	-61
  2771  003074  1811               	xorwf	??_read_adc_raw_no_lib,w,c
  2772  003076  6EC2               	movwf	4034,c	;volatile
  2773                           
  2774                           ;my_adc.c: 35: ADCON0bits.GO = 1;
  2775  003078  82C2               	bsf	4034,1,c	;volatile
  2776  00307A                     l76:
  2777  00307A  B2C2               	btfsc	4034,1,c	;volatile
  2778  00307C  D7FE               	goto	l76
  2779                           
  2780                           ;my_adc.c: 37: raw_value = ADRESH << 8 | ADRESL;
  2781  00307E  50C3               	movf	4035,w,c	;volatile
  2782  003080  CFC4 F011          	movff	4036,??_read_adc_raw_no_lib	;volatile
  2783  003084  6A12               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),c
  2784  003086  C011  F012         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  2785  00308A  6A11               	clrf	??_read_adc_raw_no_lib,c
  2786  00308C  1011               	iorwf	??_read_adc_raw_no_lib,w,c
  2787  00308E  6E13               	movwf	read_adc_raw_no_lib@raw_value,c
  2788  003090  5012               	movf	??_read_adc_raw_no_lib+1,w,c
  2789  003092  6E14               	movwf	read_adc_raw_no_lib@raw_value+1,c
  2790                           
  2791                           ;my_adc.c: 42: return raw_value;
  2792  003094  C013  F00F         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  2793  003098  C014  F010         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  2794  00309C  0012               	return	
  2795  00309E                     __end_of_read_adc_raw_no_lib:
  2796                           	opt stack 0
  2797                           tblptru	equ	0xFF8
  2798                           tblptrh	equ	0xFF7
  2799                           tblptrl	equ	0xFF6
  2800                           tablat	equ	0xFF5
  2801                           intcon	equ	0xFF2
  2802                           intcon2	equ	0xFF1
  2803                           intcon3	equ	0xFF0
  2804                           postinc0	equ	0xFEE
  2805                           wreg	equ	0xFE8
  2806                           postdec1	equ	0xFE5
  2807                           fsr1l	equ	0xFE1
  2808                           status	equ	0xFD8
  2809                           
  2810 ;; *************** function ___fldiv *****************
  2811 ;; Defined at:
  2812 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  b               4   34[COMRAM] int 
  2815 ;;  a               4   38[COMRAM] int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  grs             4   53[COMRAM] unsigned long 
  2818 ;;  rem             4   47[COMRAM] unsigned long 
  2819 ;;  new_exp         2   51[COMRAM] int 
  2820 ;;  aexp            1   58[COMRAM] unsigned char 
  2821 ;;  bexp            1   57[COMRAM] unsigned char 
  2822 ;;  sign            1   46[COMRAM] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  4   34[COMRAM] unsigned char 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:       25 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    3
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_read_adc_voltage
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text4
  2847  00210E                     __ptext4:
  2848                           	opt stack 0
  2849  00210E                     ___fldiv:
  2850                           	opt stack 26
  2851                           
  2852                           ;incstack = 0
  2853  00210E  5026               	movf	___fldiv@b+3,w,c
  2854  002110  0B80               	andlw	128
  2855  002112  6E2F               	movwf	___fldiv@sign,c
  2856  002114  5026               	movf	___fldiv@b+3,w,c
  2857  002116  2426               	addwf	___fldiv@b+3,w,c
  2858  002118  6E3A               	movwf	___fldiv@bexp,c
  2859  00211A  BE25               	btfsc	___fldiv@b+2,7,c
  2860  00211C  803A               	bsf	___fldiv@bexp,0,c
  2861  00211E  503A               	movf	___fldiv@bexp,w,c
  2862  002120  B4D8               	btfsc	status,2,c
  2863  002122  D00D               	goto	l4238
  2864  002124  283A               	incf	___fldiv@bexp,w,c
  2865  002126  A4D8               	btfss	status,2,c
  2866  002128  D008               	goto	l4234
  2867  00212A  0E00               	movlw	0
  2868  00212C  6E23               	movwf	___fldiv@b,c
  2869  00212E  0E00               	movlw	0
  2870  002130  6E24               	movwf	___fldiv@b+1,c
  2871  002132  0E00               	movlw	0
  2872  002134  6E25               	movwf	___fldiv@b+2,c
  2873  002136  0E00               	movlw	0
  2874  002138  6E26               	movwf	___fldiv@b+3,c
  2875  00213A                     l4234:
  2876  00213A  8E25               	bsf	___fldiv@b+2,7,c
  2877  00213C  D006               	goto	L1
  2878  00213E                     l4238:
  2879  00213E  0E00               	movlw	0
  2880  002140  6E23               	movwf	___fldiv@b,c
  2881  002142  0E00               	movlw	0
  2882  002144  6E24               	movwf	___fldiv@b+1,c
  2883  002146  0E00               	movlw	0
  2884  002148  6E25               	movwf	___fldiv@b+2,c
  2885  00214A                     L1:
  2886  00214A  0E00               	movlw	0
  2887  00214C  6E26               	movwf	___fldiv@b+3,c
  2888  00214E  502A               	movf	___fldiv@a+3,w,c
  2889  002150  0B80               	andlw	128
  2890  002152  1A2F               	xorwf	___fldiv@sign,f,c
  2891  002154  502A               	movf	___fldiv@a+3,w,c
  2892  002156  242A               	addwf	___fldiv@a+3,w,c
  2893  002158  6E3B               	movwf	___fldiv@aexp,c
  2894  00215A  BE29               	btfsc	___fldiv@a+2,7,c
  2895  00215C  803B               	bsf	___fldiv@aexp,0,c
  2896  00215E  503B               	movf	___fldiv@aexp,w,c
  2897  002160  B4D8               	btfsc	status,2,c
  2898  002162  D00D               	goto	l4258
  2899  002164  283B               	incf	___fldiv@aexp,w,c
  2900  002166  A4D8               	btfss	status,2,c
  2901  002168  D008               	goto	l4254
  2902  00216A  0E00               	movlw	0
  2903  00216C  6E27               	movwf	___fldiv@a,c
  2904  00216E  0E00               	movlw	0
  2905  002170  6E28               	movwf	___fldiv@a+1,c
  2906  002172  0E00               	movlw	0
  2907  002174  6E29               	movwf	___fldiv@a+2,c
  2908  002176  0E00               	movlw	0
  2909  002178  6E2A               	movwf	___fldiv@a+3,c
  2910  00217A                     l4254:
  2911  00217A  8E29               	bsf	___fldiv@a+2,7,c
  2912  00217C  D006               	goto	L2
  2913  00217E                     l4258:
  2914  00217E  0E00               	movlw	0
  2915  002180  6E27               	movwf	___fldiv@a,c
  2916  002182  0E00               	movlw	0
  2917  002184  6E28               	movwf	___fldiv@a+1,c
  2918  002186  0E00               	movlw	0
  2919  002188  6E29               	movwf	___fldiv@a+2,c
  2920  00218A                     L2:
  2921  00218A  0E00               	movlw	0
  2922  00218C  6E2A               	movwf	___fldiv@a+3,c
  2923  00218E  5027               	movf	___fldiv@a,w,c
  2924  002190  1028               	iorwf	___fldiv@a+1,w,c
  2925  002192  1029               	iorwf	___fldiv@a+2,w,c
  2926  002194  102A               	iorwf	___fldiv@a+3,w,c
  2927  002196  A4D8               	btfss	status,2,c
  2928  002198  D015               	goto	l4270
  2929  00219A  0E00               	movlw	0
  2930  00219C  6E23               	movwf	___fldiv@b,c
  2931  00219E  0E00               	movlw	0
  2932  0021A0  6E24               	movwf	___fldiv@b+1,c
  2933  0021A2  0E00               	movlw	0
  2934  0021A4  6E25               	movwf	___fldiv@b+2,c
  2935  0021A6  0E00               	movlw	0
  2936  0021A8  6E26               	movwf	___fldiv@b+3,c
  2937  0021AA  0E80               	movlw	128
  2938  0021AC  1225               	iorwf	___fldiv@b+2,f,c
  2939  0021AE  0E7F               	movlw	127
  2940  0021B0  1226               	iorwf	___fldiv@b+3,f,c
  2941  0021B2  C023  F023         	movff	___fldiv@b,?___fldiv
  2942  0021B6  C024  F024         	movff	___fldiv@b+1,?___fldiv+1
  2943  0021BA  C025  F025         	movff	___fldiv@b+2,?___fldiv+2
  2944  0021BE  C026  F026         	movff	___fldiv@b+3,?___fldiv+3
  2945  0021C2  0012               	return	
  2946  0021C4                     l4270:
  2947  0021C4  503A               	movf	___fldiv@bexp,w,c
  2948  0021C6  A4D8               	btfss	status,2,c
  2949  0021C8  D011               	goto	l4278
  2950  0021CA  0E00               	movlw	0
  2951  0021CC  6E23               	movwf	___fldiv@b,c
  2952  0021CE  0E00               	movlw	0
  2953  0021D0  6E24               	movwf	___fldiv@b+1,c
  2954  0021D2  0E00               	movlw	0
  2955  0021D4  6E25               	movwf	___fldiv@b+2,c
  2956  0021D6  0E00               	movlw	0
  2957  0021D8  6E26               	movwf	___fldiv@b+3,c
  2958  0021DA  C023  F023         	movff	___fldiv@b,?___fldiv
  2959  0021DE  C024  F024         	movff	___fldiv@b+1,?___fldiv+1
  2960  0021E2  C025  F025         	movff	___fldiv@b+2,?___fldiv+2
  2961  0021E6  C026  F026         	movff	___fldiv@b+3,?___fldiv+3
  2962  0021EA  0012               	return	
  2963  0021EC                     l4278:
  2964  0021EC  503B               	movf	___fldiv@aexp,w,c
  2965  0021EE  6E2B               	movwf	??___fldiv& (0+255),c
  2966  0021F0  6A2C               	clrf	(??___fldiv+1)& (0+255),c
  2967  0021F2  1E2B               	comf	??___fldiv,f,c
  2968  0021F4  1E2C               	comf	??___fldiv+1,f,c
  2969  0021F6  4A2B               	infsnz	??___fldiv,f,c
  2970  0021F8  2A2C               	incf	??___fldiv+1,f,c
  2971  0021FA  503A               	movf	___fldiv@bexp,w,c
  2972  0021FC  6E2D               	movwf	(??___fldiv+2)& (0+255),c
  2973  0021FE  6A2E               	clrf	(??___fldiv+3)& (0+255),c
  2974  002200  502B               	movf	??___fldiv,w,c
  2975  002202  262D               	addwf	??___fldiv+2,f,c
  2976  002204  502C               	movf	??___fldiv+1,w,c
  2977  002206  222E               	addwfc	??___fldiv+3,f,c
  2978  002208  0E7F               	movlw	127
  2979  00220A  242D               	addwf	??___fldiv+2,w,c
  2980  00220C  6E34               	movwf	___fldiv@new_exp,c
  2981  00220E  0E00               	movlw	0
  2982  002210  202E               	addwfc	??___fldiv+3,w,c
  2983  002212  6E35               	movwf	___fldiv@new_exp+1,c
  2984  002214  C023  F030         	movff	___fldiv@b,___fldiv@rem
  2985  002218  C024  F031         	movff	___fldiv@b+1,___fldiv@rem+1
  2986  00221C  C025  F032         	movff	___fldiv@b+2,___fldiv@rem+2
  2987  002220  C026  F033         	movff	___fldiv@b+3,___fldiv@rem+3
  2988  002224  0E00               	movlw	0
  2989  002226  6E23               	movwf	___fldiv@b,c
  2990  002228  0E00               	movlw	0
  2991  00222A  6E24               	movwf	___fldiv@b+1,c
  2992  00222C  0E00               	movlw	0
  2993  00222E  6E25               	movwf	___fldiv@b+2,c
  2994  002230  0E00               	movlw	0
  2995  002232  6E26               	movwf	___fldiv@b+3,c
  2996  002234  0E00               	movlw	0
  2997  002236  6E36               	movwf	___fldiv@grs,c
  2998  002238  0E00               	movlw	0
  2999  00223A  6E37               	movwf	___fldiv@grs+1,c
  3000  00223C  0E00               	movlw	0
  3001  00223E  6E38               	movwf	___fldiv@grs+2,c
  3002  002240  0E00               	movlw	0
  3003  002242  6E39               	movwf	___fldiv@grs+3,c
  3004  002244  0E00               	movlw	0
  3005  002246  6E3B               	movwf	___fldiv@aexp,c
  3006  002248  D028               	goto	l1036
  3007  00224A                     l4288:
  3008  00224A  503B               	movf	___fldiv@aexp,w,c
  3009  00224C  B4D8               	btfsc	status,2,c
  3010  00224E  D011               	goto	l4296
  3011  002250  90D8               	bcf	status,0,c
  3012  002252  3630               	rlcf	___fldiv@rem,f,c
  3013  002254  3631               	rlcf	___fldiv@rem+1,f,c
  3014  002256  3632               	rlcf	___fldiv@rem+2,f,c
  3015  002258  3633               	rlcf	___fldiv@rem+3,f,c
  3016  00225A  90D8               	bcf	status,0,c
  3017  00225C  3623               	rlcf	___fldiv@b,f,c
  3018  00225E  3624               	rlcf	___fldiv@b+1,f,c
  3019  002260  3625               	rlcf	___fldiv@b+2,f,c
  3020  002262  3626               	rlcf	___fldiv@b+3,f,c
  3021  002264  BE39               	btfsc	___fldiv@grs+3,7,c
  3022  002266  8023               	bsf	___fldiv@b,0,c
  3023  002268  90D8               	bcf	status,0,c
  3024  00226A  3636               	rlcf	___fldiv@grs,f,c
  3025  00226C  3637               	rlcf	___fldiv@grs+1,f,c
  3026  00226E  3638               	rlcf	___fldiv@grs+2,f,c
  3027  002270  3639               	rlcf	___fldiv@grs+3,f,c
  3028  002272                     l4296:
  3029  002272  5027               	movf	___fldiv@a,w,c
  3030  002274  5C30               	subwf	___fldiv@rem,w,c
  3031  002276  5028               	movf	___fldiv@a+1,w,c
  3032  002278  5831               	subwfb	___fldiv@rem+1,w,c
  3033  00227A  5029               	movf	___fldiv@a+2,w,c
  3034  00227C  5832               	subwfb	___fldiv@rem+2,w,c
  3035  00227E  502A               	movf	___fldiv@a+3,w,c
  3036  002280  5833               	subwfb	___fldiv@rem+3,w,c
  3037  002282  A0D8               	btfss	status,0,c
  3038  002284  D009               	goto	l4302
  3039  002286  8C39               	bsf	___fldiv@grs+3,6,c
  3040  002288  5027               	movf	___fldiv@a,w,c
  3041  00228A  5E30               	subwf	___fldiv@rem,f,c
  3042  00228C  5028               	movf	___fldiv@a+1,w,c
  3043  00228E  5A31               	subwfb	___fldiv@rem+1,f,c
  3044  002290  5029               	movf	___fldiv@a+2,w,c
  3045  002292  5A32               	subwfb	___fldiv@rem+2,f,c
  3046  002294  502A               	movf	___fldiv@a+3,w,c
  3047  002296  5A33               	subwfb	___fldiv@rem+3,f,c
  3048  002298                     l4302:
  3049  002298  2A3B               	incf	___fldiv@aexp,f,c
  3050  00229A                     l1036:
  3051  00229A  0E19               	movlw	25
  3052  00229C  643B               	cpfsgt	___fldiv@aexp,c
  3053  00229E  D7D5               	goto	l4288
  3054  0022A0  5030               	movf	___fldiv@rem,w,c
  3055  0022A2  1031               	iorwf	___fldiv@rem+1,w,c
  3056  0022A4  1032               	iorwf	___fldiv@rem+2,w,c
  3057  0022A6  1033               	iorwf	___fldiv@rem+3,w,c
  3058  0022A8  B4D8               	btfsc	status,2,c
  3059  0022AA  D011               	goto	l4314
  3060  0022AC  8036               	bsf	___fldiv@grs,0,c
  3061  0022AE  D00F               	goto	l4314
  3062  0022B0                     l4308:
  3063  0022B0  90D8               	bcf	status,0,c
  3064  0022B2  3623               	rlcf	___fldiv@b,f,c
  3065  0022B4  3624               	rlcf	___fldiv@b+1,f,c
  3066  0022B6  3625               	rlcf	___fldiv@b+2,f,c
  3067  0022B8  3626               	rlcf	___fldiv@b+3,f,c
  3068  0022BA  BE39               	btfsc	___fldiv@grs+3,7,c
  3069  0022BC  8023               	bsf	___fldiv@b,0,c
  3070  0022BE  90D8               	bcf	status,0,c
  3071  0022C0  3636               	rlcf	___fldiv@grs,f,c
  3072  0022C2  3637               	rlcf	___fldiv@grs+1,f,c
  3073  0022C4  3638               	rlcf	___fldiv@grs+2,f,c
  3074  0022C6  3639               	rlcf	___fldiv@grs+3,f,c
  3075  0022C8  0634               	decf	___fldiv@new_exp,f,c
  3076  0022CA  A0D8               	btfss	status,0,c
  3077  0022CC  0635               	decf	___fldiv@new_exp+1,f,c
  3078  0022CE                     l4314:
  3079  0022CE  AE25               	btfss	___fldiv@b+2,7,c
  3080  0022D0  D7EF               	goto	l4308
  3081  0022D2  0E00               	movlw	0
  3082  0022D4  6E3B               	movwf	___fldiv@aexp,c
  3083  0022D6  AE39               	btfss	___fldiv@grs+3,7,c
  3084  0022D8  D016               	goto	l1047
  3085  0022DA  0EFF               	movlw	255
  3086  0022DC  1436               	andwf	___fldiv@grs,w,c
  3087  0022DE  6E2B               	movwf	??___fldiv& (0+255),c
  3088  0022E0  0EFF               	movlw	255
  3089  0022E2  1437               	andwf	___fldiv@grs+1,w,c
  3090  0022E4  6E2C               	movwf	(??___fldiv+1)& (0+255),c
  3091  0022E6  0EFF               	movlw	255
  3092  0022E8  1438               	andwf	___fldiv@grs+2,w,c
  3093  0022EA  6E2D               	movwf	(??___fldiv+2)& (0+255),c
  3094  0022EC  0E7F               	movlw	127
  3095  0022EE  1439               	andwf	___fldiv@grs+3,w,c
  3096  0022F0  6E2E               	movwf	(??___fldiv+3)& (0+255),c
  3097  0022F2  502B               	movf	??___fldiv,w,c
  3098  0022F4  102C               	iorwf	??___fldiv+1,w,c
  3099  0022F6  102D               	iorwf	??___fldiv+2,w,c
  3100  0022F8  102E               	iorwf	??___fldiv+3,w,c
  3101  0022FA  A4D8               	btfss	status,2,c
  3102  0022FC  D002               	goto	l4324
  3103  0022FE  A023               	btfss	___fldiv@b,0,c
  3104  002300  D002               	goto	l1047
  3105  002302                     l4324:
  3106  002302  0E01               	movlw	1
  3107  002304  6E3B               	movwf	___fldiv@aexp,c
  3108  002306                     l1047:
  3109  002306  503B               	movf	___fldiv@aexp,w,c
  3110  002308  B4D8               	btfsc	status,2,c
  3111  00230A  D01F               	goto	l4334
  3112  00230C  0E01               	movlw	1
  3113  00230E  2623               	addwf	___fldiv@b,f,c
  3114  002310  0E00               	movlw	0
  3115  002312  2224               	addwfc	___fldiv@b+1,f,c
  3116  002314  2225               	addwfc	___fldiv@b+2,f,c
  3117  002316  2226               	addwfc	___fldiv@b+3,f,c
  3118  002318  A026               	btfss	___fldiv@b+3,0,c
  3119  00231A  D017               	goto	l4334
  3120  00231C  C023  F02B         	movff	___fldiv@b,??___fldiv
  3121  002320  C024  F02C         	movff	___fldiv@b+1,??___fldiv+1
  3122  002324  C025  F02D         	movff	___fldiv@b+2,??___fldiv+2
  3123  002328  C026  F02E         	movff	___fldiv@b+3,??___fldiv+3
  3124  00232C  342E               	rlcf	??___fldiv+3,w,c
  3125  00232E  322E               	rrcf	??___fldiv+3,f,c
  3126  002330  322D               	rrcf	??___fldiv+2,f,c
  3127  002332  322C               	rrcf	??___fldiv+1,f,c
  3128  002334  322B               	rrcf	??___fldiv,f,c
  3129  002336  C02B  F023         	movff	??___fldiv,___fldiv@b
  3130  00233A  C02C  F024         	movff	??___fldiv+1,___fldiv@b+1
  3131  00233E  C02D  F025         	movff	??___fldiv+2,___fldiv@b+2
  3132  002342  C02E  F026         	movff	??___fldiv+3,___fldiv@b+3
  3133  002346  4A34               	infsnz	___fldiv@new_exp,f,c
  3134  002348  2A35               	incf	___fldiv@new_exp+1,f,c
  3135  00234A                     l4334:
  3136  00234A  BE35               	btfsc	___fldiv@new_exp+1,7,c
  3137  00234C  D010               	goto	l4338
  3138  00234E  5035               	movf	___fldiv@new_exp+1,w,c
  3139  002350  E103               	bnz	u4940
  3140  002352  2834               	incf	___fldiv@new_exp,w,c
  3141  002354  A0D8               	btfss	status,0,c
  3142  002356  D00B               	goto	l4338
  3143  002358                     u4940:
  3144  002358  0E00               	movlw	0
  3145  00235A  6E35               	movwf	___fldiv@new_exp+1,c
  3146  00235C  6834               	setf	___fldiv@new_exp,c
  3147  00235E  0E00               	movlw	0
  3148  002360  6E23               	movwf	___fldiv@b,c
  3149  002362  0E00               	movlw	0
  3150  002364  6E24               	movwf	___fldiv@b+1,c
  3151  002366  0E00               	movlw	0
  3152  002368  6E25               	movwf	___fldiv@b+2,c
  3153  00236A  0E00               	movlw	0
  3154  00236C  6E26               	movwf	___fldiv@b+3,c
  3155  00236E                     l4338:
  3156  00236E  BE35               	btfsc	___fldiv@new_exp+1,7,c
  3157  002370  D005               	goto	l4340
  3158  002372  5035               	movf	___fldiv@new_exp+1,w,c
  3159  002374  E111               	bnz	l4342
  3160  002376  0434               	decf	___fldiv@new_exp,w,c
  3161  002378  B0D8               	btfsc	status,0,c
  3162  00237A  D00E               	goto	l4342
  3163  00237C                     l4340:
  3164  00237C  0E00               	movlw	0
  3165  00237E  6E35               	movwf	___fldiv@new_exp+1,c
  3166  002380  0E00               	movlw	0
  3167  002382  6E34               	movwf	___fldiv@new_exp,c
  3168  002384  0E00               	movlw	0
  3169  002386  6E23               	movwf	___fldiv@b,c
  3170  002388  0E00               	movlw	0
  3171  00238A  6E24               	movwf	___fldiv@b+1,c
  3172  00238C  0E00               	movlw	0
  3173  00238E  6E25               	movwf	___fldiv@b+2,c
  3174  002390  0E00               	movlw	0
  3175  002392  6E26               	movwf	___fldiv@b+3,c
  3176  002394  0E00               	movlw	0
  3177  002396  6E2F               	movwf	___fldiv@sign,c
  3178  002398                     l4342:
  3179  002398  C034  F03A         	movff	___fldiv@new_exp,___fldiv@bexp
  3180  00239C  A03A               	btfss	___fldiv@bexp,0,c
  3181  00239E  D002               	goto	l4348
  3182  0023A0  8E25               	bsf	___fldiv@b+2,7,c
  3183  0023A2  D001               	goto	l4350
  3184  0023A4                     l4348:
  3185  0023A4  9E25               	bcf	___fldiv@b+2,7,c
  3186  0023A6                     l4350:
  3187  0023A6  90D8               	bcf	status,0,c
  3188  0023A8  303A               	rrcf	___fldiv@bexp,w,c
  3189  0023AA  6E26               	movwf	___fldiv@b+3,c
  3190  0023AC  502F               	movf	___fldiv@sign,w,c
  3191  0023AE  1226               	iorwf	___fldiv@b+3,f,c
  3192  0023B0  C023  F023         	movff	___fldiv@b,?___fldiv
  3193  0023B4  C024  F024         	movff	___fldiv@b+1,?___fldiv+1
  3194  0023B8  C025  F025         	movff	___fldiv@b+2,?___fldiv+2
  3195  0023BC  C026  F026         	movff	___fldiv@b+3,?___fldiv+3
  3196  0023C0  0012               	return	
  3197  0023C2                     __end_of___fldiv:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           intcon	equ	0xFF2
  3204                           intcon2	equ	0xFF1
  3205                           intcon3	equ	0xFF0
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           postdec1	equ	0xFE5
  3209                           fsr1l	equ	0xFE1
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function _lcd_init *****************
  3213 ;; Defined at:
  3214 ;;		line 56 in file "lcd_x8.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  i               1   24[COMRAM] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;Total ram usage:        1 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    6
  3235 ;; This function calls:
  3236 ;;		_delay_ms
  3237 ;;		_lcd_send_byte
  3238 ;;		_lcd_send_nibble
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text5
  3245  002F30                     __ptext5:
  3246                           	opt stack 0
  3247  002F30                     _lcd_init:
  3248                           	opt stack 24
  3249                           
  3250                           ;lcd_x8.c: 58: unsigned char i;
  3251                           ;lcd_x8.c: 61: PORTEbits.RE2 = 0;
  3252                           
  3253                           ;incstack = 0
  3254  002F30  9484               	bcf	3972,2,c	;volatile
  3255                           
  3256                           ;lcd_x8.c: 63: PORTEbits.RE1 = 0;
  3257  002F32  9284               	bcf	3972,1,c	;volatile
  3258                           
  3259                           ;lcd_x8.c: 65: delay_ms(25);
  3260  002F34  0E00               	movlw	0
  3261  002F36  6E10               	movwf	delay_ms@n+1,c
  3262  002F38  0E19               	movlw	25
  3263  002F3A  6E0F               	movwf	delay_ms@n,c
  3264  002F3C  ECD8  F018         	call	_delay_ms	;wreg free
  3265                           
  3266                           ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
  3267  002F40  0E01               	movlw	1
  3268  002F42  6E19               	movwf	lcd_init@i,c
  3269  002F44                     l4364:
  3270  002F44  0E03               	movlw	3
  3271  002F46  6419               	cpfsgt	lcd_init@i,c
  3272  002F48  D001               	goto	l4368
  3273  002F4A  D005               	goto	l4374
  3274  002F4C                     l4368:
  3275                           
  3276                           ;lcd_x8.c: 67: lcd_send_nibble(3);
  3277  002F4C  0E03               	movlw	3
  3278  002F4E  ECEA  F018         	call	_lcd_send_nibble
  3279  002F52  2A19               	incf	lcd_init@i,f,c
  3280  002F54  D7F7               	goto	l4364
  3281  002F56                     l4374:
  3282                           
  3283                           ;lcd_x8.c: 70: }
  3284                           ;lcd_x8.c: 72: lcd_send_nibble(2);
  3285  002F56  0E02               	movlw	2
  3286  002F58  ECEA  F018         	call	_lcd_send_nibble
  3287                           
  3288                           ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
  3289  002F5C  0E00               	movlw	0
  3290  002F5E  6E19               	movwf	lcd_init@i,c
  3291  002F60                     l4378:
  3292  002F60  0E03               	movlw	3
  3293  002F62  6419               	cpfsgt	lcd_init@i,c
  3294  002F64  D001               	goto	l4382
  3295  002F66  0012               	return	
  3296  002F68                     l4382:
  3297                           
  3298                           ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
  3299  002F68  5019               	movf	lcd_init@i,w,c
  3300  002F6A  0D01               	mullw	1
  3301  002F6C  0E6D               	movlw	low _LCD_INIT_STRING
  3302  002F6E  24F3               	addwf	prodl,w,c
  3303  002F70  6ED9               	movwf	fsr2l,c
  3304  002F72  0E00               	movlw	high _LCD_INIT_STRING
  3305  002F74  20F4               	addwfc	prodh,w,c
  3306  002F76  6EDA               	movwf	fsr2h,c
  3307  002F78  50DF               	movf	indf2,w,c
  3308  002F7A  6E17               	movwf	lcd_send_byte@n,c
  3309  002F7C  0E00               	movlw	0
  3310  002F7E  EC4F  F018         	call	_lcd_send_byte
  3311  002F82  2A19               	incf	lcd_init@i,f,c
  3312  002F84  D7ED               	goto	l4378
  3313  002F86                     __end_of_lcd_init:
  3314                           	opt stack 0
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           prodh	equ	0xFF4
  3320                           prodl	equ	0xFF3
  3321                           intcon	equ	0xFF2
  3322                           intcon2	equ	0xFF1
  3323                           intcon3	equ	0xFF0
  3324                           postinc0	equ	0xFEE
  3325                           wreg	equ	0xFE8
  3326                           postdec1	equ	0xFE5
  3327                           fsr1l	equ	0xFE1
  3328                           indf2	equ	0xFDF
  3329                           fsr2h	equ	0xFDA
  3330                           fsr2l	equ	0xFD9
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function _init_adc_no_lib *****************
  3334 ;; Defined at:
  3335 ;;		line 10 in file "my_adc.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    3
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text6
  3364  003262                     __ptext6:
  3365                           	opt stack 0
  3366  003262                     _init_adc_no_lib:
  3367                           	opt stack 27
  3368                           
  3369                           ;my_adc.c: 12: ADCON0 = 0;
  3370                           
  3371                           ;incstack = 0
  3372  003262  0E00               	movlw	0
  3373  003264  6EC2               	movwf	4034,c	;volatile
  3374                           
  3375                           ;my_adc.c: 13: ADCON0bits.ADON = 1;
  3376  003266  80C2               	bsf	4034,0,c	;volatile
  3377                           
  3378                           ;my_adc.c: 15: ADCON2 = 0b10001001;
  3379  003268  0E89               	movlw	137
  3380  00326A  6EC0               	movwf	4032,c	;volatile
  3381  00326C  0012               	return		;funcret
  3382  00326E                     __end_of_init_adc_no_lib:
  3383                           	opt stack 0
  3384                           tblptru	equ	0xFF8
  3385                           tblptrh	equ	0xFF7
  3386                           tblptrl	equ	0xFF6
  3387                           tablat	equ	0xFF5
  3388                           prodh	equ	0xFF4
  3389                           prodl	equ	0xFF3
  3390                           intcon	equ	0xFF2
  3391                           intcon2	equ	0xFF1
  3392                           intcon3	equ	0xFF0
  3393                           postinc0	equ	0xFEE
  3394                           wreg	equ	0xFE8
  3395                           postdec1	equ	0xFE5
  3396                           fsr1l	equ	0xFE1
  3397                           indf2	equ	0xFDF
  3398                           fsr2h	equ	0xFDA
  3399                           fsr2l	equ	0xFD9
  3400                           status	equ	0xFD8
  3401                           
  3402 ;; *************** function _display *****************
  3403 ;; Defined at:
  3404 ;;		line 166 in file "hw.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  LCD            64   64[BANK1 ] unsigned char [64]
  3409 ;;  LCDP           64    0[BANK1 ] unsigned char [64]
  3410 ;;  H               1  129[BANK1 ] unsigned char 
  3411 ;;  C               1  128[BANK1 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Locals:         0       0     130       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Totals:         0       2     130       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;Total ram usage:      132 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    9
  3428 ;; This function calls:
  3429 ;;		_lcd_gotoxy
  3430 ;;		_lcd_putc
  3431 ;;		_lcd_puts
  3432 ;;		_sprintf
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text7
  3439  001E42                     __ptext7:
  3440                           	opt stack 0
  3441  001E42                     _display:
  3442                           	opt stack 21
  3443                           
  3444                           ;hw.c: 167: char LCD[64];
  3445                           ;hw.c: 168: char LCDP[64];
  3446                           ;hw.c: 169: unsigned char C;
  3447                           ;hw.c: 170: unsigned char H ;
  3448                           ;hw.c: 174: if(PORTCbits.RC5 == 1){
  3449                           
  3450                           ;incstack = 0
  3451  001E42  AA82               	btfss	3970,5,c	;volatile
  3452  001E44  D002               	goto	l5200
  3453                           
  3454                           ;hw.c: 175: H = 'O';
  3455  001E46  0E4F               	movlw	79
  3456  001E48  D001               	goto	L3
  3457  001E4A                     l5200:
  3458                           
  3459                           ;hw.c: 177: else{
  3460                           ;hw.c: 178: H = 'F';
  3461  001E4A  0E46               	movlw	70
  3462  001E4C                     L3:
  3463  001E4C  0101               	movlb	1	; () banked
  3464  001E4E  6F81               	movwf	display@H& (0+255),b
  3465                           
  3466                           ; BSR set to: 1
  3467                           ;hw.c: 179: }
  3468                           ;hw.c: 181: if( start_flag ==1 &&(sec>0 || min>0 || hour >0)){
  3469                           
  3470                           ; BSR set to: 1
  3471  001E50  0101               	movlb	1	; () banked
  3472  001E52  0592               	decf	_start_flag& (0+255),w,b
  3473  001E54  0101               	movlb	1	; () banked
  3474  001E56  1193               	iorwf	(_start_flag+1)& (0+255),w,b
  3475  001E58  A4D8               	btfss	status,2,c
  3476  001E5A  D020               	goto	l5212
  3477                           
  3478                           ; BSR set to: 1
  3479  001E5C  0101               	movlb	1	; () banked
  3480  001E5E  BF91               	btfsc	(_sec+1)& (0+255),7,b
  3481  001E60  D007               	goto	l5206
  3482  001E62  0101               	movlb	1	; () banked
  3483  001E64  5191               	movf	(_sec+1)& (0+255),w,b
  3484  001E66  E118               	bnz	l5210
  3485  001E68  0101               	movlb	1	; () banked
  3486  001E6A  0590               	decf	_sec& (0+255),w,b
  3487  001E6C  B0D8               	btfsc	status,0,c
  3488  001E6E  D014               	goto	l5210
  3489  001E70                     l5206:
  3490                           
  3491                           ; BSR set to: 1
  3492  001E70  0101               	movlb	1	; () banked
  3493  001E72  BF8D               	btfsc	(_min+1)& (0+255),7,b
  3494  001E74  D007               	goto	l5208
  3495  001E76  0101               	movlb	1	; () banked
  3496  001E78  518D               	movf	(_min+1)& (0+255),w,b
  3497  001E7A  E10E               	bnz	l5210
  3498  001E7C  0101               	movlb	1	; () banked
  3499  001E7E  058C               	decf	_min& (0+255),w,b
  3500  001E80  B0D8               	btfsc	status,0,c
  3501  001E82  D00A               	goto	l5210
  3502  001E84                     l5208:
  3503                           
  3504                           ; BSR set to: 1
  3505  001E84  0101               	movlb	1	; () banked
  3506  001E86  BF8B               	btfsc	(_hour+1)& (0+255),7,b
  3507  001E88  D009               	goto	l5212
  3508  001E8A  0101               	movlb	1	; () banked
  3509  001E8C  518B               	movf	(_hour+1)& (0+255),w,b
  3510  001E8E  E104               	bnz	l5210
  3511  001E90  0101               	movlb	1	; () banked
  3512  001E92  058A               	decf	_hour& (0+255),w,b
  3513  001E94  A0D8               	btfss	status,0,c
  3514  001E96  D002               	goto	l5212
  3515  001E98                     l5210:
  3516                           
  3517                           ; BSR set to: 1
  3518                           ;hw.c: 182: C = 'O';
  3519  001E98  0E4F               	movlw	79
  3520  001E9A  D001               	goto	L4
  3521  001E9C                     l5212:
  3522                           
  3523                           ; BSR set to: 1
  3524                           ;hw.c: 184: else{
  3525                           ;hw.c: 185: C = 'F';
  3526  001E9C  0E46               	movlw	70
  3527  001E9E                     L4:
  3528  001E9E  0101               	movlb	1	; () banked
  3529  001EA0  6F80               	movwf	display@C& (0+255),b
  3530                           
  3531                           ; BSR set to: 1
  3532                           ;hw.c: 186: }
  3533                           ;hw.c: 189: switch(mode){
  3534  001EA2  D04B               	goto	l5226
  3535  001EA4                     l5214:
  3536                           
  3537                           ;hw.c: 191: sprintf(LCDP, "sec           ");
  3538  001EA4  0E00               	movlw	low display@LCDP
  3539  001EA6  0100               	movlb	0	; () banked
  3540  001EA8  6FAE               	movwf	sprintf@sp& (0+255),b
  3541  001EAA  0E01               	movlw	high display@LCDP
  3542  001EAC  0100               	movlb	0	; () banked
  3543  001EAE  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3544  001EB0  0EA9               	movlw	low STR_1
  3545  001EB2  0100               	movlb	0	; () banked
  3546  001EB4  6FB0               	movwf	sprintf@f& (0+255),b
  3547  001EB6  0EFF               	movlw	high STR_1
  3548  001EB8  0100               	movlb	0	; () banked
  3549  001EBA  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3550  001EBC  EC0D  F000         	call	_sprintf	;wreg free
  3551                           
  3552                           ;hw.c: 192: break;
  3553  001EC0  D056               	goto	l5228
  3554  001EC2                     l5216:
  3555                           
  3556                           ;hw.c: 195: sprintf(LCDP, "10 sec          ");
  3557  001EC2  0E00               	movlw	low display@LCDP
  3558  001EC4  0100               	movlb	0	; () banked
  3559  001EC6  6FAE               	movwf	sprintf@sp& (0+255),b
  3560  001EC8  0E01               	movlw	high display@LCDP
  3561  001ECA  0100               	movlb	0	; () banked
  3562  001ECC  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3563  001ECE  0E98               	movlw	low STR_2
  3564  001ED0  0100               	movlb	0	; () banked
  3565  001ED2  6FB0               	movwf	sprintf@f& (0+255),b
  3566  001ED4  0EFF               	movlw	high STR_2
  3567  001ED6  0100               	movlb	0	; () banked
  3568  001ED8  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3569  001EDA  EC0D  F000         	call	_sprintf	;wreg free
  3570                           
  3571                           ;hw.c: 196: break;
  3572  001EDE  D047               	goto	l5228
  3573  001EE0                     l5218:
  3574                           
  3575                           ;hw.c: 198: sprintf(LCDP, "min          ");
  3576  001EE0  0E00               	movlw	low display@LCDP
  3577  001EE2  0100               	movlb	0	; () banked
  3578  001EE4  6FAE               	movwf	sprintf@sp& (0+255),b
  3579  001EE6  0E01               	movlw	high display@LCDP
  3580  001EE8  0100               	movlb	0	; () banked
  3581  001EEA  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3582  001EEC  0EB8               	movlw	low STR_3
  3583  001EEE  0100               	movlb	0	; () banked
  3584  001EF0  6FB0               	movwf	sprintf@f& (0+255),b
  3585  001EF2  0EFF               	movlw	high STR_3
  3586  001EF4  0100               	movlb	0	; () banked
  3587  001EF6  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3588  001EF8  EC0D  F000         	call	_sprintf	;wreg free
  3589                           
  3590                           ;hw.c: 199: break;
  3591  001EFC  D038               	goto	l5228
  3592  001EFE                     l5220:
  3593                           
  3594                           ;hw.c: 201: sprintf(LCDP, "10 min      ");
  3595  001EFE  0E00               	movlw	low display@LCDP
  3596  001F00  0100               	movlb	0	; () banked
  3597  001F02  6FAE               	movwf	sprintf@sp& (0+255),b
  3598  001F04  0E01               	movlw	high display@LCDP
  3599  001F06  0100               	movlb	0	; () banked
  3600  001F08  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3601  001F0A  0EC6               	movlw	low STR_4
  3602  001F0C  0100               	movlb	0	; () banked
  3603  001F0E  6FB0               	movwf	sprintf@f& (0+255),b
  3604  001F10  0EFF               	movlw	high STR_4
  3605  001F12  0100               	movlb	0	; () banked
  3606  001F14  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3607  001F16  EC0D  F000         	call	_sprintf	;wreg free
  3608                           
  3609                           ;hw.c: 202: break;
  3610  001F1A  D029               	goto	l5228
  3611  001F1C                     l5222:
  3612                           
  3613                           ;hw.c: 204: sprintf(LCDP, "hour      ");
  3614  001F1C  0E00               	movlw	low display@LCDP
  3615  001F1E  0100               	movlb	0	; () banked
  3616  001F20  6FAE               	movwf	sprintf@sp& (0+255),b
  3617  001F22  0E01               	movlw	high display@LCDP
  3618  001F24  0100               	movlb	0	; () banked
  3619  001F26  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3620  001F28  0ED3               	movlw	low STR_5
  3621  001F2A  0100               	movlb	0	; () banked
  3622  001F2C  6FB0               	movwf	sprintf@f& (0+255),b
  3623  001F2E  0EFF               	movlw	high STR_5
  3624  001F30  0100               	movlb	0	; () banked
  3625  001F32  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3626  001F34  EC0D  F000         	call	_sprintf	;wreg free
  3627                           
  3628                           ;hw.c: 207: }
  3629                           
  3630                           ;hw.c: 205: break;
  3631  001F38  D01A               	goto	l5228
  3632  001F3A                     l5226:
  3633  001F3A  C18E  F0D3         	movff	_mode,??_display
  3634  001F3E  C18F  F0D4         	movff	_mode+1,??_display+1
  3635                           
  3636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3637                           ; Switch size 1, requested type "space"
  3638                           ; Number of cases is 1, Range of values is 0 to 0
  3639                           ; switch strategies available:
  3640                           ; Name         Instructions Cycles
  3641                           ; simple_byte            4     3 (average)
  3642                           ;	Chosen strategy is simple_byte
  3643  001F42  0100               	movlb	0	; () banked
  3644  001F44  51D4               	movf	(??_display+1)& (0+255),w,b
  3645  001F46  0A00               	xorlw	0	; case 0
  3646  001F48  A4D8               	btfss	status,2,c
  3647  001F4A  D011               	goto	l5228
  3648                           
  3649                           ; BSR set to: 0
  3650                           ; Switch size 1, requested type "space"
  3651                           ; Number of cases is 5, Range of values is 0 to 4
  3652                           ; switch strategies available:
  3653                           ; Name         Instructions Cycles
  3654                           ; simple_byte           16     9 (average)
  3655                           ;	Chosen strategy is simple_byte
  3656  001F4C  0100               	movlb	0	; () banked
  3657  001F4E  51D3               	movf	??_display& (0+255),w,b
  3658  001F50  0A00               	xorlw	0	; case 0
  3659  001F52  B4D8               	btfsc	status,2,c
  3660  001F54  D7A7               	goto	l5214
  3661  001F56  0A01               	xorlw	1	; case 1
  3662  001F58  B4D8               	btfsc	status,2,c
  3663  001F5A  D7B3               	goto	l5216
  3664  001F5C  0A03               	xorlw	3	; case 2
  3665  001F5E  B4D8               	btfsc	status,2,c
  3666  001F60  D7BF               	goto	l5218
  3667  001F62  0A01               	xorlw	1	; case 3
  3668  001F64  B4D8               	btfsc	status,2,c
  3669  001F66  D7CB               	goto	l5220
  3670  001F68  0A07               	xorlw	7	; case 4
  3671  001F6A  B4D8               	btfsc	status,2,c
  3672  001F6C  D7D7               	goto	l5222
  3673  001F6E                     l5228:
  3674                           
  3675                           ;hw.c: 211: lcd_gotoxy(1, 1);
  3676  001F6E  0E01               	movlw	1
  3677  001F70  6E19               	movwf	lcd_gotoxy@y,c
  3678  001F72  0E01               	movlw	1
  3679  001F74  EC11  F018         	call	_lcd_gotoxy
  3680                           
  3681                           ;hw.c: 212: sprintf(LCD, "Time:%02d:%02d:%02d ", hour,min,sec);
  3682  001F78  0E40               	movlw	low display@LCD
  3683  001F7A  0100               	movlb	0	; () banked
  3684  001F7C  6FAE               	movwf	sprintf@sp& (0+255),b
  3685  001F7E  0E01               	movlw	high display@LCD
  3686  001F80  0100               	movlb	0	; () banked
  3687  001F82  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3688  001F84  0E83               	movlw	low STR_6
  3689  001F86  0100               	movlb	0	; () banked
  3690  001F88  6FB0               	movwf	sprintf@f& (0+255),b
  3691  001F8A  0EFF               	movlw	high STR_6
  3692  001F8C  0100               	movlb	0	; () banked
  3693  001F8E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3694  001F90  C18A  F0B2         	movff	_hour,?_sprintf+4
  3695  001F94  C18B  F0B3         	movff	_hour+1,?_sprintf+5
  3696  001F98  C18C  F0B4         	movff	_min,?_sprintf+6
  3697  001F9C  C18D  F0B5         	movff	_min+1,?_sprintf+7
  3698  001FA0  C190  F0B6         	movff	_sec,?_sprintf+8
  3699  001FA4  C191  F0B7         	movff	_sec+1,?_sprintf+9
  3700  001FA8  EC0D  F000         	call	_sprintf	;wreg free
  3701                           
  3702                           ;hw.c: 213: lcd_puts(LCD);
  3703  001FAC  0E40               	movlw	low display@LCD
  3704  001FAE  6E1D               	movwf	lcd_puts@s,c
  3705  001FB0  0E01               	movlw	high display@LCD
  3706  001FB2  6E1E               	movwf	lcd_puts@s+1,c
  3707  001FB4  ECC6  F018         	call	_lcd_puts	;wreg free
  3708                           
  3709                           ;hw.c: 215: lcd_gotoxy(1, 2);
  3710  001FB8  0E02               	movlw	2
  3711  001FBA  6E19               	movwf	lcd_gotoxy@y,c
  3712  001FBC  0E01               	movlw	1
  3713  001FBE  EC11  F018         	call	_lcd_gotoxy
  3714                           
  3715                           ;hw.c: 216: sprintf(LCD, "CT:%6.2fC", temp);
  3716  001FC2  0E40               	movlw	low display@LCD
  3717  001FC4  0100               	movlb	0	; () banked
  3718  001FC6  6FAE               	movwf	sprintf@sp& (0+255),b
  3719  001FC8  0E01               	movlw	high display@LCD
  3720  001FCA  0100               	movlb	0	; () banked
  3721  001FCC  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3722  001FCE  0EE8               	movlw	low STR_7
  3723  001FD0  0100               	movlb	0	; () banked
  3724  001FD2  6FB0               	movwf	sprintf@f& (0+255),b
  3725  001FD4  0EFF               	movlw	high STR_7
  3726  001FD6  0100               	movlb	0	; () banked
  3727  001FD8  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3728  001FDA  C186  F0B2         	movff	_temp,?_sprintf+4
  3729  001FDE  C187  F0B3         	movff	_temp+1,?_sprintf+5
  3730  001FE2  C188  F0B4         	movff	_temp+2,?_sprintf+6
  3731  001FE6  C189  F0B5         	movff	_temp+3,?_sprintf+7
  3732  001FEA  EC0D  F000         	call	_sprintf	;wreg free
  3733                           
  3734                           ;hw.c: 217: lcd_puts(LCD);
  3735  001FEE  0E40               	movlw	low display@LCD
  3736  001FF0  6E1D               	movwf	lcd_puts@s,c
  3737  001FF2  0E01               	movlw	high display@LCD
  3738  001FF4  6E1E               	movwf	lcd_puts@s+1,c
  3739  001FF6  ECC6  F018         	call	_lcd_puts	;wreg free
  3740                           
  3741                           ;hw.c: 219: lcd_gotoxy(12, 2);
  3742  001FFA  0E02               	movlw	2
  3743  001FFC  6E19               	movwf	lcd_gotoxy@y,c
  3744  001FFE  0E0C               	movlw	12
  3745  002000  EC11  F018         	call	_lcd_gotoxy
  3746                           
  3747                           ;hw.c: 220: sprintf(LCD, "CK:");
  3748  002004  0E40               	movlw	low display@LCD
  3749  002006  0100               	movlb	0	; () banked
  3750  002008  6FAE               	movwf	sprintf@sp& (0+255),b
  3751  00200A  0E01               	movlw	high display@LCD
  3752  00200C  0100               	movlb	0	; () banked
  3753  00200E  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3754  002010  0EF7               	movlw	low STR_8
  3755  002012  0100               	movlb	0	; () banked
  3756  002014  6FB0               	movwf	sprintf@f& (0+255),b
  3757  002016  0EFF               	movlw	high STR_8
  3758  002018  0100               	movlb	0	; () banked
  3759  00201A  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3760  00201C  EC0D  F000         	call	_sprintf	;wreg free
  3761                           
  3762                           ;hw.c: 221: lcd_puts(LCD);
  3763  002020  0E40               	movlw	low display@LCD
  3764  002022  6E1D               	movwf	lcd_puts@s,c
  3765  002024  0E01               	movlw	high display@LCD
  3766  002026  6E1E               	movwf	lcd_puts@s+1,c
  3767  002028  ECC6  F018         	call	_lcd_puts	;wreg free
  3768                           
  3769                           ;hw.c: 222: lcd_gotoxy(12, 3);
  3770  00202C  0E03               	movlw	3
  3771  00202E  6E19               	movwf	lcd_gotoxy@y,c
  3772  002030  0E0C               	movlw	12
  3773  002032  EC11  F018         	call	_lcd_gotoxy
  3774                           
  3775                           ;hw.c: 223: sprintf(LCD, "HT:");
  3776  002036  0E40               	movlw	low display@LCD
  3777  002038  0100               	movlb	0	; () banked
  3778  00203A  6FAE               	movwf	sprintf@sp& (0+255),b
  3779  00203C  0E01               	movlw	high display@LCD
  3780  00203E  0100               	movlb	0	; () banked
  3781  002040  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3782  002042  0EFB               	movlw	low STR_9
  3783  002044  0100               	movlb	0	; () banked
  3784  002046  6FB0               	movwf	sprintf@f& (0+255),b
  3785  002048  0EFF               	movlw	high STR_9
  3786  00204A  0100               	movlb	0	; () banked
  3787  00204C  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3788  00204E  EC0D  F000         	call	_sprintf	;wreg free
  3789                           
  3790                           ;hw.c: 224: lcd_puts(LCD);
  3791  002052  0E40               	movlw	low display@LCD
  3792  002054  6E1D               	movwf	lcd_puts@s,c
  3793  002056  0E01               	movlw	high display@LCD
  3794  002058  6E1E               	movwf	lcd_puts@s+1,c
  3795  00205A  ECC6  F018         	call	_lcd_puts	;wreg free
  3796                           
  3797                           ;hw.c: 226: lcd_gotoxy(1, 3);
  3798  00205E  0E03               	movlw	3
  3799  002060  6E19               	movwf	lcd_gotoxy@y,c
  3800  002062  0E01               	movlw	1
  3801  002064  EC11  F018         	call	_lcd_gotoxy
  3802                           
  3803                           ;hw.c: 227: sprintf(LCD, "SP:%6.2fC",sp);
  3804  002068  0E40               	movlw	low display@LCD
  3805  00206A  0100               	movlb	0	; () banked
  3806  00206C  6FAE               	movwf	sprintf@sp& (0+255),b
  3807  00206E  0E01               	movlw	high display@LCD
  3808  002070  0100               	movlb	0	; () banked
  3809  002072  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3810  002074  0EDE               	movlw	low STR_10
  3811  002076  0100               	movlb	0	; () banked
  3812  002078  6FB0               	movwf	sprintf@f& (0+255),b
  3813  00207A  0EFF               	movlw	high STR_10
  3814  00207C  0100               	movlb	0	; () banked
  3815  00207E  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3816  002080  C182  F0B2         	movff	_sp,?_sprintf+4
  3817  002084  C183  F0B3         	movff	_sp+1,?_sprintf+5
  3818  002088  C184  F0B4         	movff	_sp+2,?_sprintf+6
  3819  00208C  C185  F0B5         	movff	_sp+3,?_sprintf+7
  3820  002090  EC0D  F000         	call	_sprintf	;wreg free
  3821                           
  3822                           ;hw.c: 228: lcd_puts(LCD);
  3823  002094  0E40               	movlw	low display@LCD
  3824  002096  6E1D               	movwf	lcd_puts@s,c
  3825  002098  0E01               	movlw	high display@LCD
  3826  00209A  6E1E               	movwf	lcd_puts@s+1,c
  3827  00209C  ECC6  F018         	call	_lcd_puts	;wreg free
  3828                           
  3829                           ;hw.c: 230: lcd_gotoxy(15, 3);
  3830  0020A0  0E03               	movlw	3
  3831  0020A2  6E19               	movwf	lcd_gotoxy@y,c
  3832  0020A4  0E0F               	movlw	15
  3833  0020A6  EC11  F018         	call	_lcd_gotoxy
  3834                           
  3835                           ;hw.c: 231: lcd_putc(H);
  3836  0020AA  0101               	movlb	1	; () banked
  3837  0020AC  5181               	movf	display@H& (0+255),w,b
  3838  0020AE  ECC3  F017         	call	_lcd_putc
  3839                           
  3840                           ;hw.c: 234: lcd_gotoxy(15, 2);
  3841  0020B2  0E02               	movlw	2
  3842  0020B4  6E19               	movwf	lcd_gotoxy@y,c
  3843  0020B6  0E0F               	movlw	15
  3844  0020B8  EC11  F018         	call	_lcd_gotoxy
  3845                           
  3846                           ;hw.c: 235: lcd_putc(C);
  3847  0020BC  0101               	movlb	1	; () banked
  3848  0020BE  5180               	movf	display@C& (0+255),w,b
  3849  0020C0  ECC3  F017         	call	_lcd_putc
  3850                           
  3851                           ;hw.c: 239: lcd_gotoxy(1, 4);
  3852  0020C4  0E04               	movlw	4
  3853  0020C6  6E19               	movwf	lcd_gotoxy@y,c
  3854  0020C8  0E01               	movlw	1
  3855  0020CA  EC11  F018         	call	_lcd_gotoxy
  3856                           
  3857                           ;hw.c: 240: sprintf(LCD, "MD: ");
  3858  0020CE  0E40               	movlw	low display@LCD
  3859  0020D0  0100               	movlb	0	; () banked
  3860  0020D2  6FAE               	movwf	sprintf@sp& (0+255),b
  3861  0020D4  0E01               	movlw	high display@LCD
  3862  0020D6  0100               	movlb	0	; () banked
  3863  0020D8  6FAF               	movwf	(sprintf@sp+1)& (0+255),b
  3864  0020DA  0EF2               	movlw	low STR_11
  3865  0020DC  0100               	movlb	0	; () banked
  3866  0020DE  6FB0               	movwf	sprintf@f& (0+255),b
  3867  0020E0  0EFF               	movlw	high STR_11
  3868  0020E2  0100               	movlb	0	; () banked
  3869  0020E4  6FB1               	movwf	(sprintf@f+1)& (0+255),b
  3870  0020E6  EC0D  F000         	call	_sprintf	;wreg free
  3871                           
  3872                           ;hw.c: 241: lcd_puts(LCD);
  3873  0020EA  0E40               	movlw	low display@LCD
  3874  0020EC  6E1D               	movwf	lcd_puts@s,c
  3875  0020EE  0E01               	movlw	high display@LCD
  3876  0020F0  6E1E               	movwf	lcd_puts@s+1,c
  3877  0020F2  ECC6  F018         	call	_lcd_puts	;wreg free
  3878                           
  3879                           ;hw.c: 243: lcd_gotoxy(5, 4);
  3880  0020F6  0E04               	movlw	4
  3881  0020F8  6E19               	movwf	lcd_gotoxy@y,c
  3882  0020FA  0E05               	movlw	5
  3883  0020FC  EC11  F018         	call	_lcd_gotoxy
  3884                           
  3885                           ;hw.c: 244: lcd_puts(LCDP);
  3886  002100  0E00               	movlw	low display@LCDP
  3887  002102  6E1D               	movwf	lcd_puts@s,c
  3888  002104  0E01               	movlw	high display@LCDP
  3889  002106  6E1E               	movwf	lcd_puts@s+1,c
  3890  002108  ECC6  F018         	call	_lcd_puts	;wreg free
  3891  00210C  0012               	return		;funcret
  3892  00210E                     __end_of_display:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           intcon2	equ	0xFF1
  3902                           intcon3	equ	0xFF0
  3903                           postinc0	equ	0xFEE
  3904                           wreg	equ	0xFE8
  3905                           postdec1	equ	0xFE5
  3906                           fsr1l	equ	0xFE1
  3907                           indf2	equ	0xFDF
  3908                           fsr2h	equ	0xFDA
  3909                           fsr2l	equ	0xFD9
  3910                           status	equ	0xFD8
  3911                           
  3912 ;; *************** function _sprintf *****************
  3913 ;; Defined at:
  3914 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  3917 ;;		 -> display@LCD(64), display@LCDP(64), 
  3918 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  3919 ;;		 -> STR_11(5), STR_10(10), STR_9(4), STR_8(4), 
  3920 ;;		 -> STR_7(10), STR_6(21), STR_5(11), STR_4(13), 
  3921 ;;		 -> STR_3(14), STR_2(17), STR_1(15), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  fval            4   30[BANK0 ] PTR const unsigned char 
  3924 ;;  val             4   20[BANK0 ] unsigned long 
  3925 ;;  tmpval          4   16[BANK0 ] struct .
  3926 ;;  cp              3    0        PTR const unsigned char 
  3927 ;;  prec            2   34[BANK0 ] int 
  3928 ;;  width           2   28[BANK0 ] int 
  3929 ;;  flag            2   26[BANK0 ] unsigned short 
  3930 ;;  exp             2   24[BANK0 ] int 
  3931 ;;  ap              2   14[BANK0 ] PTR void [1]
  3932 ;;		 -> ?_sprintf(2), 
  3933 ;;  len             2    0        unsigned int 
  3934 ;;  c               1   36[BANK0 ] char 
  3935 ;;  d               1    0        unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  2    0[BANK0 ] int 
  3938 ;; Registers used:
  3939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3945 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Totals:         4      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;Total ram usage:       41 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    5
  3952 ;; This function calls:
  3953 ;;		___awdiv
  3954 ;;		___fladd
  3955 ;;		___flge
  3956 ;;		___flmul
  3957 ;;		___flneg
  3958 ;;		___flsub
  3959 ;;		___fltol
  3960 ;;		___lldiv
  3961 ;;		___llmod
  3962 ;;		___wmul
  3963 ;;		___xxtofl
  3964 ;;		__div_to_l_
  3965 ;;		__tdiv_to_l_
  3966 ;;		_fround
  3967 ;;		_isdigit
  3968 ;;		_scale
  3969 ;; This function is called by:
  3970 ;;		_display
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text8
  3975  00001A                     __ptext8:
  3976                           	opt stack 0
  3977  00001A                     _sprintf:
  3978                           	opt stack 24
  3979                           
  3980                           ;doprnt.c: 494: va_list ap;
  3981                           ;doprnt.c: 499: signed char c;
  3982                           ;doprnt.c: 501: int width;
  3983                           ;doprnt.c: 504: int prec;
  3984                           ;doprnt.c: 508: unsigned short flag;
  3985                           ;doprnt.c: 515: char d;
  3986                           ;doprnt.c: 516: double fval;
  3987                           ;doprnt.c: 517: int exp;
  3988                           ;doprnt.c: 523: union {
  3989                           ;doprnt.c: 524: unsigned long vd;
  3990                           ;doprnt.c: 525: double integ;
  3991                           ;doprnt.c: 526: } tmpval;
  3992                           ;doprnt.c: 528: unsigned long val;
  3993                           ;doprnt.c: 529: unsigned len;
  3994                           ;doprnt.c: 530: const char * cp;
  3995                           ;doprnt.c: 533: *ap = __va_start();
  3996                           
  3997                           ;incstack = 0
  3998  00001A  0EB2               	movlw	low (?_sprintf+4)
  3999  00001C  0100               	movlb	0	; () banked
  4000  00001E  6FBC               	movwf	sprintf@ap& (0+255),b
  4001  000020  0E00               	movlw	high (?_sprintf+4)
  4002  000022  0100               	movlb	0	; () banked
  4003  000024  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  4004                           
  4005                           ;doprnt.c: 536: while(c = *f++) {
  4006  000026  EF12  F006         	goto	l5190
  4007  00002A                     l4866:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;doprnt.c: 538: if(c != '%')
  4011  00002A  0E25               	movlw	37
  4012  00002C  0100               	movlb	0	; () banked
  4013  00002E  19D2               	xorwf	sprintf@c& (0+255),w,b
  4014  000030  B4D8               	btfsc	status,2,c
  4015  000032  D00B               	goto	l4872
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;doprnt.c: 540: {
  4019                           ;doprnt.c: 541: ((*sp++ = (c)));
  4020  000034  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  4021  000038  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  4022  00003C  C0D2  FFDF         	movff	sprintf@c,indf2
  4023                           
  4024                           ; BSR set to: 0
  4025  000040  0100               	movlb	0	; () banked
  4026  000042  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  4027  000044  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  4028                           
  4029                           ;doprnt.c: 542: continue;
  4030  000046  EF12  F006         	goto	l5190
  4031  00004A                     l4872:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;doprnt.c: 543: }
  4035                           ;doprnt.c: 546: width = 0;
  4036  00004A  0E00               	movlw	0
  4037  00004C  0100               	movlb	0	; () banked
  4038  00004E  6FCB               	movwf	(sprintf@width+1)& (0+255),b
  4039  000050  0E00               	movlw	0
  4040  000052  6FCA               	movwf	sprintf@width& (0+255),b
  4041                           
  4042                           ;doprnt.c: 548: flag = 0;
  4043  000054  0E00               	movlw	0
  4044  000056  0100               	movlb	0	; () banked
  4045  000058  6FC9               	movwf	(sprintf@flag+1)& (0+255),b
  4046  00005A  0E00               	movlw	0
  4047  00005C  6FC8               	movwf	sprintf@flag& (0+255),b
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;doprnt.c: 551: switch(*f) {
  4051                           
  4052                           ;doprnt.c: 550: for(;;) {
  4053  00005E  D005               	goto	l4878
  4054  000060                     l4874:
  4055                           
  4056                           ;doprnt.c: 580: flag |= 0x04;
  4057  000060  0100               	movlb	0	; () banked
  4058  000062  85C8               	bsf	sprintf@flag& (0+255),2,b
  4059                           
  4060                           ;doprnt.c: 581: f++;
  4061  000064  0100               	movlb	0	; () banked
  4062  000066  4BB0               	infsnz	sprintf@f& (0+255),f,b
  4063  000068  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  4064  00006A                     l4878:
  4065  00006A  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4066  00006E  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4067  000072                     	if	0	;tblptru may be non-zero
  4068  000072                     	endif
  4069  000072                     	if	0	;tblptru may be non-zero
  4070  000072                     	endif
  4071  000072  0008               	tblrd		*
  4072  000074  50F5               	movf	tablat,w,c
  4073                           
  4074                           ; Switch size 1, requested type "space"
  4075                           ; Number of cases is 1, Range of values is 48 to 48
  4076                           ; switch strategies available:
  4077                           ; Name         Instructions Cycles
  4078                           ; simple_byte            4     3 (average)
  4079                           ;	Chosen strategy is simple_byte
  4080  000076  0A30               	xorlw	48	; case 48
  4081  000078  B4D8               	btfsc	status,2,c
  4082  00007A  D7F2               	goto	l4874
  4083                           
  4084                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4085                           
  4086                           ;doprnt.c: 586: }
  4087                           
  4088                           ;doprnt.c: 585: break;
  4089  00007C  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4090  000080  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4091  000084                     	if	0	;tblptru may be non-zero
  4092  000084                     	endif
  4093  000084                     	if	0	;tblptru may be non-zero
  4094  000084                     	endif
  4095  000084  0008               	tblrd		*
  4096  000086  50F5               	movf	tablat,w,c
  4097  000088  EC0A  F019         	call	_isdigit
  4098  00008C  A0D8               	btfss	status,0,c
  4099  00008E  D036               	goto	l4892
  4100                           
  4101                           ;doprnt.c: 598: width = 0;
  4102  000090  0E00               	movlw	0
  4103  000092  0100               	movlb	0	; () banked
  4104  000094  6FCB               	movwf	(sprintf@width+1)& (0+255),b
  4105  000096  0E00               	movlw	0
  4106  000098  6FCA               	movwf	sprintf@width& (0+255),b
  4107  00009A                     l4884:
  4108                           
  4109                           ;doprnt.c: 600: width *= 10;
  4110  00009A  C0CA  F00F         	movff	sprintf@width,___wmul@multiplier
  4111  00009E  C0CB  F010         	movff	sprintf@width+1,___wmul@multiplier+1
  4112  0000A2  0E00               	movlw	0
  4113  0000A4  6E12               	movwf	___wmul@multiplicand+1,c
  4114  0000A6  0E0A               	movlw	10
  4115  0000A8  6E11               	movwf	___wmul@multiplicand,c
  4116  0000AA  ECB3  F018         	call	___wmul	;wreg free
  4117  0000AE  C00F  F0CA         	movff	?___wmul,sprintf@width
  4118  0000B2  C010  F0CB         	movff	?___wmul+1,sprintf@width+1
  4119                           
  4120                           ;doprnt.c: 601: width += *f++ - '0';
  4121  0000B6  0ED0               	movlw	208
  4122  0000B8  6E63               	movwf	??_sprintf& (0+255),c
  4123  0000BA  0EFF               	movlw	255
  4124  0000BC  6E64               	movwf	(??_sprintf+1)& (0+255),c
  4125  0000BE  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4126  0000C2  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4127  0000C6                     	if	0	;tblptru may be non-zero
  4128  0000C6                     	endif
  4129  0000C6                     	if	0	;tblptru may be non-zero
  4130  0000C6                     	endif
  4131  0000C6  0008               	tblrd		*
  4132  0000C8  50F5               	movf	tablat,w,c
  4133  0000CA  6E65               	movwf	(??_sprintf+2)& (0+255),c
  4134  0000CC  6A66               	clrf	(??_sprintf+3)& (0+255),c
  4135  0000CE  5063               	movf	??_sprintf,w,c
  4136  0000D0  2665               	addwf	??_sprintf+2,f,c
  4137  0000D2  5064               	movf	??_sprintf+1,w,c
  4138  0000D4  2266               	addwfc	??_sprintf+3,f,c
  4139  0000D6  5065               	movf	??_sprintf+2,w,c
  4140  0000D8  0100               	movlb	0	; () banked
  4141  0000DA  27CA               	addwf	sprintf@width& (0+255),f,b
  4142  0000DC  5066               	movf	??_sprintf+3,w,c
  4143  0000DE  0100               	movlb	0	; () banked
  4144  0000E0  23CB               	addwfc	(sprintf@width+1)& (0+255),f,b
  4145                           
  4146                           ; BSR set to: 0
  4147  0000E2  0100               	movlb	0	; () banked
  4148  0000E4  4BB0               	infsnz	sprintf@f& (0+255),f,b
  4149  0000E6  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4153  0000E8  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4154  0000EC  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4155  0000F0                     	if	0	;tblptru may be non-zero
  4156  0000F0                     	endif
  4157  0000F0                     	if	0	;tblptru may be non-zero
  4158  0000F0                     	endif
  4159  0000F0  0008               	tblrd		*
  4160  0000F2  50F5               	movf	tablat,w,c
  4161  0000F4  EC0A  F019         	call	_isdigit
  4162  0000F8  B0D8               	btfsc	status,0,c
  4163  0000FA  D7CF               	goto	l4884
  4164  0000FC                     l4892:
  4165                           
  4166                           ;doprnt.c: 608: }
  4167                           ;doprnt.c: 611: if(*f == '.') {
  4168  0000FC  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4169  000100  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4170  000104                     	if	0	;tblptru may be non-zero
  4171  000104                     	endif
  4172  000104                     	if	0	;tblptru may be non-zero
  4173  000104                     	endif
  4174  000104  0008               	tblrd		*
  4175  000106  50F5               	movf	tablat,w,c
  4176  000108  0A2E               	xorlw	46
  4177  00010A  A4D8               	btfss	status,2,c
  4178  00010C  D034               	goto	l4904
  4179                           
  4180                           ;doprnt.c: 612: flag |= 0x4000;
  4181  00010E  0100               	movlb	0	; () banked
  4182  000110  8DC9               	bsf	(sprintf@flag+1)& (0+255),6,b
  4183                           
  4184                           ;doprnt.c: 613: f++;
  4185  000112  0100               	movlb	0	; () banked
  4186  000114  4BB0               	infsnz	sprintf@f& (0+255),f,b
  4187  000116  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;doprnt.c: 620: {
  4191                           ;doprnt.c: 621: prec = 0;
  4192  000118  0E00               	movlw	0
  4193  00011A  0100               	movlb	0	; () banked
  4194  00011C  6FD1               	movwf	(sprintf@prec+1)& (0+255),b
  4195  00011E  0E00               	movlw	0
  4196  000120  6FD0               	movwf	sprintf@prec& (0+255),b
  4197                           
  4198                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4199  000122  D01E               	goto	l4902
  4200  000124                     l4898:
  4201                           
  4202                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4203  000124  C0D0  F00F         	movff	sprintf@prec,___wmul@multiplier
  4204  000128  C0D1  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  4205  00012C  0E00               	movlw	0
  4206  00012E  6E12               	movwf	___wmul@multiplicand+1,c
  4207  000130  0E0A               	movlw	10
  4208  000132  6E11               	movwf	___wmul@multiplicand,c
  4209  000134  ECB3  F018         	call	___wmul	;wreg free
  4210  000138  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4211  00013C  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4212  000140                     	if	0	;tblptru may be non-zero
  4213  000140                     	endif
  4214  000140                     	if	0	;tblptru may be non-zero
  4215  000140                     	endif
  4216  000140  0008               	tblrd		*
  4217  000142  50F5               	movf	tablat,w,c
  4218  000144  260F               	addwf	?___wmul,f,c
  4219  000146  0E00               	movlw	0
  4220  000148  2210               	addwfc	?___wmul+1,f,c
  4221  00014A  0ED0               	movlw	208
  4222  00014C  240F               	addwf	?___wmul,w,c
  4223  00014E  0100               	movlb	0	; () banked
  4224  000150  6FD0               	movwf	sprintf@prec& (0+255),b
  4225  000152  0EFF               	movlw	255
  4226  000154  2010               	addwfc	?___wmul+1,w,c
  4227  000156  0100               	movlb	0	; () banked
  4228  000158  6FD1               	movwf	(sprintf@prec+1)& (0+255),b
  4229                           
  4230                           ; BSR set to: 0
  4231  00015A  0100               	movlb	0	; () banked
  4232  00015C  4BB0               	infsnz	sprintf@f& (0+255),f,b
  4233  00015E  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  4234  000160                     l4902:
  4235                           
  4236                           ; BSR set to: 0
  4237  000160  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4238  000164  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4239  000168                     	if	0	;tblptru may be non-zero
  4240  000168                     	endif
  4241  000168                     	if	0	;tblptru may be non-zero
  4242  000168                     	endif
  4243  000168  0008               	tblrd		*
  4244  00016A  50F5               	movf	tablat,w,c
  4245  00016C  EC0A  F019         	call	_isdigit
  4246  000170  A0D8               	btfss	status,0,c
  4247  000172  D00C               	goto	l4912
  4248  000174  D7D7               	goto	l4898
  4249  000176                     l4904:
  4250                           
  4251                           ;doprnt.c: 626: prec = 0;
  4252  000176  0E00               	movlw	0
  4253  000178  0100               	movlb	0	; () banked
  4254  00017A  6FD1               	movwf	(sprintf@prec+1)& (0+255),b
  4255  00017C  0E00               	movlw	0
  4256  00017E  6FD0               	movwf	sprintf@prec& (0+255),b
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;doprnt.c: 628: flag |= 0x1000;
  4260  000180  0100               	movlb	0	; () banked
  4261  000182  89C9               	bsf	(sprintf@flag+1)& (0+255),4,b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;doprnt.c: 630: }
  4265                           ;doprnt.c: 635: switch(c = *f++) {
  4266  000184  D003               	goto	l4912
  4267  000186                     l4908:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;doprnt.c: 663: flag |= 0x400;
  4271  000186  0100               	movlb	0	; () banked
  4272  000188  85C9               	bsf	(sprintf@flag+1)& (0+255),2,b
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;doprnt.c: 698: case 'i':
  4276                           ;doprnt.c: 699: break;
  4277                           
  4278                           ; BSR set to: 0
  4279                           
  4280                           ;doprnt.c: 697: case 'd':
  4281                           
  4282                           ;doprnt.c: 664: break;
  4283  00018A  D01A               	goto	l4914
  4284  00018C                     l4912:
  4285  00018C  C0B0  FFF6         	movff	sprintf@f,tblptrl
  4286  000190  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  4287  000194  0100               	movlb	0	; () banked
  4288  000196  4BB0               	infsnz	sprintf@f& (0+255),f,b
  4289  000198  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  4290  00019A                     	if	0	;tblptru may be non-zero
  4291  00019A                     	endif
  4292  00019A                     	if	0	;tblptru may be non-zero
  4293  00019A                     	endif
  4294  00019A  0008               	tblrd		*
  4295  00019C  CFF5 F0D2          	movff	tablat,sprintf@c
  4296  0001A0  0100               	movlb	0	; () banked
  4297  0001A2  51D2               	movf	sprintf@c& (0+255),w,b
  4298                           
  4299                           ; Switch size 1, requested type "space"
  4300                           ; Number of cases is 4, Range of values is 0 to 105
  4301                           ; switch strategies available:
  4302                           ; Name         Instructions Cycles
  4303                           ; simple_byte           13     7 (average)
  4304                           ;	Chosen strategy is simple_byte
  4305  0001A4  0A00               	xorlw	0	; case 0
  4306  0001A6  B4D8               	btfsc	status,2,c
  4307  0001A8  EF21  F006         	goto	l5192
  4308  0001AC  0A64               	xorlw	100	; case 100
  4309  0001AE  B4D8               	btfsc	status,2,c
  4310  0001B0  D007               	goto	l4914
  4311  0001B2  0A02               	xorlw	2	; case 102
  4312  0001B4  B4D8               	btfsc	status,2,c
  4313  0001B6  D7E7               	goto	l4908
  4314  0001B8  0A0F               	xorlw	15	; case 105
  4315  0001BA  A4D8               	btfss	status,2,c
  4316  0001BC  EF12  F006         	goto	l5190
  4317  0001C0                     l4914:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;doprnt.c: 825: if(flag & (0x700)) {
  4321  0001C0  0E07               	movlw	7
  4322  0001C2  0100               	movlb	0	; () banked
  4323  0001C4  15C9               	andwf	(sprintf@flag+1)& (0+255),w,b
  4324  0001C6  B4D8               	btfsc	status,2,c
  4325  0001C8  D3AE               	goto	l5094
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;doprnt.c: 827: if(flag & 0x1000)
  4329  0001CA  0100               	movlb	0	; () banked
  4330  0001CC  A9C9               	btfss	(sprintf@flag+1)& (0+255),4,b
  4331  0001CE  D005               	goto	l4920
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;doprnt.c: 829: prec = 6;
  4335  0001D0  0E00               	movlw	0
  4336  0001D2  0100               	movlb	0	; () banked
  4337  0001D4  6FD1               	movwf	(sprintf@prec+1)& (0+255),b
  4338  0001D6  0E06               	movlw	6
  4339  0001D8  6FD0               	movwf	sprintf@prec& (0+255),b
  4340  0001DA                     l4920:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4344  0001DA  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  4345  0001DE  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  4346  0001E2  CFDE F0CC          	movff	postinc2,sprintf@fval
  4347  0001E6  CFDE F0CD          	movff	postinc2,sprintf@fval+1
  4348  0001EA  CFDE F0CE          	movff	postinc2,sprintf@fval+2
  4349  0001EE  CFDE F0CF          	movff	postinc2,sprintf@fval+3
  4350                           
  4351                           ; BSR set to: 0
  4352  0001F2  0E04               	movlw	4
  4353  0001F4  0100               	movlb	0	; () banked
  4354  0001F6  27BC               	addwf	sprintf@ap& (0+255),f,b
  4355  0001F8  0E00               	movlw	0
  4356  0001FA  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;doprnt.c: 831: if(fval < 0.0) {
  4360  0001FC  0100               	movlb	0	; () banked
  4361  0001FE  AFCF               	btfss	(sprintf@fval+3)& (0+255),7,b
  4362  000200  D015               	goto	l4930
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;doprnt.c: 832: fval = -fval;
  4366  000202  C0CC  F00F         	movff	sprintf@fval,___flneg@f1
  4367  000206  C0CD  F010         	movff	sprintf@fval+1,___flneg@f1+1
  4368  00020A  C0CE  F011         	movff	sprintf@fval+2,___flneg@f1+2
  4369  00020E  C0CF  F012         	movff	sprintf@fval+3,___flneg@f1+3
  4370  000212  EC85  F018         	call	___flneg	;wreg free
  4371  000216  C00F  F0CC         	movff	?___flneg,sprintf@fval
  4372  00021A  C010  F0CD         	movff	?___flneg+1,sprintf@fval+1
  4373  00021E  C011  F0CE         	movff	?___flneg+2,sprintf@fval+2
  4374  000222  C012  F0CF         	movff	?___flneg+3,sprintf@fval+3
  4375                           
  4376                           ;doprnt.c: 833: flag |= 0x03;
  4377  000226  0E03               	movlw	3
  4378  000228  0100               	movlb	0	; () banked
  4379  00022A  13C8               	iorwf	sprintf@flag& (0+255),f,b
  4380  00022C                     l4930:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;doprnt.c: 834: }
  4384                           ;doprnt.c: 835: exp = 0;
  4385  00022C  0E00               	movlw	0
  4386  00022E  0100               	movlb	0	; () banked
  4387  000230  6FC7               	movwf	(sprintf@exp+1)& (0+255),b
  4388  000232  0E00               	movlw	0
  4389  000234  6FC6               	movwf	sprintf@exp& (0+255),b
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;doprnt.c: 836: if( fval!=0) {
  4393  000236  0100               	movlb	0	; () banked
  4394  000238  51CC               	movf	sprintf@fval& (0+255),w,b
  4395  00023A  0100               	movlb	0	; () banked
  4396  00023C  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4397  00023E  0100               	movlb	0	; () banked
  4398  000240  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4399  000242  0100               	movlb	0	; () banked
  4400  000244  11CF               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4401  000246  B4D8               	btfsc	status,2,c
  4402  000248  D088               	goto	l4958
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  4406  00024A  0100               	movlb	0	; () banked
  4407  00024C  35CE               	rlcf	(sprintf@fval+2)& (0+255),w,b
  4408  00024E  35CF               	rlcf	(sprintf@fval+3)& (0+255),w,b
  4409  000250  0F82               	addlw	130
  4410  000252  0100               	movlb	0	; () banked
  4411  000254  6FC6               	movwf	sprintf@exp& (0+255),b
  4412  000256  0100               	movlb	0	; () banked
  4413  000258  6BC7               	clrf	(sprintf@exp+1)& (0+255),b
  4414  00025A  0EFF               	movlw	255
  4415  00025C  23C7               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;doprnt.c: 838: exp--;
  4419  00025E  0100               	movlb	0	; () banked
  4420  000260  07C6               	decf	sprintf@exp& (0+255),f,b
  4421  000262  A0D8               	btfss	status,0,c
  4422  000264  07C7               	decf	(sprintf@exp+1)& (0+255),f,b
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;doprnt.c: 839: exp *= 3;
  4426  000266  C0C6  F00F         	movff	sprintf@exp,___wmul@multiplier
  4427  00026A  C0C7  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  4428  00026E  0E00               	movlw	0
  4429  000270  6E12               	movwf	___wmul@multiplicand+1,c
  4430  000272  0E03               	movlw	3
  4431  000274  6E11               	movwf	___wmul@multiplicand,c
  4432  000276  ECB3  F018         	call	___wmul	;wreg free
  4433  00027A  C00F  F0C6         	movff	?___wmul,sprintf@exp
  4434  00027E  C010  F0C7         	movff	?___wmul+1,sprintf@exp+1
  4435                           
  4436                           ;doprnt.c: 840: exp /= 10;
  4437  000282  C0C6  F015         	movff	sprintf@exp,___awdiv@dividend
  4438  000286  C0C7  F016         	movff	sprintf@exp+1,___awdiv@dividend+1
  4439  00028A  0E00               	movlw	0
  4440  00028C  6E18               	movwf	___awdiv@divisor+1,c
  4441  00028E  0E0A               	movlw	10
  4442  000290  6E17               	movwf	___awdiv@divisor,c
  4443  000292  EC34  F016         	call	___awdiv	;wreg free
  4444  000296  C015  F0C6         	movff	?___awdiv,sprintf@exp
  4445  00029A  C016  F0C7         	movff	?___awdiv+1,sprintf@exp+1
  4446                           
  4447                           ;doprnt.c: 841: if(exp < 0)
  4448  00029E  0100               	movlb	0	; () banked
  4449  0002A0  AFC7               	btfss	(sprintf@exp+1)& (0+255),7,b
  4450  0002A2  D004               	goto	l4946
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;doprnt.c: 842: exp--;
  4454  0002A4  0100               	movlb	0	; () banked
  4455  0002A6  07C6               	decf	sprintf@exp& (0+255),f,b
  4456  0002A8  A0D8               	btfss	status,0,c
  4457  0002AA  07C7               	decf	(sprintf@exp+1)& (0+255),f,b
  4458  0002AC                     l4946:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4462  0002AC  0100               	movlb	0	; () banked
  4463  0002AE  51C6               	movf	sprintf@exp& (0+255),w,b
  4464  0002B0  0800               	sublw	0
  4465  0002B2  ECCF  F009         	call	_scale
  4466  0002B6  C036  F0BE         	movff	?_scale,sprintf@tmpval
  4467  0002BA  C037  F0BF         	movff	?_scale+1,sprintf@tmpval+1
  4468  0002BE  C038  F0C0         	movff	?_scale+2,sprintf@tmpval+2
  4469  0002C2  C039  F0C1         	movff	?_scale+3,sprintf@tmpval+3
  4470                           
  4471                           ;doprnt.c: 847: tmpval.integ *= fval;
  4472  0002C6  C0BE  F01D         	movff	sprintf@tmpval,___flmul@b
  4473  0002CA  C0BF  F01E         	movff	sprintf@tmpval+1,___flmul@b+1
  4474  0002CE  C0C0  F01F         	movff	sprintf@tmpval+2,___flmul@b+2
  4475  0002D2  C0C1  F020         	movff	sprintf@tmpval+3,___flmul@b+3
  4476  0002D6  C0CC  F021         	movff	sprintf@fval,___flmul@a
  4477  0002DA  C0CD  F022         	movff	sprintf@fval+1,___flmul@a+1
  4478  0002DE  C0CE  F023         	movff	sprintf@fval+2,___flmul@a+2
  4479  0002E2  C0CF  F024         	movff	sprintf@fval+3,___flmul@a+3
  4480  0002E6  ECDB  F00B         	call	___flmul	;wreg free
  4481  0002EA  C01D  F0BE         	movff	?___flmul,sprintf@tmpval
  4482  0002EE  C01E  F0BF         	movff	?___flmul+1,sprintf@tmpval+1
  4483  0002F2  C01F  F0C0         	movff	?___flmul+2,sprintf@tmpval+2
  4484  0002F6  C020  F0C1         	movff	?___flmul+3,sprintf@tmpval+3
  4485                           
  4486                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4487  0002FA  C0BE  F057         	movff	sprintf@tmpval,___flge@ff1
  4488  0002FE  C0BF  F058         	movff	sprintf@tmpval+1,___flge@ff1+1
  4489  000302  C0C0  F059         	movff	sprintf@tmpval+2,___flge@ff1+2
  4490  000306  C0C1  F05A         	movff	sprintf@tmpval+3,___flge@ff1+3
  4491  00030A  0E00               	movlw	0
  4492  00030C  6E5B               	movwf	___flge@ff2,c
  4493  00030E  0E00               	movlw	0
  4494  000310  6E5C               	movwf	___flge@ff2+1,c
  4495  000312  0E80               	movlw	128
  4496  000314  6E5D               	movwf	___flge@ff2+2,c
  4497  000316  0E3F               	movlw	63
  4498  000318  6E5E               	movwf	___flge@ff2+3,c
  4499  00031A  ECF3  F014         	call	___flge	;wreg free
  4500  00031E  B0D8               	btfsc	status,0,c
  4501  000320  D005               	goto	l4954
  4502                           
  4503                           ;doprnt.c: 849: exp--;
  4504  000322  0100               	movlb	0	; () banked
  4505  000324  07C6               	decf	sprintf@exp& (0+255),f,b
  4506  000326  A0D8               	btfss	status,0,c
  4507  000328  07C7               	decf	(sprintf@exp+1)& (0+255),f,b
  4508  00032A  D017               	goto	l4958
  4509  00032C                     l4954:
  4510                           
  4511                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4512  00032C  C0BE  F057         	movff	sprintf@tmpval,___flge@ff1
  4513  000330  C0BF  F058         	movff	sprintf@tmpval+1,___flge@ff1+1
  4514  000334  C0C0  F059         	movff	sprintf@tmpval+2,___flge@ff1+2
  4515  000338  C0C1  F05A         	movff	sprintf@tmpval+3,___flge@ff1+3
  4516  00033C  0E00               	movlw	0
  4517  00033E  6E5B               	movwf	___flge@ff2,c
  4518  000340  0E00               	movlw	0
  4519  000342  6E5C               	movwf	___flge@ff2+1,c
  4520  000344  0E20               	movlw	32
  4521  000346  6E5D               	movwf	___flge@ff2+2,c
  4522  000348  0E41               	movlw	65
  4523  00034A  6E5E               	movwf	___flge@ff2+3,c
  4524  00034C  ECF3  F014         	call	___flge	;wreg free
  4525  000350  A0D8               	btfss	status,0,c
  4526  000352  D003               	goto	l4958
  4527                           
  4528                           ;doprnt.c: 851: exp++;
  4529  000354  0100               	movlb	0	; () banked
  4530  000356  4BC6               	infsnz	sprintf@exp& (0+255),f,b
  4531  000358  2BC7               	incf	(sprintf@exp+1)& (0+255),f,b
  4532  00035A                     l4958:
  4533                           
  4534                           ;doprnt.c: 852: }
  4535                           ;doprnt.c: 1112: if(prec <= 12)
  4536  00035A  0100               	movlb	0	; () banked
  4537  00035C  BFD1               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4538  00035E  D008               	goto	l4960
  4539  000360  0100               	movlb	0	; () banked
  4540  000362  51D1               	movf	(sprintf@prec+1)& (0+255),w,b
  4541  000364  E123               	bnz	l4962
  4542  000366  0E0D               	movlw	13
  4543  000368  0100               	movlb	0	; () banked
  4544  00036A  5DD0               	subwf	sprintf@prec& (0+255),w,b
  4545  00036C  B0D8               	btfsc	status,0,c
  4546  00036E  D01E               	goto	l4962
  4547  000370                     l4960:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;doprnt.c: 1113: fval += fround(prec);
  4551  000370  C0CC  F043         	movff	sprintf@fval,___fladd@b
  4552  000374  C0CD  F044         	movff	sprintf@fval+1,___fladd@b+1
  4553  000378  C0CE  F045         	movff	sprintf@fval+2,___fladd@b+2
  4554  00037C  C0CF  F046         	movff	sprintf@fval+3,___fladd@b+3
  4555  000380  0100               	movlb	0	; () banked
  4556  000382  51D0               	movf	sprintf@prec& (0+255),w,b
  4557  000384  ECE1  F011         	call	_fround
  4558  000388  C036  F047         	movff	?_fround,___fladd@a
  4559  00038C  C037  F048         	movff	?_fround+1,___fladd@a+1
  4560  000390  C038  F049         	movff	?_fround+2,___fladd@a+2
  4561  000394  C039  F04A         	movff	?_fround+3,___fladd@a+3
  4562  000398  EC83  F00D         	call	___fladd	;wreg free
  4563  00039C  C043  F0CC         	movff	?___fladd,sprintf@fval
  4564  0003A0  C044  F0CD         	movff	?___fladd+1,sprintf@fval+1
  4565  0003A4  C045  F0CE         	movff	?___fladd+2,sprintf@fval+2
  4566  0003A8  C046  F0CF         	movff	?___fladd+3,sprintf@fval+3
  4567  0003AC                     l4962:
  4568                           
  4569                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4570  0003AC  0100               	movlb	0	; () banked
  4571  0003AE  BFC7               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4572  0003B0  D008               	goto	l4964
  4573  0003B2  0100               	movlb	0	; () banked
  4574  0003B4  51C7               	movf	(sprintf@exp+1)& (0+255),w,b
  4575  0003B6  E12A               	bnz	l4970
  4576  0003B8  0E0A               	movlw	10
  4577  0003BA  0100               	movlb	0	; () banked
  4578  0003BC  5DC6               	subwf	sprintf@exp& (0+255),w,b
  4579  0003BE  B0D8               	btfsc	status,0,c
  4580  0003C0  D025               	goto	l4970
  4581  0003C2                     l4964:
  4582                           
  4583                           ; BSR set to: 0
  4584  0003C2  0100               	movlb	0	; () banked
  4585  0003C4  51CC               	movf	sprintf@fval& (0+255),w,b
  4586  0003C6  0100               	movlb	0	; () banked
  4587  0003C8  11CD               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4588  0003CA  0100               	movlb	0	; () banked
  4589  0003CC  11CE               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4590  0003CE  0100               	movlb	0	; () banked
  4591  0003D0  11CF               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4592  0003D2  B4D8               	btfsc	status,2,c
  4593  0003D4  D067               	goto	l4984
  4594                           
  4595                           ; BSR set to: 0
  4596  0003D6  C0CC  F03F         	movff	sprintf@fval,___fltol@f1
  4597  0003DA  C0CD  F040         	movff	sprintf@fval+1,___fltol@f1+1
  4598  0003DE  C0CE  F041         	movff	sprintf@fval+2,___fltol@f1+2
  4599  0003E2  C0CF  F042         	movff	sprintf@fval+3,___fltol@f1+3
  4600  0003E6  EC83  F015         	call	___fltol	;wreg free
  4601  0003EA  503F               	movf	?___fltol,w,c
  4602  0003EC  1040               	iorwf	?___fltol+1,w,c
  4603  0003EE  1041               	iorwf	?___fltol+2,w,c
  4604  0003F0  1042               	iorwf	?___fltol+3,w,c
  4605  0003F2  A4D8               	btfss	status,2,c
  4606  0003F4  D057               	goto	l4984
  4607  0003F6  0100               	movlb	0	; () banked
  4608  0003F8  BFC7               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4609  0003FA  D054               	goto	l4984
  4610  0003FC  0100               	movlb	0	; () banked
  4611  0003FE  51C7               	movf	(sprintf@exp+1)& (0+255),w,b
  4612  000400  E105               	bnz	l4970
  4613  000402  0E02               	movlw	2
  4614  000404  0100               	movlb	0	; () banked
  4615  000406  5DC6               	subwf	sprintf@exp& (0+255),w,b
  4616  000408  A0D8               	btfss	status,0,c
  4617  00040A  D04C               	goto	l4984
  4618  00040C                     l4970:
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  4622  00040C  C0BE  F057         	movff	sprintf@tmpval,___flge@ff1
  4623  000410  C0BF  F058         	movff	sprintf@tmpval+1,___flge@ff1+1
  4624  000414  C0C0  F059         	movff	sprintf@tmpval+2,___flge@ff1+2
  4625  000418  C0C1  F05A         	movff	sprintf@tmpval+3,___flge@ff1+3
  4626  00041C  0E5F               	movlw	95
  4627  00041E  6E5B               	movwf	___flge@ff2,c
  4628  000420  0E70               	movlw	112
  4629  000422  6E5C               	movwf	___flge@ff2+1,c
  4630  000424  0E89               	movlw	137
  4631  000426  6E5D               	movwf	___flge@ff2+2,c
  4632  000428  0E40               	movlw	64
  4633  00042A  6E5E               	movwf	___flge@ff2+3,c
  4634  00042C  ECF3  F014         	call	___flge	;wreg free
  4635  000430  B0D8               	btfsc	status,0,c
  4636  000432  D003               	goto	l4974
  4637                           
  4638                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4639  000434  0100               	movlb	0	; () banked
  4640  000436  0EF7               	movlw	247
  4641  000438  D002               	goto	L5
  4642  00043A                     l4974:
  4643                           
  4644                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4645  00043A  0100               	movlb	0	; () banked
  4646  00043C  0EF8               	movlw	248
  4647  00043E                     L5:
  4648  00043E  27C6               	addwf	sprintf@exp& (0+255),f,b
  4649  000440  0EFF               	movlw	255
  4650  000442  23C7               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4654                           
  4655                           ; BSR set to: 0
  4656  000444  0100               	movlb	0	; () banked
  4657  000446  51C6               	movf	sprintf@exp& (0+255),w,b
  4658  000448  ECCF  F009         	call	_scale
  4659  00044C  C036  F0BE         	movff	?_scale,sprintf@tmpval
  4660  000450  C037  F0BF         	movff	?_scale+1,sprintf@tmpval+1
  4661  000454  C038  F0C0         	movff	?_scale+2,sprintf@tmpval+2
  4662  000458  C039  F0C1         	movff	?_scale+3,sprintf@tmpval+3
  4663  00045C  C0CC  F00F         	movff	sprintf@fval,__div_to_l_@f1
  4664  000460  C0CD  F010         	movff	sprintf@fval+1,__div_to_l_@f1+1
  4665  000464  C0CE  F011         	movff	sprintf@fval+2,__div_to_l_@f1+2
  4666  000468  C0CF  F012         	movff	sprintf@fval+3,__div_to_l_@f1+3
  4667  00046C  C0BE  F013         	movff	sprintf@tmpval,__div_to_l_@f2
  4668  000470  C0BF  F014         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  4669  000474  C0C0  F015         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  4670  000478  C0C1  F016         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  4671  00047C  EC5F  F014         	call	__div_to_l_	;wreg free
  4672  000480  C00F  F0C2         	movff	?__div_to_l_,sprintf@val
  4673  000484  C010  F0C3         	movff	?__div_to_l_+1,sprintf@val+1
  4674  000488  C011  F0C4         	movff	?__div_to_l_+2,sprintf@val+2
  4675  00048C  C012  F0C5         	movff	?__div_to_l_+3,sprintf@val+3
  4676                           
  4677                           ;doprnt.c: 1129: fval = 0.0;
  4678  000490  0E00               	movlw	0
  4679  000492  0100               	movlb	0	; () banked
  4680  000494  6FCC               	movwf	sprintf@fval& (0+255),b
  4681  000496  0E00               	movlw	0
  4682  000498  6FCD               	movwf	(sprintf@fval+1)& (0+255),b
  4683  00049A  0E00               	movlw	0
  4684  00049C  6FCE               	movwf	(sprintf@fval+2)& (0+255),b
  4685  00049E  0E00               	movlw	0
  4686  0004A0  6FCF               	movwf	(sprintf@fval+3)& (0+255),b
  4687                           
  4688                           ;doprnt.c: 1130: } else {
  4689  0004A2  D03C               	goto	l4988
  4690  0004A4                     l4984:
  4691                           
  4692                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4693  0004A4  C0CC  F03F         	movff	sprintf@fval,___fltol@f1
  4694  0004A8  C0CD  F040         	movff	sprintf@fval+1,___fltol@f1+1
  4695  0004AC  C0CE  F041         	movff	sprintf@fval+2,___fltol@f1+2
  4696  0004B0  C0CF  F042         	movff	sprintf@fval+3,___fltol@f1+3
  4697  0004B4  EC83  F015         	call	___fltol	;wreg free
  4698  0004B8  C03F  F0C2         	movff	?___fltol,sprintf@val
  4699  0004BC  C040  F0C3         	movff	?___fltol+1,sprintf@val+1
  4700  0004C0  C041  F0C4         	movff	?___fltol+2,sprintf@val+2
  4701  0004C4  C042  F0C5         	movff	?___fltol+3,sprintf@val+3
  4702                           
  4703                           ;doprnt.c: 1132: fval -= (double)val;
  4704  0004C8  C0CC  F057         	movff	sprintf@fval,___flsub@b
  4705  0004CC  C0CD  F058         	movff	sprintf@fval+1,___flsub@b+1
  4706  0004D0  C0CE  F059         	movff	sprintf@fval+2,___flsub@b+2
  4707  0004D4  C0CF  F05A         	movff	sprintf@fval+3,___flsub@b+3
  4708  0004D8  C0C2  F015         	movff	sprintf@val,___xxtofl@val
  4709  0004DC  C0C3  F016         	movff	sprintf@val+1,___xxtofl@val+1
  4710  0004E0  C0C4  F017         	movff	sprintf@val+2,___xxtofl@val+2
  4711  0004E4  C0C5  F018         	movff	sprintf@val+3,___xxtofl@val+3
  4712  0004E8  0E00               	movlw	0
  4713  0004EA  EC1E  F013         	call	___xxtofl
  4714  0004EE  C015  F05B         	movff	?___xxtofl,___flsub@a
  4715  0004F2  C016  F05C         	movff	?___xxtofl+1,___flsub@a+1
  4716  0004F6  C017  F05D         	movff	?___xxtofl+2,___flsub@a+2
  4717  0004FA  C018  F05E         	movff	?___xxtofl+3,___flsub@a+3
  4718  0004FE  ECEE  F017         	call	___flsub	;wreg free
  4719  000502  C057  F0CC         	movff	?___flsub,sprintf@fval
  4720  000506  C058  F0CD         	movff	?___flsub+1,sprintf@fval+1
  4721  00050A  C059  F0CE         	movff	?___flsub+2,sprintf@fval+2
  4722  00050E  C05A  F0CF         	movff	?___flsub+3,sprintf@fval+3
  4723                           
  4724                           ;doprnt.c: 1133: exp = 0;
  4725  000512  0E00               	movlw	0
  4726  000514  0100               	movlb	0	; () banked
  4727  000516  6FC7               	movwf	(sprintf@exp+1)& (0+255),b
  4728  000518  0E00               	movlw	0
  4729  00051A  6FC6               	movwf	sprintf@exp& (0+255),b
  4730  00051C                     l4988:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;doprnt.c: 1134: }
  4734                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4735  00051C  0E01               	movlw	1
  4736  00051E  0100               	movlb	0	; () banked
  4737  000520  6FD2               	movwf	sprintf@c& (0+255),b
  4738  000522                     l4990:
  4739                           
  4740                           ; BSR set to: 0
  4741  000522  0E0A               	movlw	10
  4742  000524  0100               	movlb	0	; () banked
  4743  000526  19D2               	xorwf	sprintf@c& (0+255),w,b
  4744  000528  B4D8               	btfsc	status,2,c
  4745  00052A  D01E               	goto	l5002
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;doprnt.c: 1137: if(val < dpowers[c])
  4749                           
  4750                           ; BSR set to: 0
  4751                           
  4752                           ; BSR set to: 0
  4753  00052C  0100               	movlb	0	; () banked
  4754  00052E  51D2               	movf	sprintf@c& (0+255),w,b
  4755  000530  0D04               	mullw	4
  4756  000532  0E5B               	movlw	low _dpowers
  4757  000534  24F3               	addwf	prodl,w,c
  4758  000536  6EF6               	movwf	tblptrl,c
  4759  000538  0EFF               	movlw	high _dpowers
  4760  00053A  20F4               	addwfc	prodh,w,c
  4761  00053C  6EF7               	movwf	tblptrh,c
  4762  00053E                     	if	0	;There are less than 3 active tblptr bytes
  4763  00053E                     	endif
  4764  00053E  0009               	tblrd		*+
  4765  000540  50F5               	movf	tablat,w,c
  4766  000542  0100               	movlb	0	; () banked
  4767  000544  5DC2               	subwf	sprintf@val& (0+255),w,b
  4768  000546  0009               	tblrd		*+
  4769  000548  50F5               	movf	tablat,w,c
  4770  00054A  0100               	movlb	0	; () banked
  4771  00054C  59C3               	subwfb	(sprintf@val+1)& (0+255),w,b
  4772  00054E  0009               	tblrd		*+
  4773  000550  50F5               	movf	tablat,w,c
  4774  000552  0100               	movlb	0	; () banked
  4775  000554  59C4               	subwfb	(sprintf@val+2)& (0+255),w,b
  4776  000556  0009               	tblrd		*+
  4777  000558  50F5               	movf	tablat,w,c
  4778  00055A  0100               	movlb	0	; () banked
  4779  00055C  59C5               	subwfb	(sprintf@val+3)& (0+255),w,b
  4780  00055E  A0D8               	btfss	status,0,c
  4781  000560  D003               	goto	l5002
  4782                           
  4783                           ; BSR set to: 0
  4784                           
  4785                           ; BSR set to: 0
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;doprnt.c: 1138: break;
  4789  000562  0100               	movlb	0	; () banked
  4790  000564  2BD2               	incf	sprintf@c& (0+255),f,b
  4791  000566  D7DD               	goto	l4990
  4792  000568                     l5002:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;doprnt.c: 1142: width -= prec + c + exp;
  4796  000568  C0D2  F063         	movff	sprintf@c,??_sprintf
  4797  00056C  6A64               	clrf	(??_sprintf+1)& (0+255),c
  4798  00056E  BE63               	btfsc	??_sprintf& (0+255),7,c
  4799  000570  0664               	decf	(??_sprintf+1)& (0+255),f,c
  4800  000572  0100               	movlb	0	; () banked
  4801  000574  51D0               	movf	sprintf@prec& (0+255),w,b
  4802  000576  2663               	addwf	??_sprintf,f,c
  4803  000578  0100               	movlb	0	; () banked
  4804  00057A  51D1               	movf	(sprintf@prec+1)& (0+255),w,b
  4805  00057C  2264               	addwfc	??_sprintf+1,f,c
  4806  00057E  0100               	movlb	0	; () banked
  4807  000580  51C6               	movf	sprintf@exp& (0+255),w,b
  4808  000582  2663               	addwf	??_sprintf,f,c
  4809  000584  0100               	movlb	0	; () banked
  4810  000586  51C7               	movf	(sprintf@exp+1)& (0+255),w,b
  4811  000588  2264               	addwfc	??_sprintf+1,f,c
  4812  00058A  5063               	movf	??_sprintf,w,c
  4813  00058C  0100               	movlb	0	; () banked
  4814  00058E  5FCA               	subwf	sprintf@width& (0+255),f,b
  4815  000590  5064               	movf	??_sprintf+1,w,c
  4816  000592  0100               	movlb	0	; () banked
  4817  000594  5BCB               	subwfb	(sprintf@width+1)& (0+255),f,b
  4818                           
  4819                           ;doprnt.c: 1143: if(
  4820                           ;doprnt.c: 1147: prec)
  4821  000596  0100               	movlb	0	; () banked
  4822  000598  51D0               	movf	sprintf@prec& (0+255),w,b
  4823  00059A  0100               	movlb	0	; () banked
  4824  00059C  11D1               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4825  00059E  B4D8               	btfsc	status,2,c
  4826  0005A0  D004               	goto	l5006
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;doprnt.c: 1148: width--;
  4830  0005A2  0100               	movlb	0	; () banked
  4831  0005A4  07CA               	decf	sprintf@width& (0+255),f,b
  4832  0005A6  A0D8               	btfss	status,0,c
  4833  0005A8  07CB               	decf	(sprintf@width+1)& (0+255),f,b
  4834  0005AA                     l5006:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;doprnt.c: 1149: if(flag & 0x03)
  4838  0005AA  0E03               	movlw	3
  4839  0005AC  0100               	movlb	0	; () banked
  4840  0005AE  15C8               	andwf	sprintf@flag& (0+255),w,b
  4841  0005B0  6E63               	movwf	??_sprintf& (0+255),c
  4842  0005B2  0E00               	movlw	0
  4843  0005B4  0100               	movlb	0	; () banked
  4844  0005B6  15C9               	andwf	(sprintf@flag+1)& (0+255),w,b
  4845  0005B8  6E64               	movwf	(??_sprintf+1)& (0+255),c
  4846  0005BA  5063               	movf	??_sprintf,w,c
  4847  0005BC  1064               	iorwf	??_sprintf+1,w,c
  4848  0005BE  B4D8               	btfsc	status,2,c
  4849  0005C0  D004               	goto	l5010
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;doprnt.c: 1150: width--;
  4853  0005C2  0100               	movlb	0	; () banked
  4854  0005C4  07CA               	decf	sprintf@width& (0+255),f,b
  4855  0005C6  A0D8               	btfss	status,0,c
  4856  0005C8  07CB               	decf	(sprintf@width+1)& (0+255),f,b
  4857  0005CA                     l5010:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;doprnt.c: 1153: if(flag & 0x04) {
  4861  0005CA  0100               	movlb	0	; () banked
  4862  0005CC  A5C8               	btfss	sprintf@flag& (0+255),2,b
  4863  0005CE  D03B               	goto	l5032
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;doprnt.c: 1157: if(flag & 0x03)
  4867  0005D0  0E03               	movlw	3
  4868  0005D2  0100               	movlb	0	; () banked
  4869  0005D4  15C8               	andwf	sprintf@flag& (0+255),w,b
  4870  0005D6  6E63               	movwf	??_sprintf& (0+255),c
  4871  0005D8  0E00               	movlw	0
  4872  0005DA  0100               	movlb	0	; () banked
  4873  0005DC  15C9               	andwf	(sprintf@flag+1)& (0+255),w,b
  4874  0005DE  6E64               	movwf	(??_sprintf+1)& (0+255),c
  4875  0005E0  5063               	movf	??_sprintf,w,c
  4876  0005E2  1064               	iorwf	??_sprintf+1,w,c
  4877  0005E4  B4D8               	btfsc	status,2,c
  4878  0005E6  D017               	goto	l5024
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  4882  0005E8  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  4883  0005EC  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  4884  0005F0  0E2D               	movlw	45
  4885  0005F2  6EDF               	movwf	indf2,c
  4886                           
  4887                           ; BSR set to: 0
  4888  0005F4  0100               	movlb	0	; () banked
  4889  0005F6  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  4890  0005F8  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;doprnt.c: 1168: while(width > 0) {
  4894  0005FA  D00D               	goto	l5024
  4895  0005FC                     l5018:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  4899  0005FC  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  4900  000600  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  4901  000604  0E30               	movlw	48
  4902  000606  6EDF               	movwf	indf2,c
  4903                           
  4904                           ; BSR set to: 0
  4905  000608  0100               	movlb	0	; () banked
  4906  00060A  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  4907  00060C  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;doprnt.c: 1170: width--;
  4911  00060E  0100               	movlb	0	; () banked
  4912  000610  07CA               	decf	sprintf@width& (0+255),f,b
  4913  000612  A0D8               	btfss	status,0,c
  4914  000614  07CB               	decf	(sprintf@width+1)& (0+255),f,b
  4915  000616                     l5024:
  4916                           
  4917                           ; BSR set to: 0
  4918  000616  0100               	movlb	0	; () banked
  4919  000618  BFCB               	btfsc	(sprintf@width+1)& (0+255),7,b
  4920  00061A  D07F               	goto	l5048
  4921  00061C  0100               	movlb	0	; () banked
  4922  00061E  51CB               	movf	(sprintf@width+1)& (0+255),w,b
  4923  000620  E1ED               	bnz	l5018
  4924  000622  0100               	movlb	0	; () banked
  4925  000624  05CA               	decf	sprintf@width& (0+255),w,b
  4926  000626  A0D8               	btfss	status,0,c
  4927  000628  D078               	goto	l5048
  4928  00062A  D7E8               	goto	l5018
  4929  00062C                     l5026:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  4933  00062C  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  4934  000630  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  4935  000634  0E20               	movlw	32
  4936  000636  6EDF               	movwf	indf2,c
  4937                           
  4938                           ; BSR set to: 0
  4939  000638  0100               	movlb	0	; () banked
  4940  00063A  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  4941  00063C  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;doprnt.c: 1182: width--;
  4945  00063E  0100               	movlb	0	; () banked
  4946  000640  07CA               	decf	sprintf@width& (0+255),f,b
  4947  000642  A0D8               	btfss	status,0,c
  4948  000644  07CB               	decf	(sprintf@width+1)& (0+255),f,b
  4949  000646                     l5032:
  4950                           
  4951                           ; BSR set to: 0
  4952  000646  0100               	movlb	0	; () banked
  4953  000648  BFCB               	btfsc	(sprintf@width+1)& (0+255),7,b
  4954  00064A  D007               	goto	l5034
  4955  00064C  0100               	movlb	0	; () banked
  4956  00064E  51CB               	movf	(sprintf@width+1)& (0+255),w,b
  4957  000650  E1ED               	bnz	l5026
  4958  000652  0100               	movlb	0	; () banked
  4959  000654  05CA               	decf	sprintf@width& (0+255),w,b
  4960  000656  B0D8               	btfsc	status,0,c
  4961  000658  D7E9               	goto	l5026
  4962  00065A                     l5034:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;doprnt.c: 1183: }
  4966                           ;doprnt.c: 1188: if(flag & 0x03)
  4967  00065A  0E03               	movlw	3
  4968  00065C  0100               	movlb	0	; () banked
  4969  00065E  15C8               	andwf	sprintf@flag& (0+255),w,b
  4970  000660  6E63               	movwf	??_sprintf& (0+255),c
  4971  000662  0E00               	movlw	0
  4972  000664  0100               	movlb	0	; () banked
  4973  000666  15C9               	andwf	(sprintf@flag+1)& (0+255),w,b
  4974  000668  6E64               	movwf	(??_sprintf+1)& (0+255),c
  4975  00066A  5063               	movf	??_sprintf,w,c
  4976  00066C  1064               	iorwf	??_sprintf+1,w,c
  4977  00066E  B4D8               	btfsc	status,2,c
  4978  000670  D054               	goto	l5048
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4982  000672  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  4983  000676  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  4984  00067A  0E2D               	movlw	45
  4985  00067C  D04C               	goto	L6
  4986  00067E                     l5038:
  4987                           
  4988                           ; BSR set to: 0
  4989  00067E  0100               	movlb	0	; () banked
  4990  000680  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  4991  000682  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;doprnt.c: 1195: }
  4995                           ;doprnt.c: 1196: while(c--) {
  4996                           
  4997                           ; BSR set to: 0
  4998  000684  D04A               	goto	l5048
  4999  000686                     l5040:
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;doprnt.c: 1200: {
  5003                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5004  000686  C0C2  F00F         	movff	sprintf@val,___lldiv@dividend
  5005  00068A  C0C3  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  5006  00068E  C0C4  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  5007  000692  C0C5  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  5008  000696  0100               	movlb	0	; () banked
  5009  000698  51D2               	movf	sprintf@c& (0+255),w,b
  5010  00069A  0D04               	mullw	4
  5011  00069C  0E5B               	movlw	low _dpowers
  5012  00069E  24F3               	addwf	prodl,w,c
  5013  0006A0  6EF6               	movwf	tblptrl,c
  5014  0006A2  0EFF               	movlw	high _dpowers
  5015  0006A4  20F4               	addwfc	prodh,w,c
  5016  0006A6  6EF7               	movwf	tblptrh,c
  5017  0006A8                     	if	0	;There are less than 3 active tblptr bytes
  5018  0006A8                     	endif
  5019  0006A8  0009               	tblrd		*+
  5020  0006AA  CFF5 F013          	movff	tablat,___lldiv@divisor
  5021  0006AE  0009               	tblrd		*+
  5022  0006B0  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  5023  0006B4  0009               	tblrd		*+
  5024  0006B6  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  5025  0006BA  000A               	tblrd		*-
  5026  0006BC  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  5027  0006C0  ECB7  F016         	call	___lldiv	;wreg free
  5028  0006C4  C00F  F0BE         	movff	?___lldiv,sprintf@tmpval
  5029  0006C8  C010  F0BF         	movff	?___lldiv+1,sprintf@tmpval+1
  5030  0006CC  C011  F0C0         	movff	?___lldiv+2,sprintf@tmpval+2
  5031  0006D0  C012  F0C1         	movff	?___lldiv+3,sprintf@tmpval+3
  5032                           
  5033                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5034  0006D4  C0BE  F01C         	movff	sprintf@tmpval,___llmod@dividend
  5035  0006D8  C0BF  F01D         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5036  0006DC  C0C0  F01E         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5037  0006E0  C0C1  F01F         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5038  0006E4  0E0A               	movlw	10
  5039  0006E6  6E20               	movwf	___llmod@divisor,c
  5040  0006E8  0E00               	movlw	0
  5041  0006EA  6E21               	movwf	___llmod@divisor+1,c
  5042  0006EC  0E00               	movlw	0
  5043  0006EE  6E22               	movwf	___llmod@divisor+2,c
  5044  0006F0  0E00               	movlw	0
  5045  0006F2  6E23               	movwf	___llmod@divisor+3,c
  5046  0006F4  EC65  F017         	call	___llmod	;wreg free
  5047  0006F8  C01C  F0BE         	movff	?___llmod,sprintf@tmpval
  5048  0006FC  C01D  F0BF         	movff	?___llmod+1,sprintf@tmpval+1
  5049  000700  C01E  F0C0         	movff	?___llmod+2,sprintf@tmpval+2
  5050  000704  C01F  F0C1         	movff	?___llmod+3,sprintf@tmpval+3
  5051                           
  5052                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  5053  000708  0100               	movlb	0	; () banked
  5054  00070A  51BE               	movf	sprintf@tmpval& (0+255),w,b
  5055  00070C  0F30               	addlw	48
  5056  00070E  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5057  000712  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5058  000716                     L6:
  5059  000716  6EDF               	movwf	indf2,c
  5060  000718  D7B2               	goto	l5038
  5061  00071A                     l5048:
  5062                           
  5063                           ; BSR set to: 0
  5064  00071A  0100               	movlb	0	; () banked
  5065  00071C  07D2               	decf	sprintf@c& (0+255),f,b
  5066  00071E  0100               	movlb	0	; () banked
  5067  000720  29D2               	incf	sprintf@c& (0+255),w,b
  5068  000722  B4D8               	btfsc	status,2,c
  5069  000724  D00E               	goto	l5056
  5070  000726  D7AF               	goto	l5040
  5071  000728                     l5050:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  5075  000728  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5076  00072C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5077  000730  0E30               	movlw	48
  5078  000732  6EDF               	movwf	indf2,c
  5079                           
  5080                           ; BSR set to: 0
  5081  000734  0100               	movlb	0	; () banked
  5082  000736  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5083  000738  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;doprnt.c: 1209: exp--;
  5087  00073A  0100               	movlb	0	; () banked
  5088  00073C  07C6               	decf	sprintf@exp& (0+255),f,b
  5089  00073E  A0D8               	btfss	status,0,c
  5090  000740  07C7               	decf	(sprintf@exp+1)& (0+255),f,b
  5091  000742                     l5056:
  5092                           
  5093                           ; BSR set to: 0
  5094  000742  0100               	movlb	0	; () banked
  5095  000744  BFC7               	btfsc	(sprintf@exp+1)& (0+255),7,b
  5096  000746  D007               	goto	l5058
  5097  000748  0100               	movlb	0	; () banked
  5098  00074A  51C7               	movf	(sprintf@exp+1)& (0+255),w,b
  5099  00074C  E1ED               	bnz	l5050
  5100  00074E  0100               	movlb	0	; () banked
  5101  000750  05C6               	decf	sprintf@exp& (0+255),w,b
  5102  000752  B0D8               	btfsc	status,0,c
  5103  000754  D7E9               	goto	l5050
  5104  000756                     l5058:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;doprnt.c: 1210: }
  5108                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5109  000756  0100               	movlb	0	; () banked
  5110  000758  BFD1               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5111  00075A  D00C               	goto	l460
  5112  00075C  0100               	movlb	0	; () banked
  5113  00075E  51D1               	movf	(sprintf@prec+1)& (0+255),w,b
  5114  000760  E105               	bnz	u6000
  5115  000762  0E09               	movlw	9
  5116  000764  0100               	movlb	0	; () banked
  5117  000766  5DD0               	subwf	sprintf@prec& (0+255),w,b
  5118  000768  A0D8               	btfss	status,0,c
  5119  00076A  D004               	goto	l460
  5120  00076C                     u6000:
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5124  00076C  0E08               	movlw	8
  5125  00076E  0100               	movlb	0	; () banked
  5126  000770  6FD2               	movwf	sprintf@c& (0+255),b
  5127  000772  D002               	goto	l5062
  5128  000774                     l460:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;doprnt.c: 1213: else
  5132                           ;doprnt.c: 1214: c = prec;
  5133  000774  C0D0  F0D2         	movff	sprintf@prec,sprintf@c
  5134  000778                     l5062:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;doprnt.c: 1215: prec -= c;
  5138  000778  0100               	movlb	0	; () banked
  5139  00077A  51D2               	movf	sprintf@c& (0+255),w,b
  5140  00077C  0100               	movlb	0	; () banked
  5141  00077E  5FD0               	subwf	sprintf@prec& (0+255),f,b
  5142  000780  0E00               	movlw	0
  5143  000782  0100               	movlb	0	; () banked
  5144  000784  BFD2               	btfsc	sprintf@c& (0+255),7,b
  5145  000786  0EFF               	movlw	255
  5146  000788  0100               	movlb	0	; () banked
  5147  00078A  5BD1               	subwfb	(sprintf@prec+1)& (0+255),f,b
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;doprnt.c: 1219: if(c)
  5151  00078C  0100               	movlb	0	; () banked
  5152  00078E  51D2               	movf	sprintf@c& (0+255),w,b
  5153  000790  0100               	movlb	0	; () banked
  5154  000792  B4D8               	btfsc	status,2,c
  5155  000794  D009               	goto	l5070
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  5159  000796  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5160  00079A  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5161  00079E  0E2E               	movlw	46
  5162  0007A0  6EDF               	movwf	indf2,c
  5163                           
  5164                           ; BSR set to: 0
  5165  0007A2  0100               	movlb	0	; () banked
  5166  0007A4  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5167  0007A6  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5168  0007A8                     l5070:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5172  0007A8  0100               	movlb	0	; () banked
  5173  0007AA  51D2               	movf	sprintf@c& (0+255),w,b
  5174  0007AC  ECCF  F009         	call	_scale
  5175  0007B0  C036  F0B8         	movff	?_scale,_sprintf$1688
  5176  0007B4  C037  F0B9         	movff	?_scale+1,_sprintf$1688+1
  5177  0007B8  C038  F0BA         	movff	?_scale+2,_sprintf$1688+2
  5178  0007BC  C039  F0BB         	movff	?_scale+3,_sprintf$1688+3
  5179                           
  5180                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5181  0007C0  C0CC  F021         	movff	sprintf@fval,___flmul@a
  5182  0007C4  C0CD  F022         	movff	sprintf@fval+1,___flmul@a+1
  5183  0007C8  C0CE  F023         	movff	sprintf@fval+2,___flmul@a+2
  5184  0007CC  C0CF  F024         	movff	sprintf@fval+3,___flmul@a+3
  5185  0007D0  C0B8  F01D         	movff	_sprintf$1688,___flmul@b
  5186  0007D4  C0B9  F01E         	movff	_sprintf$1688+1,___flmul@b+1
  5187  0007D8  C0BA  F01F         	movff	_sprintf$1688+2,___flmul@b+2
  5188  0007DC  C0BB  F020         	movff	_sprintf$1688+3,___flmul@b+3
  5189  0007E0  ECDB  F00B         	call	___flmul	;wreg free
  5190  0007E4  C01D  F03F         	movff	?___flmul,___fltol@f1
  5191  0007E8  C01E  F040         	movff	?___flmul+1,___fltol@f1+1
  5192  0007EC  C01F  F041         	movff	?___flmul+2,___fltol@f1+2
  5193  0007F0  C020  F042         	movff	?___flmul+3,___fltol@f1+3
  5194  0007F4  EC83  F015         	call	___fltol	;wreg free
  5195  0007F8  C03F  F0C2         	movff	?___fltol,sprintf@val
  5196  0007FC  C040  F0C3         	movff	?___fltol+1,sprintf@val+1
  5197  000800  C041  F0C4         	movff	?___fltol+2,sprintf@val+2
  5198  000804  C042  F0C5         	movff	?___fltol+3,sprintf@val+3
  5199                           
  5200                           ;doprnt.c: 1228: while(c--) {
  5201  000808  D073               	goto	l5084
  5202  00080A                     l5074:
  5203                           
  5204                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5205  00080A  C0C2  F00F         	movff	sprintf@val,___lldiv@dividend
  5206  00080E  C0C3  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  5207  000812  C0C4  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  5208  000816  C0C5  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  5209  00081A  0100               	movlb	0	; () banked
  5210  00081C  51D2               	movf	sprintf@c& (0+255),w,b
  5211  00081E  0D04               	mullw	4
  5212  000820  0E5B               	movlw	low _dpowers
  5213  000822  24F3               	addwf	prodl,w,c
  5214  000824  6EF6               	movwf	tblptrl,c
  5215  000826  0EFF               	movlw	high _dpowers
  5216  000828  20F4               	addwfc	prodh,w,c
  5217  00082A  6EF7               	movwf	tblptrh,c
  5218  00082C                     	if	0	;There are less than 3 active tblptr bytes
  5219  00082C                     	endif
  5220  00082C  0009               	tblrd		*+
  5221  00082E  CFF5 F013          	movff	tablat,___lldiv@divisor
  5222  000832  0009               	tblrd		*+
  5223  000834  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  5224  000838  0009               	tblrd		*+
  5225  00083A  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  5226  00083E  000A               	tblrd		*-
  5227  000840  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  5228  000844  ECB7  F016         	call	___lldiv	;wreg free
  5229  000848  C00F  F0BE         	movff	?___lldiv,sprintf@tmpval
  5230  00084C  C010  F0BF         	movff	?___lldiv+1,sprintf@tmpval+1
  5231  000850  C011  F0C0         	movff	?___lldiv+2,sprintf@tmpval+2
  5232  000854  C012  F0C1         	movff	?___lldiv+3,sprintf@tmpval+3
  5233                           
  5234                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5235  000858  C0BE  F01C         	movff	sprintf@tmpval,___llmod@dividend
  5236  00085C  C0BF  F01D         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5237  000860  C0C0  F01E         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5238  000864  C0C1  F01F         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5239  000868  0E0A               	movlw	10
  5240  00086A  6E20               	movwf	___llmod@divisor,c
  5241  00086C  0E00               	movlw	0
  5242  00086E  6E21               	movwf	___llmod@divisor+1,c
  5243  000870  0E00               	movlw	0
  5244  000872  6E22               	movwf	___llmod@divisor+2,c
  5245  000874  0E00               	movlw	0
  5246  000876  6E23               	movwf	___llmod@divisor+3,c
  5247  000878  EC65  F017         	call	___llmod	;wreg free
  5248  00087C  C01C  F0BE         	movff	?___llmod,sprintf@tmpval
  5249  000880  C01D  F0BF         	movff	?___llmod+1,sprintf@tmpval+1
  5250  000884  C01E  F0C0         	movff	?___llmod+2,sprintf@tmpval+2
  5251  000888  C01F  F0C1         	movff	?___llmod+3,sprintf@tmpval+3
  5252                           
  5253                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  5254  00088C  0100               	movlb	0	; () banked
  5255  00088E  51BE               	movf	sprintf@tmpval& (0+255),w,b
  5256  000890  0F30               	addlw	48
  5257  000892  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5258  000896  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5259  00089A  6EDF               	movwf	indf2,c
  5260                           
  5261                           ; BSR set to: 0
  5262  00089C  0100               	movlb	0	; () banked
  5263  00089E  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5264  0008A0  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;doprnt.c: 1232: val %= dpowers[c];
  5268  0008A2  C0C2  F01C         	movff	sprintf@val,___llmod@dividend
  5269  0008A6  C0C3  F01D         	movff	sprintf@val+1,___llmod@dividend+1
  5270  0008AA  C0C4  F01E         	movff	sprintf@val+2,___llmod@dividend+2
  5271  0008AE  C0C5  F01F         	movff	sprintf@val+3,___llmod@dividend+3
  5272  0008B2  0100               	movlb	0	; () banked
  5273  0008B4  51D2               	movf	sprintf@c& (0+255),w,b
  5274  0008B6  0D04               	mullw	4
  5275  0008B8  0E5B               	movlw	low _dpowers
  5276  0008BA  24F3               	addwf	prodl,w,c
  5277  0008BC  6EF6               	movwf	tblptrl,c
  5278  0008BE  0EFF               	movlw	high _dpowers
  5279  0008C0  20F4               	addwfc	prodh,w,c
  5280  0008C2  6EF7               	movwf	tblptrh,c
  5281  0008C4                     	if	0	;There are less than 3 active tblptr bytes
  5282  0008C4                     	endif
  5283  0008C4  0009               	tblrd		*+
  5284  0008C6  CFF5 F020          	movff	tablat,___llmod@divisor
  5285  0008CA  0009               	tblrd		*+
  5286  0008CC  CFF5 F021          	movff	tablat,___llmod@divisor+1
  5287  0008D0  0009               	tblrd		*+
  5288  0008D2  CFF5 F022          	movff	tablat,___llmod@divisor+2
  5289  0008D6  000A               	tblrd		*-
  5290  0008D8  CFF5 F023          	movff	tablat,___llmod@divisor+3
  5291  0008DC  EC65  F017         	call	___llmod	;wreg free
  5292  0008E0  C01C  F0C2         	movff	?___llmod,sprintf@val
  5293  0008E4  C01D  F0C3         	movff	?___llmod+1,sprintf@val+1
  5294  0008E8  C01E  F0C4         	movff	?___llmod+2,sprintf@val+2
  5295  0008EC  C01F  F0C5         	movff	?___llmod+3,sprintf@val+3
  5296  0008F0                     l5084:
  5297  0008F0  0100               	movlb	0	; () banked
  5298  0008F2  07D2               	decf	sprintf@c& (0+255),f,b
  5299  0008F4  0100               	movlb	0	; () banked
  5300  0008F6  29D2               	incf	sprintf@c& (0+255),w,b
  5301  0008F8  B4D8               	btfsc	status,2,c
  5302  0008FA  D00E               	goto	l5092
  5303  0008FC  D786               	goto	l5074
  5304  0008FE                     l5086:
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  5308  0008FE  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5309  000902  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5310  000906  0E30               	movlw	48
  5311  000908  6EDF               	movwf	indf2,c
  5312                           
  5313                           ; BSR set to: 0
  5314  00090A  0100               	movlb	0	; () banked
  5315  00090C  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5316  00090E  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;doprnt.c: 1237: prec--;
  5320  000910  0100               	movlb	0	; () banked
  5321  000912  07D0               	decf	sprintf@prec& (0+255),f,b
  5322  000914  A0D8               	btfss	status,0,c
  5323  000916  07D1               	decf	(sprintf@prec+1)& (0+255),f,b
  5324  000918                     l5092:
  5325                           
  5326                           ; BSR set to: 0
  5327  000918  0100               	movlb	0	; () banked
  5328  00091A  51D0               	movf	sprintf@prec& (0+255),w,b
  5329  00091C  0100               	movlb	0	; () banked
  5330  00091E  11D1               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5331  000920  B4D8               	btfsc	status,2,c
  5332  000922  D180               	goto	l5190
  5333  000924  D7EC               	goto	l5086
  5334  000926                     l5094:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;doprnt.c: 1246: }
  5338                           ;doprnt.c: 1253: {
  5339                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  5340  000926  C0BC  FFD9         	movff	sprintf@ap,fsr2l
  5341  00092A  C0BD  FFDA         	movff	sprintf@ap+1,fsr2h
  5342  00092E  CFDE F0C2          	movff	postinc2,sprintf@val
  5343  000932  CFDD F0C3          	movff	postdec2,sprintf@val+1
  5344  000936  0100               	movlb	0	; () banked
  5345  000938  0E00               	movlw	0
  5346  00093A  BFC3               	btfsc	(sprintf@val+1)& (0+255),7,b
  5347  00093C  0EFF               	movlw	-1
  5348  00093E  6FC4               	movwf	(sprintf@val+2)& (0+255),b
  5349  000940  6FC5               	movwf	(sprintf@val+3)& (0+255),b
  5350                           
  5351                           ; BSR set to: 0
  5352  000942  0E02               	movlw	2
  5353  000944  0100               	movlb	0	; () banked
  5354  000946  27BC               	addwf	sprintf@ap& (0+255),f,b
  5355  000948  0E00               	movlw	0
  5356  00094A  23BD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;doprnt.c: 1261: if((long)val < 0) {
  5360  00094C  0100               	movlb	0	; () banked
  5361  00094E  AFC5               	btfss	(sprintf@val+3)& (0+255),7,b
  5362  000950  D00C               	goto	l5104
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;doprnt.c: 1262: flag |= 0x03;
  5366  000952  0E03               	movlw	3
  5367  000954  0100               	movlb	0	; () banked
  5368  000956  13C8               	iorwf	sprintf@flag& (0+255),f,b
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;doprnt.c: 1263: val = -val;
  5372  000958  0100               	movlb	0	; () banked
  5373  00095A  1FC5               	comf	(sprintf@val+3)& (0+255),f,b
  5374  00095C  1FC4               	comf	(sprintf@val+2)& (0+255),f,b
  5375  00095E  1FC3               	comf	(sprintf@val+1)& (0+255),f,b
  5376  000960  6DC2               	negf	sprintf@val& (0+255),b
  5377  000962  0E00               	movlw	0
  5378  000964  23C3               	addwfc	(sprintf@val+1)& (0+255),f,b
  5379  000966  23C4               	addwfc	(sprintf@val+2)& (0+255),f,b
  5380  000968  23C5               	addwfc	(sprintf@val+3)& (0+255),f,b
  5381  00096A                     l5104:
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;doprnt.c: 1264: }
  5385                           ;doprnt.c: 1266: }
  5386                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  5387  00096A  0100               	movlb	0	; () banked
  5388  00096C  51D0               	movf	sprintf@prec& (0+255),w,b
  5389  00096E  0100               	movlb	0	; () banked
  5390  000970  11D1               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5391  000972  A4D8               	btfss	status,2,c
  5392  000974  D00D               	goto	l5110
  5393                           
  5394                           ; BSR set to: 0
  5395  000976  0100               	movlb	0	; () banked
  5396  000978  51C2               	movf	sprintf@val& (0+255),w,b
  5397  00097A  0100               	movlb	0	; () banked
  5398  00097C  11C3               	iorwf	(sprintf@val+1)& (0+255),w,b
  5399  00097E  0100               	movlb	0	; () banked
  5400  000980  11C4               	iorwf	(sprintf@val+2)& (0+255),w,b
  5401  000982  0100               	movlb	0	; () banked
  5402  000984  11C5               	iorwf	(sprintf@val+3)& (0+255),w,b
  5403  000986  A4D8               	btfss	status,2,c
  5404  000988  D003               	goto	l5110
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;doprnt.c: 1291: prec++;
  5408  00098A  0100               	movlb	0	; () banked
  5409  00098C  4BD0               	infsnz	sprintf@prec& (0+255),f,b
  5410  00098E  2BD1               	incf	(sprintf@prec+1)& (0+255),f,b
  5411  000990                     l5110:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5415  000990  0E01               	movlw	1
  5416  000992  0100               	movlb	0	; () banked
  5417  000994  6FD2               	movwf	sprintf@c& (0+255),b
  5418  000996                     l5112:
  5419                           
  5420                           ; BSR set to: 0
  5421  000996  0E0A               	movlw	10
  5422  000998  0100               	movlb	0	; () banked
  5423  00099A  19D2               	xorwf	sprintf@c& (0+255),w,b
  5424  00099C  B4D8               	btfsc	status,2,c
  5425  00099E  D01E               	goto	l5124
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;doprnt.c: 1306: if(val < dpowers[c])
  5429                           
  5430                           ; BSR set to: 0
  5431                           
  5432                           ; BSR set to: 0
  5433  0009A0  0100               	movlb	0	; () banked
  5434  0009A2  51D2               	movf	sprintf@c& (0+255),w,b
  5435  0009A4  0D04               	mullw	4
  5436  0009A6  0E5B               	movlw	low _dpowers
  5437  0009A8  24F3               	addwf	prodl,w,c
  5438  0009AA  6EF6               	movwf	tblptrl,c
  5439  0009AC  0EFF               	movlw	high _dpowers
  5440  0009AE  20F4               	addwfc	prodh,w,c
  5441  0009B0  6EF7               	movwf	tblptrh,c
  5442  0009B2                     	if	0	;There are less than 3 active tblptr bytes
  5443  0009B2                     	endif
  5444  0009B2  0009               	tblrd		*+
  5445  0009B4  50F5               	movf	tablat,w,c
  5446  0009B6  0100               	movlb	0	; () banked
  5447  0009B8  5DC2               	subwf	sprintf@val& (0+255),w,b
  5448  0009BA  0009               	tblrd		*+
  5449  0009BC  50F5               	movf	tablat,w,c
  5450  0009BE  0100               	movlb	0	; () banked
  5451  0009C0  59C3               	subwfb	(sprintf@val+1)& (0+255),w,b
  5452  0009C2  0009               	tblrd		*+
  5453  0009C4  50F5               	movf	tablat,w,c
  5454  0009C6  0100               	movlb	0	; () banked
  5455  0009C8  59C4               	subwfb	(sprintf@val+2)& (0+255),w,b
  5456  0009CA  0009               	tblrd		*+
  5457  0009CC  50F5               	movf	tablat,w,c
  5458  0009CE  0100               	movlb	0	; () banked
  5459  0009D0  59C5               	subwfb	(sprintf@val+3)& (0+255),w,b
  5460  0009D2  A0D8               	btfss	status,0,c
  5461  0009D4  D003               	goto	l5124
  5462                           
  5463                           ; BSR set to: 0
  5464                           
  5465                           ; BSR set to: 0
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;doprnt.c: 1307: break;
  5469  0009D6  0100               	movlb	0	; () banked
  5470  0009D8  2BD2               	incf	sprintf@c& (0+255),f,b
  5471  0009DA  D7DD               	goto	l5112
  5472  0009DC                     l5124:
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;doprnt.c: 1339: if(c < prec)
  5476  0009DC  0E80               	movlw	128
  5477  0009DE  0100               	movlb	0	; () banked
  5478  0009E0  BFD2               	btfsc	sprintf@c& (0+255),7,b
  5479  0009E2  0E7F               	movlw	127
  5480  0009E4  6E63               	movwf	??_sprintf& (0+255),c
  5481  0009E6  0100               	movlb	0	; () banked
  5482  0009E8  51D0               	movf	sprintf@prec& (0+255),w,b
  5483  0009EA  0100               	movlb	0	; () banked
  5484  0009EC  5DD2               	subwf	sprintf@c& (0+255),w,b
  5485  0009EE  0100               	movlb	0	; () banked
  5486  0009F0  51D1               	movf	(sprintf@prec+1)& (0+255),w,b
  5487  0009F2  0A80               	xorlw	128
  5488  0009F4  5863               	subwfb	??_sprintf& (0+255),w,c
  5489  0009F6  B0D8               	btfsc	status,0,c
  5490  0009F8  D003               	goto	l5128
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;doprnt.c: 1340: c = prec;
  5494  0009FA  C0D0  F0D2         	movff	sprintf@prec,sprintf@c
  5495  0009FE  D016               	goto	l5132
  5496  000A00                     l5128:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;doprnt.c: 1341: else if(prec < c)
  5500  000A00  0100               	movlb	0	; () banked
  5501  000A02  51D1               	movf	(sprintf@prec+1)& (0+255),w,b
  5502  000A04  0A80               	xorlw	128
  5503  000A06  6E63               	movwf	??_sprintf& (0+255),c
  5504  000A08  0100               	movlb	0	; () banked
  5505  000A0A  51D2               	movf	sprintf@c& (0+255),w,b
  5506  000A0C  0100               	movlb	0	; () banked
  5507  000A0E  5DD0               	subwf	sprintf@prec& (0+255),w,b
  5508  000A10  0E80               	movlw	128
  5509  000A12  0100               	movlb	0	; () banked
  5510  000A14  BFD2               	btfsc	sprintf@c& (0+255),7,b
  5511  000A16  0E7F               	movlw	127
  5512  000A18  5863               	subwfb	??_sprintf& (0+255),w,c
  5513  000A1A  B0D8               	btfsc	status,0,c
  5514  000A1C  D007               	goto	l5132
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;doprnt.c: 1342: prec = c;
  5518  000A1E  0100               	movlb	0	; () banked
  5519  000A20  51D2               	movf	sprintf@c& (0+255),w,b
  5520  000A22  0100               	movlb	0	; () banked
  5521  000A24  6FD0               	movwf	sprintf@prec& (0+255),b
  5522  000A26  6BD1               	clrf	(sprintf@prec+1)& (0+255),b
  5523  000A28  BFD0               	btfsc	sprintf@prec& (0+255),7,b
  5524  000A2A  07D1               	decf	(sprintf@prec+1)& (0+255),f,b
  5525  000A2C                     l5132:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5529  000A2C  0100               	movlb	0	; () banked
  5530  000A2E  51CA               	movf	sprintf@width& (0+255),w,b
  5531  000A30  0100               	movlb	0	; () banked
  5532  000A32  11CB               	iorwf	(sprintf@width+1)& (0+255),w,b
  5533  000A34  B4D8               	btfsc	status,2,c
  5534  000A36  D010               	goto	l5138
  5535                           
  5536                           ; BSR set to: 0
  5537  000A38  0E03               	movlw	3
  5538  000A3A  0100               	movlb	0	; () banked
  5539  000A3C  15C8               	andwf	sprintf@flag& (0+255),w,b
  5540  000A3E  6E63               	movwf	??_sprintf& (0+255),c
  5541  000A40  0E00               	movlw	0
  5542  000A42  0100               	movlb	0	; () banked
  5543  000A44  15C9               	andwf	(sprintf@flag+1)& (0+255),w,b
  5544  000A46  6E64               	movwf	(??_sprintf+1)& (0+255),c
  5545  000A48  5063               	movf	??_sprintf,w,c
  5546  000A4A  1064               	iorwf	??_sprintf+1,w,c
  5547  000A4C  B4D8               	btfsc	status,2,c
  5548  000A4E  D004               	goto	l5138
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;doprnt.c: 1346: width--;
  5552  000A50  0100               	movlb	0	; () banked
  5553  000A52  07CA               	decf	sprintf@width& (0+255),f,b
  5554  000A54  A0D8               	btfss	status,0,c
  5555  000A56  07CB               	decf	(sprintf@width+1)& (0+255),f,b
  5556  000A58                     l5138:
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;doprnt.c: 1348: if(flag & 0x4000) {
  5560  000A58  0100               	movlb	0	; () banked
  5561  000A5A  ADC9               	btfss	(sprintf@flag+1)& (0+255),6,b
  5562  000A5C  D01C               	goto	l5146
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;doprnt.c: 1349: if(width > prec)
  5566  000A5E  0100               	movlb	0	; () banked
  5567  000A60  51CA               	movf	sprintf@width& (0+255),w,b
  5568  000A62  0100               	movlb	0	; () banked
  5569  000A64  5DD0               	subwf	sprintf@prec& (0+255),w,b
  5570  000A66  0100               	movlb	0	; () banked
  5571  000A68  51D1               	movf	(sprintf@prec+1)& (0+255),w,b
  5572  000A6A  0A80               	xorlw	128
  5573  000A6C  6E63               	movwf	??_sprintf& (0+255),c
  5574  000A6E  0100               	movlb	0	; () banked
  5575  000A70  51CB               	movf	(sprintf@width+1)& (0+255),w,b
  5576  000A72  0A80               	xorlw	128
  5577  000A74  5863               	subwfb	??_sprintf& (0+255),w,c
  5578  000A76  B0D8               	btfsc	status,0,c
  5579  000A78  D009               	goto	l5144
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;doprnt.c: 1350: width -= prec;
  5583  000A7A  0100               	movlb	0	; () banked
  5584  000A7C  51D0               	movf	sprintf@prec& (0+255),w,b
  5585  000A7E  0100               	movlb	0	; () banked
  5586  000A80  5FCA               	subwf	sprintf@width& (0+255),f,b
  5587  000A82  0100               	movlb	0	; () banked
  5588  000A84  51D1               	movf	(sprintf@prec+1)& (0+255),w,b
  5589  000A86  0100               	movlb	0	; () banked
  5590  000A88  5BCB               	subwfb	(sprintf@width+1)& (0+255),f,b
  5591  000A8A  D005               	goto	l5146
  5592  000A8C                     l5144:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;doprnt.c: 1351: else
  5596                           ;doprnt.c: 1352: width = 0;
  5597  000A8C  0E00               	movlw	0
  5598  000A8E  0100               	movlb	0	; () banked
  5599  000A90  6FCB               	movwf	(sprintf@width+1)& (0+255),b
  5600  000A92  0E00               	movlw	0
  5601  000A94  6FCA               	movwf	sprintf@width& (0+255),b
  5602  000A96                     l5146:
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;doprnt.c: 1353: }
  5606                           ;doprnt.c: 1381: if(width > c)
  5607  000A96  0E80               	movlw	128
  5608  000A98  0100               	movlb	0	; () banked
  5609  000A9A  BFD2               	btfsc	sprintf@c& (0+255),7,b
  5610  000A9C  0E7F               	movlw	127
  5611  000A9E  6E63               	movwf	??_sprintf& (0+255),c
  5612  000AA0  0100               	movlb	0	; () banked
  5613  000AA2  51CA               	movf	sprintf@width& (0+255),w,b
  5614  000AA4  0100               	movlb	0	; () banked
  5615  000AA6  5DD2               	subwf	sprintf@c& (0+255),w,b
  5616  000AA8  0100               	movlb	0	; () banked
  5617  000AAA  51CB               	movf	(sprintf@width+1)& (0+255),w,b
  5618  000AAC  0A80               	xorlw	128
  5619  000AAE  5863               	subwfb	??_sprintf& (0+255),w,c
  5620  000AB0  B0D8               	btfsc	status,0,c
  5621  000AB2  D00B               	goto	l5150
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;doprnt.c: 1382: width -= c;
  5625  000AB4  0100               	movlb	0	; () banked
  5626  000AB6  51D2               	movf	sprintf@c& (0+255),w,b
  5627  000AB8  0100               	movlb	0	; () banked
  5628  000ABA  5FCA               	subwf	sprintf@width& (0+255),f,b
  5629  000ABC  0E00               	movlw	0
  5630  000ABE  0100               	movlb	0	; () banked
  5631  000AC0  BFD2               	btfsc	sprintf@c& (0+255),7,b
  5632  000AC2  0EFF               	movlw	255
  5633  000AC4  0100               	movlb	0	; () banked
  5634  000AC6  5BCB               	subwfb	(sprintf@width+1)& (0+255),f,b
  5635  000AC8  D005               	goto	l5152
  5636  000ACA                     l5150:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;doprnt.c: 1383: else
  5640                           ;doprnt.c: 1384: width = 0;
  5641  000ACA  0E00               	movlw	0
  5642  000ACC  0100               	movlb	0	; () banked
  5643  000ACE  6FCB               	movwf	(sprintf@width+1)& (0+255),b
  5644  000AD0  0E00               	movlw	0
  5645  000AD2  6FCA               	movwf	sprintf@width& (0+255),b
  5646  000AD4                     l5152:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;doprnt.c: 1387: if(flag & 0x04) {
  5650  000AD4  0100               	movlb	0	; () banked
  5651  000AD6  A5C8               	btfss	sprintf@flag& (0+255),2,b
  5652  000AD8  D029               	goto	l5168
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;doprnt.c: 1392: if(flag & 0x03)
  5656  000ADA  0E03               	movlw	3
  5657  000ADC  0100               	movlb	0	; () banked
  5658  000ADE  15C8               	andwf	sprintf@flag& (0+255),w,b
  5659  000AE0  6E63               	movwf	??_sprintf& (0+255),c
  5660  000AE2  0E00               	movlw	0
  5661  000AE4  0100               	movlb	0	; () banked
  5662  000AE6  15C9               	andwf	(sprintf@flag+1)& (0+255),w,b
  5663  000AE8  6E64               	movwf	(??_sprintf+1)& (0+255),c
  5664  000AEA  5063               	movf	??_sprintf,w,c
  5665  000AEC  1064               	iorwf	??_sprintf+1,w,c
  5666  000AEE  B4D8               	btfsc	status,2,c
  5667  000AF0  D009               	goto	l5160
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5671  000AF2  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5672  000AF6  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5673  000AFA  0E2D               	movlw	45
  5674  000AFC  6EDF               	movwf	indf2,c
  5675                           
  5676                           ; BSR set to: 0
  5677  000AFE  0100               	movlb	0	; () banked
  5678  000B00  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5679  000B02  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5680  000B04                     l5160:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;doprnt.c: 1415: if(width)
  5684  000B04  0100               	movlb	0	; () banked
  5685  000B06  51CA               	movf	sprintf@width& (0+255),w,b
  5686  000B08  0100               	movlb	0	; () banked
  5687  000B0A  11CB               	iorwf	(sprintf@width+1)& (0+255),w,b
  5688  000B0C  B4D8               	btfsc	status,2,c
  5689  000B0E  D07F               	goto	l5188
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5693                           
  5694                           ; BSR set to: 0
  5695                           
  5696                           ;doprnt.c: 1416: do
  5697  000B10  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5698  000B14  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5699  000B18  0E30               	movlw	48
  5700  000B1A  6EDF               	movwf	indf2,c
  5701                           
  5702                           ; BSR set to: 0
  5703  000B1C  0100               	movlb	0	; () banked
  5704  000B1E  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5705  000B20  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;doprnt.c: 1418: while(--width);
  5709  000B22  0100               	movlb	0	; () banked
  5710  000B24  07CA               	decf	sprintf@width& (0+255),f,b
  5711  000B26  A0D8               	btfss	status,0,c
  5712  000B28  07CB               	decf	(sprintf@width+1)& (0+255),f,b
  5713  000B2A  D7EC               	goto	l5160
  5714  000B2C                     l5168:
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;doprnt.c: 1422: {
  5718                           ;doprnt.c: 1424: if(width
  5719                           ;doprnt.c: 1428: )
  5720  000B2C  0100               	movlb	0	; () banked
  5721  000B2E  51CA               	movf	sprintf@width& (0+255),w,b
  5722  000B30  0100               	movlb	0	; () banked
  5723  000B32  11CB               	iorwf	(sprintf@width+1)& (0+255),w,b
  5724  000B34  B4D8               	btfsc	status,2,c
  5725  000B36  D013               	goto	l5176
  5726  000B38                     l5170:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5730  000B38  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5731  000B3C  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5732  000B40  0E20               	movlw	32
  5733  000B42  6EDF               	movwf	indf2,c
  5734                           
  5735                           ; BSR set to: 0
  5736  000B44  0100               	movlb	0	; () banked
  5737  000B46  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5738  000B48  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;doprnt.c: 1431: while(--width);
  5742  000B4A  0100               	movlb	0	; () banked
  5743  000B4C  07CA               	decf	sprintf@width& (0+255),f,b
  5744  000B4E  A0D8               	btfss	status,0,c
  5745  000B50  07CB               	decf	(sprintf@width+1)& (0+255),f,b
  5746  000B52  0100               	movlb	0	; () banked
  5747  000B54  51CA               	movf	sprintf@width& (0+255),w,b
  5748  000B56  0100               	movlb	0	; () banked
  5749  000B58  11CB               	iorwf	(sprintf@width+1)& (0+255),w,b
  5750  000B5A  A4D8               	btfss	status,2,c
  5751  000B5C  D7ED               	goto	l5170
  5752  000B5E                     l5176:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;doprnt.c: 1438: if(flag & 0x03)
  5756  000B5E  0E03               	movlw	3
  5757  000B60  0100               	movlb	0	; () banked
  5758  000B62  15C8               	andwf	sprintf@flag& (0+255),w,b
  5759  000B64  6E63               	movwf	??_sprintf& (0+255),c
  5760  000B66  0E00               	movlw	0
  5761  000B68  0100               	movlb	0	; () banked
  5762  000B6A  15C9               	andwf	(sprintf@flag+1)& (0+255),w,b
  5763  000B6C  6E64               	movwf	(??_sprintf+1)& (0+255),c
  5764  000B6E  5063               	movf	??_sprintf,w,c
  5765  000B70  1064               	iorwf	??_sprintf+1,w,c
  5766  000B72  B4D8               	btfsc	status,2,c
  5767  000B74  D04C               	goto	l5188
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5771  000B76  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5772  000B7A  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5773  000B7E  0E2D               	movlw	45
  5774  000B80  6EDF               	movwf	indf2,c
  5775  000B82  D042               	goto	l5186
  5776  000B84                     l5182:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;doprnt.c: 1478: {
  5780                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5781  000B84  C0D0  F063         	movff	sprintf@prec,??_sprintf
  5782  000B88  C0D1  F064         	movff	sprintf@prec+1,??_sprintf+1
  5783  000B8C  90D8               	bcf	status,0,c
  5784  000B8E  3663               	rlcf	??_sprintf,f,c
  5785  000B90  3664               	rlcf	??_sprintf+1,f,c
  5786  000B92  90D8               	bcf	status,0,c
  5787  000B94  3663               	rlcf	??_sprintf,f,c
  5788  000B96  3664               	rlcf	??_sprintf+1,f,c
  5789  000B98  0E5B               	movlw	low _dpowers
  5790  000B9A  2463               	addwf	??_sprintf,w,c
  5791  000B9C  6EF6               	movwf	tblptrl,c
  5792  000B9E  0EFF               	movlw	high _dpowers
  5793  000BA0  2064               	addwfc	??_sprintf+1,w,c
  5794  000BA2  6EF7               	movwf	tblptrh,c
  5795  000BA4                     	if	0	;There are less than 3 active tblptr bytes
  5796  000BA4                     	endif
  5797  000BA4  0009               	tblrd		*+
  5798  000BA6  CFF5 F013          	movff	tablat,___lldiv@divisor
  5799  000BAA  0009               	tblrd		*+
  5800  000BAC  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  5801  000BB0  0009               	tblrd		*+
  5802  000BB2  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  5803  000BB6  000A               	tblrd		*-
  5804  000BB8  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  5805  000BBC  C0C2  F00F         	movff	sprintf@val,___lldiv@dividend
  5806  000BC0  C0C3  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  5807  000BC4  C0C4  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  5808  000BC8  C0C5  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  5809  000BCC  ECB7  F016         	call	___lldiv	;wreg free
  5810  000BD0  C00F  F01C         	movff	?___lldiv,___llmod@dividend
  5811  000BD4  C010  F01D         	movff	?___lldiv+1,___llmod@dividend+1
  5812  000BD8  C011  F01E         	movff	?___lldiv+2,___llmod@dividend+2
  5813  000BDC  C012  F01F         	movff	?___lldiv+3,___llmod@dividend+3
  5814  000BE0  0E0A               	movlw	10
  5815  000BE2  6E20               	movwf	___llmod@divisor,c
  5816  000BE4  0E00               	movlw	0
  5817  000BE6  6E21               	movwf	___llmod@divisor+1,c
  5818  000BE8  0E00               	movlw	0
  5819  000BEA  6E22               	movwf	___llmod@divisor+2,c
  5820  000BEC  0E00               	movlw	0
  5821  000BEE  6E23               	movwf	___llmod@divisor+3,c
  5822  000BF0  EC65  F017         	call	___llmod	;wreg free
  5823  000BF4  501C               	movf	?___llmod,w,c
  5824  000BF6  0F30               	addlw	48
  5825  000BF8  0100               	movlb	0	; () banked
  5826  000BFA  6FD2               	movwf	sprintf@c& (0+255),b
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;doprnt.c: 1523: }
  5830                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5831  000BFC  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5832  000C00  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5833  000C04  C0D2  FFDF         	movff	sprintf@c,indf2
  5834  000C08                     l5186:
  5835                           
  5836                           ; BSR set to: 0
  5837  000C08  0100               	movlb	0	; () banked
  5838  000C0A  4BAE               	infsnz	sprintf@sp& (0+255),f,b
  5839  000C0C  2BAF               	incf	(sprintf@sp+1)& (0+255),f,b
  5840  000C0E                     l5188:
  5841                           
  5842                           ; BSR set to: 0
  5843  000C0E  0100               	movlb	0	; () banked
  5844  000C10  07D0               	decf	sprintf@prec& (0+255),f,b
  5845  000C12  A0D8               	btfss	status,0,c
  5846  000C14  07D1               	decf	(sprintf@prec+1)& (0+255),f,b
  5847  000C16  0100               	movlb	0	; () banked
  5848  000C18  29D0               	incf	sprintf@prec& (0+255),w,b
  5849  000C1A  E1B4               	bnz	l5182
  5850  000C1C  0100               	movlb	0	; () banked
  5851  000C1E  29D1               	incf	(sprintf@prec+1)& (0+255),w,b
  5852  000C20  A4D8               	btfss	status,2,c
  5853  000C22  D7B0               	goto	l5182
  5854  000C24                     l5190:
  5855                           
  5856                           ; BSR set to: 0
  5857  000C24  C0B0  FFF6         	movff	sprintf@f,tblptrl
  5858  000C28  C0B1  FFF7         	movff	sprintf@f+1,tblptrh
  5859  000C2C  0100               	movlb	0	; () banked
  5860  000C2E  4BB0               	infsnz	sprintf@f& (0+255),f,b
  5861  000C30  2BB1               	incf	(sprintf@f+1)& (0+255),f,b
  5862  000C32                     	if	0	;tblptru may be non-zero
  5863  000C32                     	endif
  5864  000C32                     	if	0	;tblptru may be non-zero
  5865  000C32                     	endif
  5866  000C32  0008               	tblrd		*
  5867  000C34  CFF5 F0D2          	movff	tablat,sprintf@c
  5868  000C38  0100               	movlb	0	; () banked
  5869  000C3A  51D2               	movf	sprintf@c& (0+255),w,b
  5870  000C3C  A4D8               	btfss	status,2,c
  5871  000C3E  EF15  F000         	goto	l4866
  5872  000C42                     l5192:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;doprnt.c: 1538: *sp = 0;
  5876  000C42  C0AE  FFD9         	movff	sprintf@sp,fsr2l
  5877  000C46  C0AF  FFDA         	movff	sprintf@sp+1,fsr2h
  5878  000C4A  0E00               	movlw	0
  5879  000C4C  6EDF               	movwf	indf2,c
  5880  000C4E  0012               	return	
  5881  000C50                     __end_of_sprintf:
  5882                           	opt stack 0
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon	equ	0xFF2
  5890                           intcon2	equ	0xFF1
  5891                           intcon3	equ	0xFF0
  5892                           postinc0	equ	0xFEE
  5893                           wreg	equ	0xFE8
  5894                           postdec1	equ	0xFE5
  5895                           fsr1l	equ	0xFE1
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _scale *****************
  5904 ;; Defined at:
  5905 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  scl             1    wreg     char 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  scl             1   61[COMRAM] char 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  4   53[COMRAM] char 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5920 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;Total ram usage:        9 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    4
  5926 ;; This function calls:
  5927 ;;		___awdiv
  5928 ;;		___awmod
  5929 ;;		___flmul
  5930 ;; This function is called by:
  5931 ;;		_sprintf
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text9
  5936  00139E                     __ptext9:
  5937                           	opt stack 0
  5938  00139E                     _scale:
  5939                           	opt stack 24
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;incstack = 0
  5943                           ;scale@scl stored from wreg
  5944  00139E  6E3E               	movwf	scale@scl,c
  5945                           
  5946                           ;doprnt.c: 428: if(scl < 0) {
  5947  0013A0  AE3E               	btfss	scale@scl,7,c
  5948  0013A2  D105               	goto	l3558
  5949                           
  5950                           ;doprnt.c: 429: scl = -scl;
  5951  0013A4  6C3E               	negf	scale@scl,c
  5952                           
  5953                           ;doprnt.c: 430: if(scl>=110)
  5954  0013A6  503E               	movf	scale@scl,w,c
  5955  0013A8  0A80               	xorlw	128
  5956  0013AA  0F12               	addlw	-238
  5957  0013AC  A0D8               	btfss	status,0,c
  5958  0013AE  D098               	goto	l3548
  5959                           
  5960                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5961  0013B0  0E00               	movlw	0
  5962  0013B2  6E18               	movwf	___awdiv@divisor+1,c
  5963  0013B4  0E0A               	movlw	10
  5964  0013B6  6E17               	movwf	___awdiv@divisor,c
  5965  0013B8  0E00               	movlw	0
  5966  0013BA  6E12               	movwf	___awmod@divisor+1,c
  5967  0013BC  0E64               	movlw	100
  5968  0013BE  6E11               	movwf	___awmod@divisor,c
  5969  0013C0  503E               	movf	scale@scl,w,c
  5970  0013C2  6E0F               	movwf	___awmod@dividend,c
  5971  0013C4  6A10               	clrf	___awmod@dividend+1,c
  5972  0013C6  BE0F               	btfsc	___awmod@dividend,7,c
  5973  0013C8  0610               	decf	___awmod@dividend+1,f,c
  5974  0013CA  ECF8  F016         	call	___awmod	;wreg free
  5975  0013CE  C00F  F015         	movff	?___awmod,___awdiv@dividend
  5976  0013D2  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  5977  0013D6  EC34  F016         	call	___awdiv	;wreg free
  5978  0013DA  90D8               	bcf	status,0,c
  5979  0013DC  3615               	rlcf	?___awdiv,f,c
  5980  0013DE  3616               	rlcf	?___awdiv+1,f,c
  5981  0013E0  90D8               	bcf	status,0,c
  5982  0013E2  3615               	rlcf	?___awdiv,f,c
  5983  0013E4  3616               	rlcf	?___awdiv+1,f,c
  5984  0013E6  0E24               	movlw	36
  5985  0013E8  2615               	addwf	?___awdiv,f,c
  5986  0013EA  0E00               	movlw	0
  5987  0013EC  2216               	addwfc	?___awdiv+1,f,c
  5988  0013EE  0EF3               	movlw	low __npowers_
  5989  0013F0  2415               	addwf	?___awdiv,w,c
  5990  0013F2  6EF6               	movwf	tblptrl,c
  5991  0013F4  0EFE               	movlw	high __npowers_
  5992  0013F6  2016               	addwfc	?___awdiv+1,w,c
  5993  0013F8  6EF7               	movwf	tblptrh,c
  5994  0013FA                     	if	0	;There are less than 3 active tblptr bytes
  5995  0013FA                     	endif
  5996  0013FA  0009               	tblrd		*+
  5997  0013FC  CFF5 F021          	movff	tablat,___flmul@a
  5998  001400  0009               	tblrd		*+
  5999  001402  CFF5 F022          	movff	tablat,___flmul@a+1
  6000  001406  0009               	tblrd		*+
  6001  001408  CFF5 F023          	movff	tablat,___flmul@a+2
  6002  00140C  000A               	tblrd		*-
  6003  00140E  CFF5 F024          	movff	tablat,___flmul@a+3
  6004  001412  0E00               	movlw	0
  6005  001414  6E18               	movwf	___awdiv@divisor+1,c
  6006  001416  0E64               	movlw	100
  6007  001418  6E17               	movwf	___awdiv@divisor,c
  6008  00141A  503E               	movf	scale@scl,w,c
  6009  00141C  6E15               	movwf	___awdiv@dividend,c
  6010  00141E  6A16               	clrf	___awdiv@dividend+1,c
  6011  001420  BE15               	btfsc	___awdiv@dividend,7,c
  6012  001422  0616               	decf	___awdiv@dividend+1,f,c
  6013  001424  EC34  F016         	call	___awdiv	;wreg free
  6014  001428  90D8               	bcf	status,0,c
  6015  00142A  3615               	rlcf	?___awdiv,f,c
  6016  00142C  3616               	rlcf	?___awdiv+1,f,c
  6017  00142E  90D8               	bcf	status,0,c
  6018  001430  3615               	rlcf	?___awdiv,f,c
  6019  001432  3616               	rlcf	?___awdiv+1,f,c
  6020  001434  0E48               	movlw	72
  6021  001436  2615               	addwf	?___awdiv,f,c
  6022  001438  0E00               	movlw	0
  6023  00143A  2216               	addwfc	?___awdiv+1,f,c
  6024  00143C  0EF3               	movlw	low __npowers_
  6025  00143E  2415               	addwf	?___awdiv,w,c
  6026  001440  6EF6               	movwf	tblptrl,c
  6027  001442  0EFE               	movlw	high __npowers_
  6028  001444  2016               	addwfc	?___awdiv+1,w,c
  6029  001446  6EF7               	movwf	tblptrh,c
  6030  001448                     	if	0	;There are less than 3 active tblptr bytes
  6031  001448                     	endif
  6032  001448  0009               	tblrd		*+
  6033  00144A  CFF5 F01D          	movff	tablat,___flmul@b
  6034  00144E  0009               	tblrd		*+
  6035  001450  CFF5 F01E          	movff	tablat,___flmul@b+1
  6036  001454  0009               	tblrd		*+
  6037  001456  CFF5 F01F          	movff	tablat,___flmul@b+2
  6038  00145A  000A               	tblrd		*-
  6039  00145C  CFF5 F020          	movff	tablat,___flmul@b+3
  6040  001460  ECDB  F00B         	call	___flmul	;wreg free
  6041  001464  C01D  F03A         	movff	?___flmul,_scale$1687
  6042  001468  C01E  F03B         	movff	?___flmul+1,_scale$1687+1
  6043  00146C  C01F  F03C         	movff	?___flmul+2,_scale$1687+2
  6044  001470  C020  F03D         	movff	?___flmul+3,_scale$1687+3
  6045                           
  6046                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6047  001474  C03A  F01D         	movff	_scale$1687,___flmul@b
  6048  001478  C03B  F01E         	movff	_scale$1687+1,___flmul@b+1
  6049  00147C  C03C  F01F         	movff	_scale$1687+2,___flmul@b+2
  6050  001480  C03D  F020         	movff	_scale$1687+3,___flmul@b+3
  6051  001484  0E00               	movlw	0
  6052  001486  6E12               	movwf	___awmod@divisor+1,c
  6053  001488  0E0A               	movlw	10
  6054  00148A  6E11               	movwf	___awmod@divisor,c
  6055  00148C  503E               	movf	scale@scl,w,c
  6056  00148E  6E0F               	movwf	___awmod@dividend,c
  6057  001490  6A10               	clrf	___awmod@dividend+1,c
  6058  001492  BE0F               	btfsc	___awmod@dividend,7,c
  6059  001494  0610               	decf	___awmod@dividend+1,f,c
  6060  001496  ECF8  F016         	call	___awmod	;wreg free
  6061  00149A  90D8               	bcf	status,0,c
  6062  00149C  360F               	rlcf	?___awmod,f,c
  6063  00149E  3610               	rlcf	?___awmod+1,f,c
  6064  0014A0  90D8               	bcf	status,0,c
  6065  0014A2  360F               	rlcf	?___awmod,f,c
  6066  0014A4  3610               	rlcf	?___awmod+1,f,c
  6067  0014A6  0EF3               	movlw	low __npowers_
  6068  0014A8  240F               	addwf	?___awmod,w,c
  6069  0014AA  6EF6               	movwf	tblptrl,c
  6070  0014AC  0EFE               	movlw	high __npowers_
  6071  0014AE  2010               	addwfc	?___awmod+1,w,c
  6072  0014B0  6EF7               	movwf	tblptrh,c
  6073  0014B2                     	if	0	;There are less than 3 active tblptr bytes
  6074  0014B2                     	endif
  6075  0014B2  0009               	tblrd		*+
  6076  0014B4  CFF5 F021          	movff	tablat,___flmul@a
  6077  0014B8  0009               	tblrd		*+
  6078  0014BA  CFF5 F022          	movff	tablat,___flmul@a+1
  6079  0014BE  0009               	tblrd		*+
  6080  0014C0  CFF5 F023          	movff	tablat,___flmul@a+2
  6081  0014C4  000A               	tblrd		*-
  6082  0014C6  CFF5 F024          	movff	tablat,___flmul@a+3
  6083  0014CA  ECDB  F00B         	call	___flmul	;wreg free
  6084  0014CE  C01D  F036         	movff	?___flmul,?_scale
  6085  0014D2  C01E  F037         	movff	?___flmul+1,?_scale+1
  6086  0014D6  C01F  F038         	movff	?___flmul+2,?_scale+2
  6087  0014DA  C020  F039         	movff	?___flmul+3,?_scale+3
  6088  0014DE  0012               	return	
  6089  0014E0                     l3548:
  6090                           
  6091                           ;doprnt.c: 432: else if(scl > 10)
  6092  0014E0  503E               	movf	scale@scl,w,c
  6093  0014E2  0A80               	xorlw	128
  6094  0014E4  0F75               	addlw	-139
  6095  0014E6  A0D8               	btfss	status,0,c
  6096  0014E8  D04D               	goto	l3554
  6097                           
  6098                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6099  0014EA  0E00               	movlw	0
  6100  0014EC  6E18               	movwf	___awdiv@divisor+1,c
  6101  0014EE  0E0A               	movlw	10
  6102  0014F0  6E17               	movwf	___awdiv@divisor,c
  6103  0014F2  503E               	movf	scale@scl,w,c
  6104  0014F4  6E15               	movwf	___awdiv@dividend,c
  6105  0014F6  6A16               	clrf	___awdiv@dividend+1,c
  6106  0014F8  BE15               	btfsc	___awdiv@dividend,7,c
  6107  0014FA  0616               	decf	___awdiv@dividend+1,f,c
  6108  0014FC  EC34  F016         	call	___awdiv	;wreg free
  6109  001500  90D8               	bcf	status,0,c
  6110  001502  3615               	rlcf	?___awdiv,f,c
  6111  001504  3616               	rlcf	?___awdiv+1,f,c
  6112  001506  90D8               	bcf	status,0,c
  6113  001508  3615               	rlcf	?___awdiv,f,c
  6114  00150A  3616               	rlcf	?___awdiv+1,f,c
  6115  00150C  0E24               	movlw	36
  6116  00150E  2615               	addwf	?___awdiv,f,c
  6117  001510  0E00               	movlw	0
  6118  001512  2216               	addwfc	?___awdiv+1,f,c
  6119  001514  0EF3               	movlw	low __npowers_
  6120  001516  2415               	addwf	?___awdiv,w,c
  6121  001518  6EF6               	movwf	tblptrl,c
  6122  00151A  0EFE               	movlw	high __npowers_
  6123  00151C  2016               	addwfc	?___awdiv+1,w,c
  6124  00151E  6EF7               	movwf	tblptrh,c
  6125  001520                     	if	0	;There are less than 3 active tblptr bytes
  6126  001520                     	endif
  6127  001520  0009               	tblrd		*+
  6128  001522  CFF5 F01D          	movff	tablat,___flmul@b
  6129  001526  0009               	tblrd		*+
  6130  001528  CFF5 F01E          	movff	tablat,___flmul@b+1
  6131  00152C  0009               	tblrd		*+
  6132  00152E  CFF5 F01F          	movff	tablat,___flmul@b+2
  6133  001532  000A               	tblrd		*-
  6134  001534  CFF5 F020          	movff	tablat,___flmul@b+3
  6135  001538  0E00               	movlw	0
  6136  00153A  6E12               	movwf	___awmod@divisor+1,c
  6137  00153C  0E0A               	movlw	10
  6138  00153E  6E11               	movwf	___awmod@divisor,c
  6139  001540  503E               	movf	scale@scl,w,c
  6140  001542  6E0F               	movwf	___awmod@dividend,c
  6141  001544  6A10               	clrf	___awmod@dividend+1,c
  6142  001546  BE0F               	btfsc	___awmod@dividend,7,c
  6143  001548  0610               	decf	___awmod@dividend+1,f,c
  6144  00154A  ECF8  F016         	call	___awmod	;wreg free
  6145  00154E  90D8               	bcf	status,0,c
  6146  001550  360F               	rlcf	?___awmod,f,c
  6147  001552  3610               	rlcf	?___awmod+1,f,c
  6148  001554  90D8               	bcf	status,0,c
  6149  001556  360F               	rlcf	?___awmod,f,c
  6150  001558  3610               	rlcf	?___awmod+1,f,c
  6151  00155A  0EF3               	movlw	low __npowers_
  6152  00155C  240F               	addwf	?___awmod,w,c
  6153  00155E  6EF6               	movwf	tblptrl,c
  6154  001560  0EFE               	movlw	high __npowers_
  6155  001562  2010               	addwfc	?___awmod+1,w,c
  6156  001564  6EF7               	movwf	tblptrh,c
  6157  001566                     	if	0	;There are less than 3 active tblptr bytes
  6158  001566                     	endif
  6159  001566  0009               	tblrd		*+
  6160  001568  CFF5 F021          	movff	tablat,___flmul@a
  6161  00156C  0009               	tblrd		*+
  6162  00156E  CFF5 F022          	movff	tablat,___flmul@a+1
  6163  001572  0009               	tblrd		*+
  6164  001574  CFF5 F023          	movff	tablat,___flmul@a+2
  6165  001578  000A               	tblrd		*-
  6166  00157A  CFF5 F024          	movff	tablat,___flmul@a+3
  6167  00157E  ECDB  F00B         	call	___flmul	;wreg free
  6168  001582  D7A5               	goto	L7
  6169  001584                     l3554:
  6170                           
  6171                           ;doprnt.c: 434: return _npowers_[scl];
  6172  001584  503E               	movf	scale@scl,w,c
  6173  001586  0D04               	mullw	4
  6174  001588  0EF3               	movlw	low __npowers_
  6175  00158A  24F3               	addwf	prodl,w,c
  6176  00158C  6EF6               	movwf	tblptrl,c
  6177  00158E  0EFE               	movlw	high __npowers_
  6178  001590  20F4               	addwfc	prodh,w,c
  6179  001592  6EF7               	movwf	tblptrh,c
  6180  001594                     	if	0	;There are less than 3 active tblptr bytes
  6181  001594                     	endif
  6182  001594  0009               	tblrd		*+
  6183  001596  CFF5 F036          	movff	tablat,?_scale
  6184  00159A  0009               	tblrd		*+
  6185  00159C  CFF5 F037          	movff	tablat,?_scale+1
  6186  0015A0  0009               	tblrd		*+
  6187  0015A2  CFF5 F038          	movff	tablat,?_scale+2
  6188  0015A6  000A               	tblrd		*-
  6189  0015A8  CFF5 F039          	movff	tablat,?_scale+3
  6190  0015AC  0012               	return	
  6191  0015AE                     l3558:
  6192                           
  6193                           ;doprnt.c: 435: }
  6194                           ;doprnt.c: 436: if(scl>=110)
  6195  0015AE  503E               	movf	scale@scl,w,c
  6196  0015B0  0A80               	xorlw	128
  6197  0015B2  0F12               	addlw	-238
  6198  0015B4  A0D8               	btfss	status,0,c
  6199  0015B6  D098               	goto	l3566
  6200                           
  6201                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6202  0015B8  0E00               	movlw	0
  6203  0015BA  6E18               	movwf	___awdiv@divisor+1,c
  6204  0015BC  0E0A               	movlw	10
  6205  0015BE  6E17               	movwf	___awdiv@divisor,c
  6206  0015C0  0E00               	movlw	0
  6207  0015C2  6E12               	movwf	___awmod@divisor+1,c
  6208  0015C4  0E64               	movlw	100
  6209  0015C6  6E11               	movwf	___awmod@divisor,c
  6210  0015C8  503E               	movf	scale@scl,w,c
  6211  0015CA  6E0F               	movwf	___awmod@dividend,c
  6212  0015CC  6A10               	clrf	___awmod@dividend+1,c
  6213  0015CE  BE0F               	btfsc	___awmod@dividend,7,c
  6214  0015D0  0610               	decf	___awmod@dividend+1,f,c
  6215  0015D2  ECF8  F016         	call	___awmod	;wreg free
  6216  0015D6  C00F  F015         	movff	?___awmod,___awdiv@dividend
  6217  0015DA  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  6218  0015DE  EC34  F016         	call	___awdiv	;wreg free
  6219  0015E2  90D8               	bcf	status,0,c
  6220  0015E4  3615               	rlcf	?___awdiv,f,c
  6221  0015E6  3616               	rlcf	?___awdiv+1,f,c
  6222  0015E8  90D8               	bcf	status,0,c
  6223  0015EA  3615               	rlcf	?___awdiv,f,c
  6224  0015EC  3616               	rlcf	?___awdiv+1,f,c
  6225  0015EE  0E24               	movlw	36
  6226  0015F0  2615               	addwf	?___awdiv,f,c
  6227  0015F2  0E00               	movlw	0
  6228  0015F4  2216               	addwfc	?___awdiv+1,f,c
  6229  0015F6  0E27               	movlw	low __powers_
  6230  0015F8  2415               	addwf	?___awdiv,w,c
  6231  0015FA  6EF6               	movwf	tblptrl,c
  6232  0015FC  0EFF               	movlw	high __powers_
  6233  0015FE  2016               	addwfc	?___awdiv+1,w,c
  6234  001600  6EF7               	movwf	tblptrh,c
  6235  001602                     	if	0	;There are less than 3 active tblptr bytes
  6236  001602                     	endif
  6237  001602  0009               	tblrd		*+
  6238  001604  CFF5 F021          	movff	tablat,___flmul@a
  6239  001608  0009               	tblrd		*+
  6240  00160A  CFF5 F022          	movff	tablat,___flmul@a+1
  6241  00160E  0009               	tblrd		*+
  6242  001610  CFF5 F023          	movff	tablat,___flmul@a+2
  6243  001614  000A               	tblrd		*-
  6244  001616  CFF5 F024          	movff	tablat,___flmul@a+3
  6245  00161A  0E00               	movlw	0
  6246  00161C  6E18               	movwf	___awdiv@divisor+1,c
  6247  00161E  0E64               	movlw	100
  6248  001620  6E17               	movwf	___awdiv@divisor,c
  6249  001622  503E               	movf	scale@scl,w,c
  6250  001624  6E15               	movwf	___awdiv@dividend,c
  6251  001626  6A16               	clrf	___awdiv@dividend+1,c
  6252  001628  BE15               	btfsc	___awdiv@dividend,7,c
  6253  00162A  0616               	decf	___awdiv@dividend+1,f,c
  6254  00162C  EC34  F016         	call	___awdiv	;wreg free
  6255  001630  90D8               	bcf	status,0,c
  6256  001632  3615               	rlcf	?___awdiv,f,c
  6257  001634  3616               	rlcf	?___awdiv+1,f,c
  6258  001636  90D8               	bcf	status,0,c
  6259  001638  3615               	rlcf	?___awdiv,f,c
  6260  00163A  3616               	rlcf	?___awdiv+1,f,c
  6261  00163C  0E48               	movlw	72
  6262  00163E  2615               	addwf	?___awdiv,f,c
  6263  001640  0E00               	movlw	0
  6264  001642  2216               	addwfc	?___awdiv+1,f,c
  6265  001644  0E27               	movlw	low __powers_
  6266  001646  2415               	addwf	?___awdiv,w,c
  6267  001648  6EF6               	movwf	tblptrl,c
  6268  00164A  0EFF               	movlw	high __powers_
  6269  00164C  2016               	addwfc	?___awdiv+1,w,c
  6270  00164E  6EF7               	movwf	tblptrh,c
  6271  001650                     	if	0	;There are less than 3 active tblptr bytes
  6272  001650                     	endif
  6273  001650  0009               	tblrd		*+
  6274  001652  CFF5 F01D          	movff	tablat,___flmul@b
  6275  001656  0009               	tblrd		*+
  6276  001658  CFF5 F01E          	movff	tablat,___flmul@b+1
  6277  00165C  0009               	tblrd		*+
  6278  00165E  CFF5 F01F          	movff	tablat,___flmul@b+2
  6279  001662  000A               	tblrd		*-
  6280  001664  CFF5 F020          	movff	tablat,___flmul@b+3
  6281  001668  ECDB  F00B         	call	___flmul	;wreg free
  6282  00166C  C01D  F03A         	movff	?___flmul,_scale$1687
  6283  001670  C01E  F03B         	movff	?___flmul+1,_scale$1687+1
  6284  001674  C01F  F03C         	movff	?___flmul+2,_scale$1687+2
  6285  001678  C020  F03D         	movff	?___flmul+3,_scale$1687+3
  6286                           
  6287                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6288  00167C  C03A  F01D         	movff	_scale$1687,___flmul@b
  6289  001680  C03B  F01E         	movff	_scale$1687+1,___flmul@b+1
  6290  001684  C03C  F01F         	movff	_scale$1687+2,___flmul@b+2
  6291  001688  C03D  F020         	movff	_scale$1687+3,___flmul@b+3
  6292  00168C  0E00               	movlw	0
  6293  00168E  6E12               	movwf	___awmod@divisor+1,c
  6294  001690  0E0A               	movlw	10
  6295  001692  6E11               	movwf	___awmod@divisor,c
  6296  001694  503E               	movf	scale@scl,w,c
  6297  001696  6E0F               	movwf	___awmod@dividend,c
  6298  001698  6A10               	clrf	___awmod@dividend+1,c
  6299  00169A  BE0F               	btfsc	___awmod@dividend,7,c
  6300  00169C  0610               	decf	___awmod@dividend+1,f,c
  6301  00169E  ECF8  F016         	call	___awmod	;wreg free
  6302  0016A2  90D8               	bcf	status,0,c
  6303  0016A4  360F               	rlcf	?___awmod,f,c
  6304  0016A6  3610               	rlcf	?___awmod+1,f,c
  6305  0016A8  90D8               	bcf	status,0,c
  6306  0016AA  360F               	rlcf	?___awmod,f,c
  6307  0016AC  3610               	rlcf	?___awmod+1,f,c
  6308  0016AE  0E27               	movlw	low __powers_
  6309  0016B0  240F               	addwf	?___awmod,w,c
  6310  0016B2  6EF6               	movwf	tblptrl,c
  6311  0016B4  0EFF               	movlw	high __powers_
  6312  0016B6  2010               	addwfc	?___awmod+1,w,c
  6313  0016B8  6EF7               	movwf	tblptrh,c
  6314  0016BA                     	if	0	;There are less than 3 active tblptr bytes
  6315  0016BA                     	endif
  6316  0016BA  0009               	tblrd		*+
  6317  0016BC  CFF5 F021          	movff	tablat,___flmul@a
  6318  0016C0  0009               	tblrd		*+
  6319  0016C2  CFF5 F022          	movff	tablat,___flmul@a+1
  6320  0016C6  0009               	tblrd		*+
  6321  0016C8  CFF5 F023          	movff	tablat,___flmul@a+2
  6322  0016CC  000A               	tblrd		*-
  6323  0016CE  CFF5 F024          	movff	tablat,___flmul@a+3
  6324  0016D2  ECDB  F00B         	call	___flmul	;wreg free
  6325  0016D6  C01D  F036         	movff	?___flmul,?_scale
  6326  0016DA  C01E  F037         	movff	?___flmul+1,?_scale+1
  6327  0016DE  C01F  F038         	movff	?___flmul+2,?_scale+2
  6328  0016E2  C020  F039         	movff	?___flmul+3,?_scale+3
  6329  0016E6  0012               	return	
  6330  0016E8                     l3566:
  6331                           
  6332                           ;doprnt.c: 438: else if(scl > 10)
  6333  0016E8  503E               	movf	scale@scl,w,c
  6334  0016EA  0A80               	xorlw	128
  6335  0016EC  0F75               	addlw	-139
  6336  0016EE  A0D8               	btfss	status,0,c
  6337  0016F0  D04D               	goto	l3572
  6338                           
  6339                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6340  0016F2  0E00               	movlw	0
  6341  0016F4  6E18               	movwf	___awdiv@divisor+1,c
  6342  0016F6  0E0A               	movlw	10
  6343  0016F8  6E17               	movwf	___awdiv@divisor,c
  6344  0016FA  503E               	movf	scale@scl,w,c
  6345  0016FC  6E15               	movwf	___awdiv@dividend,c
  6346  0016FE  6A16               	clrf	___awdiv@dividend+1,c
  6347  001700  BE15               	btfsc	___awdiv@dividend,7,c
  6348  001702  0616               	decf	___awdiv@dividend+1,f,c
  6349  001704  EC34  F016         	call	___awdiv	;wreg free
  6350  001708  90D8               	bcf	status,0,c
  6351  00170A  3615               	rlcf	?___awdiv,f,c
  6352  00170C  3616               	rlcf	?___awdiv+1,f,c
  6353  00170E  90D8               	bcf	status,0,c
  6354  001710  3615               	rlcf	?___awdiv,f,c
  6355  001712  3616               	rlcf	?___awdiv+1,f,c
  6356  001714  0E24               	movlw	36
  6357  001716  2615               	addwf	?___awdiv,f,c
  6358  001718  0E00               	movlw	0
  6359  00171A  2216               	addwfc	?___awdiv+1,f,c
  6360  00171C  0E27               	movlw	low __powers_
  6361  00171E  2415               	addwf	?___awdiv,w,c
  6362  001720  6EF6               	movwf	tblptrl,c
  6363  001722  0EFF               	movlw	high __powers_
  6364  001724  2016               	addwfc	?___awdiv+1,w,c
  6365  001726  6EF7               	movwf	tblptrh,c
  6366  001728                     	if	0	;There are less than 3 active tblptr bytes
  6367  001728                     	endif
  6368  001728  0009               	tblrd		*+
  6369  00172A  CFF5 F01D          	movff	tablat,___flmul@b
  6370  00172E  0009               	tblrd		*+
  6371  001730  CFF5 F01E          	movff	tablat,___flmul@b+1
  6372  001734  0009               	tblrd		*+
  6373  001736  CFF5 F01F          	movff	tablat,___flmul@b+2
  6374  00173A  000A               	tblrd		*-
  6375  00173C  CFF5 F020          	movff	tablat,___flmul@b+3
  6376  001740  0E00               	movlw	0
  6377  001742  6E12               	movwf	___awmod@divisor+1,c
  6378  001744  0E0A               	movlw	10
  6379  001746  6E11               	movwf	___awmod@divisor,c
  6380  001748  503E               	movf	scale@scl,w,c
  6381  00174A  6E0F               	movwf	___awmod@dividend,c
  6382  00174C  6A10               	clrf	___awmod@dividend+1,c
  6383  00174E  BE0F               	btfsc	___awmod@dividend,7,c
  6384  001750  0610               	decf	___awmod@dividend+1,f,c
  6385  001752  ECF8  F016         	call	___awmod	;wreg free
  6386  001756  90D8               	bcf	status,0,c
  6387  001758  360F               	rlcf	?___awmod,f,c
  6388  00175A  3610               	rlcf	?___awmod+1,f,c
  6389  00175C  90D8               	bcf	status,0,c
  6390  00175E  360F               	rlcf	?___awmod,f,c
  6391  001760  3610               	rlcf	?___awmod+1,f,c
  6392  001762  0E27               	movlw	low __powers_
  6393  001764  240F               	addwf	?___awmod,w,c
  6394  001766  6EF6               	movwf	tblptrl,c
  6395  001768  0EFF               	movlw	high __powers_
  6396  00176A  2010               	addwfc	?___awmod+1,w,c
  6397  00176C  6EF7               	movwf	tblptrh,c
  6398  00176E                     	if	0	;There are less than 3 active tblptr bytes
  6399  00176E                     	endif
  6400  00176E  0009               	tblrd		*+
  6401  001770  CFF5 F021          	movff	tablat,___flmul@a
  6402  001774  0009               	tblrd		*+
  6403  001776  CFF5 F022          	movff	tablat,___flmul@a+1
  6404  00177A  0009               	tblrd		*+
  6405  00177C  CFF5 F023          	movff	tablat,___flmul@a+2
  6406  001780  000A               	tblrd		*-
  6407  001782  CFF5 F024          	movff	tablat,___flmul@a+3
  6408  001786  ECDB  F00B         	call	___flmul	;wreg free
  6409  00178A  D7A5               	goto	L8
  6410  00178C                     l3572:
  6411                           
  6412                           ;doprnt.c: 440: return _powers_[scl];
  6413  00178C  503E               	movf	scale@scl,w,c
  6414  00178E  0D04               	mullw	4
  6415  001790  0E27               	movlw	low __powers_
  6416  001792  24F3               	addwf	prodl,w,c
  6417  001794  6EF6               	movwf	tblptrl,c
  6418  001796  0EFF               	movlw	high __powers_
  6419  001798  20F4               	addwfc	prodh,w,c
  6420  00179A  6EF7               	movwf	tblptrh,c
  6421  00179C                     	if	0	;There are less than 3 active tblptr bytes
  6422  00179C                     	endif
  6423  00179C  0009               	tblrd		*+
  6424  00179E  CFF5 F036          	movff	tablat,?_scale
  6425  0017A2  0009               	tblrd		*+
  6426  0017A4  CFF5 F037          	movff	tablat,?_scale+1
  6427  0017A8  0009               	tblrd		*+
  6428  0017AA  CFF5 F038          	movff	tablat,?_scale+2
  6429  0017AE  000A               	tblrd		*-
  6430  0017B0  CFF5 F039          	movff	tablat,?_scale+3
  6431  0017B4  0012               	return	
  6432  0017B6                     __end_of_scale:
  6433                           	opt stack 0
  6434                           tblptru	equ	0xFF8
  6435                           tblptrh	equ	0xFF7
  6436                           tblptrl	equ	0xFF6
  6437                           tablat	equ	0xFF5
  6438                           prodh	equ	0xFF4
  6439                           prodl	equ	0xFF3
  6440                           intcon	equ	0xFF2
  6441                           intcon2	equ	0xFF1
  6442                           intcon3	equ	0xFF0
  6443                           postinc0	equ	0xFEE
  6444                           wreg	equ	0xFE8
  6445                           postdec1	equ	0xFE5
  6446                           fsr1l	equ	0xFE1
  6447                           indf2	equ	0xFDF
  6448                           postinc2	equ	0xFDE
  6449                           postdec2	equ	0xFDD
  6450                           fsr2h	equ	0xFDA
  6451                           fsr2l	equ	0xFD9
  6452                           status	equ	0xFD8
  6453                           
  6454 ;; *************** function _isdigit *****************
  6455 ;; Defined at:
  6456 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  c               1    wreg     unsigned char 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  c               1   16[COMRAM] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;		None               void
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;Total ram usage:        3 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    3
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_sprintf
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text10
  6485  003214                     __ptext10:
  6486                           	opt stack 0
  6487  003214                     _isdigit:
  6488                           	opt stack 25
  6489                           
  6490                           ;incstack = 0
  6491                           ;isdigit@c stored from wreg
  6492  003214  6E11               	movwf	isdigit@c,c
  6493  003216  0E00               	movlw	0
  6494  003218  6E10               	movwf	_isdigit$1314,c
  6495  00321A  0E3A               	movlw	58
  6496  00321C  6011               	cpfslt	isdigit@c,c
  6497  00321E  D005               	goto	l3584
  6498  003220  0E2F               	movlw	47
  6499  003222  6411               	cpfsgt	isdigit@c,c
  6500  003224  D002               	goto	l3584
  6501  003226  0E01               	movlw	1
  6502  003228  6E10               	movwf	_isdigit$1314,c
  6503  00322A                     l3584:
  6504  00322A  C010  F00F         	movff	_isdigit$1314,??_isdigit
  6505  00322E  300F               	rrcf	??_isdigit,w,c
  6506  003230  0012               	return	
  6507  003232                     __end_of_isdigit:
  6508                           	opt stack 0
  6509                           tblptru	equ	0xFF8
  6510                           tblptrh	equ	0xFF7
  6511                           tblptrl	equ	0xFF6
  6512                           tablat	equ	0xFF5
  6513                           prodh	equ	0xFF4
  6514                           prodl	equ	0xFF3
  6515                           intcon	equ	0xFF2
  6516                           intcon2	equ	0xFF1
  6517                           intcon3	equ	0xFF0
  6518                           postinc0	equ	0xFEE
  6519                           wreg	equ	0xFE8
  6520                           postdec1	equ	0xFE5
  6521                           fsr1l	equ	0xFE1
  6522                           indf2	equ	0xFDF
  6523                           postinc2	equ	0xFDE
  6524                           postdec2	equ	0xFDD
  6525                           fsr2h	equ	0xFDA
  6526                           fsr2l	equ	0xFD9
  6527                           status	equ	0xFD8
  6528                           
  6529 ;; *************** function _fround *****************
  6530 ;; Defined at:
  6531 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  prec            1    wreg     unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  prec            1   65[COMRAM] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  4   53[COMRAM] unsigned char 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;Total ram usage:       13 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    4
  6552 ;; This function calls:
  6553 ;;		___awdiv
  6554 ;;		___awmod
  6555 ;;		___flmul
  6556 ;; This function is called by:
  6557 ;;		_sprintf
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text11
  6562  0023C2                     __ptext11:
  6563                           	opt stack 0
  6564  0023C2                     _fround:
  6565                           	opt stack 24
  6566                           
  6567                           ;incstack = 0
  6568                           ;fround@prec stored from wreg
  6569  0023C2  6E42               	movwf	fround@prec,c
  6570                           
  6571                           ;doprnt.c: 413: if(prec>=110)
  6572  0023C4  0E6D               	movlw	109
  6573  0023C6  6442               	cpfsgt	fround@prec,c
  6574  0023C8  D0AC               	goto	l3526
  6575                           
  6576                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6577  0023CA  0E00               	movlw	0
  6578  0023CC  6E18               	movwf	___awdiv@divisor+1,c
  6579  0023CE  0E0A               	movlw	10
  6580  0023D0  6E17               	movwf	___awdiv@divisor,c
  6581  0023D2  0E00               	movlw	0
  6582  0023D4  6E12               	movwf	___awmod@divisor+1,c
  6583  0023D6  0E64               	movlw	100
  6584  0023D8  6E11               	movwf	___awmod@divisor,c
  6585  0023DA  C042  F00F         	movff	fround@prec,___awmod@dividend
  6586  0023DE  6A10               	clrf	___awmod@dividend+1,c
  6587  0023E0  ECF8  F016         	call	___awmod	;wreg free
  6588  0023E4  C00F  F015         	movff	?___awmod,___awdiv@dividend
  6589  0023E8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  6590  0023EC  EC34  F016         	call	___awdiv	;wreg free
  6591  0023F0  90D8               	bcf	status,0,c
  6592  0023F2  3615               	rlcf	?___awdiv,f,c
  6593  0023F4  3616               	rlcf	?___awdiv+1,f,c
  6594  0023F6  90D8               	bcf	status,0,c
  6595  0023F8  3615               	rlcf	?___awdiv,f,c
  6596  0023FA  3616               	rlcf	?___awdiv+1,f,c
  6597  0023FC  0E24               	movlw	36
  6598  0023FE  2615               	addwf	?___awdiv,f,c
  6599  002400  0E00               	movlw	0
  6600  002402  2216               	addwfc	?___awdiv+1,f,c
  6601  002404  0EF3               	movlw	low __npowers_
  6602  002406  2415               	addwf	?___awdiv,w,c
  6603  002408  6EF6               	movwf	tblptrl,c
  6604  00240A  0EFE               	movlw	high __npowers_
  6605  00240C  2016               	addwfc	?___awdiv+1,w,c
  6606  00240E  6EF7               	movwf	tblptrh,c
  6607  002410                     	if	0	;There are less than 3 active tblptr bytes
  6608  002410                     	endif
  6609  002410  0009               	tblrd		*+
  6610  002412  CFF5 F021          	movff	tablat,___flmul@a
  6611  002416  0009               	tblrd		*+
  6612  002418  CFF5 F022          	movff	tablat,___flmul@a+1
  6613  00241C  0009               	tblrd		*+
  6614  00241E  CFF5 F023          	movff	tablat,___flmul@a+2
  6615  002422  000A               	tblrd		*-
  6616  002424  CFF5 F024          	movff	tablat,___flmul@a+3
  6617  002428  0E00               	movlw	0
  6618  00242A  6E18               	movwf	___awdiv@divisor+1,c
  6619  00242C  0E64               	movlw	100
  6620  00242E  6E17               	movwf	___awdiv@divisor,c
  6621  002430  C042  F015         	movff	fround@prec,___awdiv@dividend
  6622  002434  6A16               	clrf	___awdiv@dividend+1,c
  6623  002436  EC34  F016         	call	___awdiv	;wreg free
  6624  00243A  90D8               	bcf	status,0,c
  6625  00243C  3615               	rlcf	?___awdiv,f,c
  6626  00243E  3616               	rlcf	?___awdiv+1,f,c
  6627  002440  90D8               	bcf	status,0,c
  6628  002442  3615               	rlcf	?___awdiv,f,c
  6629  002444  3616               	rlcf	?___awdiv+1,f,c
  6630  002446  0E48               	movlw	72
  6631  002448  2615               	addwf	?___awdiv,f,c
  6632  00244A  0E00               	movlw	0
  6633  00244C  2216               	addwfc	?___awdiv+1,f,c
  6634  00244E  0EF3               	movlw	low __npowers_
  6635  002450  2415               	addwf	?___awdiv,w,c
  6636  002452  6EF6               	movwf	tblptrl,c
  6637  002454  0EFE               	movlw	high __npowers_
  6638  002456  2016               	addwfc	?___awdiv+1,w,c
  6639  002458  6EF7               	movwf	tblptrh,c
  6640  00245A                     	if	0	;There are less than 3 active tblptr bytes
  6641  00245A                     	endif
  6642  00245A  0009               	tblrd		*+
  6643  00245C  CFF5 F01D          	movff	tablat,___flmul@b
  6644  002460  0009               	tblrd		*+
  6645  002462  CFF5 F01E          	movff	tablat,___flmul@b+1
  6646  002466  0009               	tblrd		*+
  6647  002468  CFF5 F01F          	movff	tablat,___flmul@b+2
  6648  00246C  000A               	tblrd		*-
  6649  00246E  CFF5 F020          	movff	tablat,___flmul@b+3
  6650  002472  ECDB  F00B         	call	___flmul	;wreg free
  6651  002476  C01D  F03E         	movff	?___flmul,_fround$1685
  6652  00247A  C01E  F03F         	movff	?___flmul+1,_fround$1685+1
  6653  00247E  C01F  F040         	movff	?___flmul+2,_fround$1685+2
  6654  002482  C020  F041         	movff	?___flmul+3,_fround$1685+3
  6655                           
  6656                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6657  002486  0E00               	movlw	0
  6658  002488  6E12               	movwf	___awmod@divisor+1,c
  6659  00248A  0E0A               	movlw	10
  6660  00248C  6E11               	movwf	___awmod@divisor,c
  6661  00248E  C042  F00F         	movff	fround@prec,___awmod@dividend
  6662  002492  6A10               	clrf	___awmod@dividend+1,c
  6663  002494  ECF8  F016         	call	___awmod	;wreg free
  6664  002498  90D8               	bcf	status,0,c
  6665  00249A  360F               	rlcf	?___awmod,f,c
  6666  00249C  3610               	rlcf	?___awmod+1,f,c
  6667  00249E  90D8               	bcf	status,0,c
  6668  0024A0  360F               	rlcf	?___awmod,f,c
  6669  0024A2  3610               	rlcf	?___awmod+1,f,c
  6670  0024A4  0EF3               	movlw	low __npowers_
  6671  0024A6  240F               	addwf	?___awmod,w,c
  6672  0024A8  6EF6               	movwf	tblptrl,c
  6673  0024AA  0EFE               	movlw	high __npowers_
  6674  0024AC  2010               	addwfc	?___awmod+1,w,c
  6675  0024AE  6EF7               	movwf	tblptrh,c
  6676  0024B0                     	if	0	;There are less than 3 active tblptr bytes
  6677  0024B0                     	endif
  6678  0024B0  0009               	tblrd		*+
  6679  0024B2  CFF5 F021          	movff	tablat,___flmul@a
  6680  0024B6  0009               	tblrd		*+
  6681  0024B8  CFF5 F022          	movff	tablat,___flmul@a+1
  6682  0024BC  0009               	tblrd		*+
  6683  0024BE  CFF5 F023          	movff	tablat,___flmul@a+2
  6684  0024C2  000A               	tblrd		*-
  6685  0024C4  CFF5 F024          	movff	tablat,___flmul@a+3
  6686  0024C8  C03E  F01D         	movff	_fround$1685,___flmul@b
  6687  0024CC  C03F  F01E         	movff	_fround$1685+1,___flmul@b+1
  6688  0024D0  C040  F01F         	movff	_fround$1685+2,___flmul@b+2
  6689  0024D4  C041  F020         	movff	_fround$1685+3,___flmul@b+3
  6690  0024D8  ECDB  F00B         	call	___flmul	;wreg free
  6691  0024DC  C01D  F03A         	movff	?___flmul,_fround$1686
  6692  0024E0  C01E  F03B         	movff	?___flmul+1,_fround$1686+1
  6693  0024E4  C01F  F03C         	movff	?___flmul+2,_fround$1686+2
  6694  0024E8  C020  F03D         	movff	?___flmul+3,_fround$1686+3
  6695                           
  6696                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6697  0024EC  C03A  F01D         	movff	_fround$1686,___flmul@b
  6698  0024F0  C03B  F01E         	movff	_fround$1686+1,___flmul@b+1
  6699  0024F4  C03C  F01F         	movff	_fround$1686+2,___flmul@b+2
  6700  0024F8  C03D  F020         	movff	_fround$1686+3,___flmul@b+3
  6701  0024FC  0E00               	movlw	0
  6702  0024FE  6E21               	movwf	___flmul@a,c
  6703  002500  0E00               	movlw	0
  6704  002502  6E22               	movwf	___flmul@a+1,c
  6705  002504  0E00               	movlw	0
  6706  002506  6E23               	movwf	___flmul@a+2,c
  6707  002508  0E3F               	movlw	63
  6708  00250A  6E24               	movwf	___flmul@a+3,c
  6709  00250C  ECDB  F00B         	call	___flmul	;wreg free
  6710  002510  C01D  F036         	movff	?___flmul,?_fround
  6711  002514  C01E  F037         	movff	?___flmul+1,?_fround+1
  6712  002518  C01F  F038         	movff	?___flmul+2,?_fround+2
  6713  00251C  C020  F039         	movff	?___flmul+3,?_fround+3
  6714  002520  0012               	return	
  6715  002522                     l3526:
  6716                           
  6717                           ;doprnt.c: 415: else if(prec > 10)
  6718  002522  0E0A               	movlw	10
  6719  002524  6442               	cpfsgt	fround@prec,c
  6720  002526  D063               	goto	l3534
  6721                           
  6722                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6723  002528  0E00               	movlw	0
  6724  00252A  6E12               	movwf	___awmod@divisor+1,c
  6725  00252C  0E0A               	movlw	10
  6726  00252E  6E11               	movwf	___awmod@divisor,c
  6727  002530  C042  F00F         	movff	fround@prec,___awmod@dividend
  6728  002534  6A10               	clrf	___awmod@dividend+1,c
  6729  002536  ECF8  F016         	call	___awmod	;wreg free
  6730  00253A  90D8               	bcf	status,0,c
  6731  00253C  360F               	rlcf	?___awmod,f,c
  6732  00253E  3610               	rlcf	?___awmod+1,f,c
  6733  002540  90D8               	bcf	status,0,c
  6734  002542  360F               	rlcf	?___awmod,f,c
  6735  002544  3610               	rlcf	?___awmod+1,f,c
  6736  002546  0EF3               	movlw	low __npowers_
  6737  002548  240F               	addwf	?___awmod,w,c
  6738  00254A  6EF6               	movwf	tblptrl,c
  6739  00254C  0EFE               	movlw	high __npowers_
  6740  00254E  2010               	addwfc	?___awmod+1,w,c
  6741  002550  6EF7               	movwf	tblptrh,c
  6742  002552                     	if	0	;There are less than 3 active tblptr bytes
  6743  002552                     	endif
  6744  002552  0009               	tblrd		*+
  6745  002554  CFF5 F021          	movff	tablat,___flmul@a
  6746  002558  0009               	tblrd		*+
  6747  00255A  CFF5 F022          	movff	tablat,___flmul@a+1
  6748  00255E  0009               	tblrd		*+
  6749  002560  CFF5 F023          	movff	tablat,___flmul@a+2
  6750  002564  000A               	tblrd		*-
  6751  002566  CFF5 F024          	movff	tablat,___flmul@a+3
  6752  00256A  0E00               	movlw	0
  6753  00256C  6E18               	movwf	___awdiv@divisor+1,c
  6754  00256E  0E0A               	movlw	10
  6755  002570  6E17               	movwf	___awdiv@divisor,c
  6756  002572  C042  F015         	movff	fround@prec,___awdiv@dividend
  6757  002576  6A16               	clrf	___awdiv@dividend+1,c
  6758  002578  EC34  F016         	call	___awdiv	;wreg free
  6759  00257C  90D8               	bcf	status,0,c
  6760  00257E  3615               	rlcf	?___awdiv,f,c
  6761  002580  3616               	rlcf	?___awdiv+1,f,c
  6762  002582  90D8               	bcf	status,0,c
  6763  002584  3615               	rlcf	?___awdiv,f,c
  6764  002586  3616               	rlcf	?___awdiv+1,f,c
  6765  002588  0E24               	movlw	36
  6766  00258A  2615               	addwf	?___awdiv,f,c
  6767  00258C  0E00               	movlw	0
  6768  00258E  2216               	addwfc	?___awdiv+1,f,c
  6769  002590  0EF3               	movlw	low __npowers_
  6770  002592  2415               	addwf	?___awdiv,w,c
  6771  002594  6EF6               	movwf	tblptrl,c
  6772  002596  0EFE               	movlw	high __npowers_
  6773  002598  2016               	addwfc	?___awdiv+1,w,c
  6774  00259A  6EF7               	movwf	tblptrh,c
  6775  00259C                     	if	0	;There are less than 3 active tblptr bytes
  6776  00259C                     	endif
  6777  00259C  0009               	tblrd		*+
  6778  00259E  CFF5 F01D          	movff	tablat,___flmul@b
  6779  0025A2  0009               	tblrd		*+
  6780  0025A4  CFF5 F01E          	movff	tablat,___flmul@b+1
  6781  0025A8  0009               	tblrd		*+
  6782  0025AA  CFF5 F01F          	movff	tablat,___flmul@b+2
  6783  0025AE  000A               	tblrd		*-
  6784  0025B0  CFF5 F020          	movff	tablat,___flmul@b+3
  6785  0025B4  ECDB  F00B         	call	___flmul	;wreg free
  6786  0025B8  C01D  F03E         	movff	?___flmul,_fround$1685
  6787  0025BC  C01E  F03F         	movff	?___flmul+1,_fround$1685+1
  6788  0025C0  C01F  F040         	movff	?___flmul+2,_fround$1685+2
  6789  0025C4  C020  F041         	movff	?___flmul+3,_fround$1685+3
  6790                           
  6791                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6792  0025C8  C03E  F01D         	movff	_fround$1685,___flmul@b
  6793  0025CC  C03F  F01E         	movff	_fround$1685+1,___flmul@b+1
  6794  0025D0  C040  F01F         	movff	_fround$1685+2,___flmul@b+2
  6795  0025D4  C041  F020         	movff	_fround$1685+3,___flmul@b+3
  6796  0025D8  0E00               	movlw	0
  6797  0025DA  6E21               	movwf	___flmul@a,c
  6798  0025DC  0E00               	movlw	0
  6799  0025DE  6E22               	movwf	___flmul@a+1,c
  6800  0025E0  0E00               	movlw	0
  6801  0025E2  6E23               	movwf	___flmul@a+2,c
  6802  0025E4  0E3F               	movlw	63
  6803  0025E6  6E24               	movwf	___flmul@a+3,c
  6804  0025E8  ECDB  F00B         	call	___flmul	;wreg free
  6805  0025EC  D791               	goto	L9
  6806  0025EE                     l3534:
  6807                           
  6808                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6809  0025EE  5042               	movf	fround@prec,w,c
  6810  0025F0  0D04               	mullw	4
  6811  0025F2  0EF3               	movlw	low __npowers_
  6812  0025F4  24F3               	addwf	prodl,w,c
  6813  0025F6  6EF6               	movwf	tblptrl,c
  6814  0025F8  0EFE               	movlw	high __npowers_
  6815  0025FA  20F4               	addwfc	prodh,w,c
  6816  0025FC  6EF7               	movwf	tblptrh,c
  6817  0025FE                     	if	0	;There are less than 3 active tblptr bytes
  6818  0025FE                     	endif
  6819  0025FE  0009               	tblrd		*+
  6820  002600  CFF5 F01D          	movff	tablat,___flmul@b
  6821  002604  0009               	tblrd		*+
  6822  002606  CFF5 F01E          	movff	tablat,___flmul@b+1
  6823  00260A  0009               	tblrd		*+
  6824  00260C  CFF5 F01F          	movff	tablat,___flmul@b+2
  6825  002610  000A               	tblrd		*-
  6826  002612  CFF5 F020          	movff	tablat,___flmul@b+3
  6827  002616  0E00               	movlw	0
  6828  002618  6E21               	movwf	___flmul@a,c
  6829  00261A  0E00               	movlw	0
  6830  00261C  6E22               	movwf	___flmul@a+1,c
  6831  00261E  0E00               	movlw	0
  6832  002620  6E23               	movwf	___flmul@a+2,c
  6833  002622  0E3F               	movlw	63
  6834  002624  6E24               	movwf	___flmul@a+3,c
  6835  002626  ECDB  F00B         	call	___flmul	;wreg free
  6836  00262A  C01D  F036         	movff	?___flmul,?_fround
  6837  00262E  C01E  F037         	movff	?___flmul+1,?_fround+1
  6838  002632  C01F  F038         	movff	?___flmul+2,?_fround+2
  6839  002636  C020  F039         	movff	?___flmul+3,?_fround+3
  6840  00263A  0012               	return	
  6841  00263C                     __end_of_fround:
  6842                           	opt stack 0
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           intcon2	equ	0xFF1
  6851                           intcon3	equ	0xFF0
  6852                           postinc0	equ	0xFEE
  6853                           wreg	equ	0xFE8
  6854                           postdec1	equ	0xFE5
  6855                           fsr1l	equ	0xFE1
  6856                           indf2	equ	0xFDF
  6857                           postinc2	equ	0xFDE
  6858                           postdec2	equ	0xFDD
  6859                           fsr2h	equ	0xFDA
  6860                           fsr2l	equ	0xFD9
  6861                           status	equ	0xFD8
  6862                           
  6863 ;; *************** function ___flmul *****************
  6864 ;; Defined at:
  6865 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  b               4   28[COMRAM] unsigned char 
  6868 ;;  a               4   32[COMRAM] unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  prod            4   47[COMRAM] struct .
  6871 ;;  grs             4   41[COMRAM] unsigned long 
  6872 ;;  temp            2   51[COMRAM] struct .
  6873 ;;  bexp            1   46[COMRAM] unsigned char 
  6874 ;;  aexp            1   45[COMRAM] unsigned char 
  6875 ;;  sign            1   40[COMRAM] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  4   28[COMRAM] unsigned char 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0, prodl, prodh
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6885 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;Total ram usage:       25 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    3
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_main
  6896 ;;		_fround
  6897 ;;		_scale
  6898 ;;		_sprintf
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text12
  6903  0017B6                     __ptext12:
  6904                           	opt stack 0
  6905  0017B6                     ___flmul:
  6906                           	opt stack 24
  6907                           
  6908                           ;incstack = 0
  6909  0017B6  5020               	movf	___flmul@b+3,w,c
  6910  0017B8  0B80               	andlw	128
  6911  0017BA  6E29               	movwf	___flmul@sign,c
  6912  0017BC  5020               	movf	___flmul@b+3,w,c
  6913  0017BE  2420               	addwf	___flmul@b+3,w,c
  6914  0017C0  6E2F               	movwf	___flmul@bexp,c
  6915  0017C2  BE1F               	btfsc	___flmul@b+2,7,c
  6916  0017C4  802F               	bsf	___flmul@bexp,0,c
  6917  0017C6  502F               	movf	___flmul@bexp,w,c
  6918  0017C8  B4D8               	btfsc	status,2,c
  6919  0017CA  D00D               	goto	l3306
  6920  0017CC  282F               	incf	___flmul@bexp,w,c
  6921  0017CE  A4D8               	btfss	status,2,c
  6922  0017D0  D008               	goto	l3304
  6923  0017D2  0E00               	movlw	0
  6924  0017D4  6E1D               	movwf	___flmul@b,c
  6925  0017D6  0E00               	movlw	0
  6926  0017D8  6E1E               	movwf	___flmul@b+1,c
  6927  0017DA  0E00               	movlw	0
  6928  0017DC  6E1F               	movwf	___flmul@b+2,c
  6929  0017DE  0E00               	movlw	0
  6930  0017E0  6E20               	movwf	___flmul@b+3,c
  6931  0017E2                     l3304:
  6932  0017E2  8E1F               	bsf	___flmul@b+2,7,c
  6933  0017E4  D008               	goto	l3308
  6934  0017E6                     l3306:
  6935  0017E6  0E00               	movlw	0
  6936  0017E8  6E1D               	movwf	___flmul@b,c
  6937  0017EA  0E00               	movlw	0
  6938  0017EC  6E1E               	movwf	___flmul@b+1,c
  6939  0017EE  0E00               	movlw	0
  6940  0017F0  6E1F               	movwf	___flmul@b+2,c
  6941  0017F2  0E00               	movlw	0
  6942  0017F4  6E20               	movwf	___flmul@b+3,c
  6943  0017F6                     l3308:
  6944  0017F6  5024               	movf	___flmul@a+3,w,c
  6945  0017F8  0B80               	andlw	128
  6946  0017FA  1A29               	xorwf	___flmul@sign,f,c
  6947  0017FC  5024               	movf	___flmul@a+3,w,c
  6948  0017FE  2424               	addwf	___flmul@a+3,w,c
  6949  001800  6E2E               	movwf	___flmul@aexp,c
  6950  001802  BE23               	btfsc	___flmul@a+2,7,c
  6951  001804  802E               	bsf	___flmul@aexp,0,c
  6952  001806  502E               	movf	___flmul@aexp,w,c
  6953  001808  B4D8               	btfsc	status,2,c
  6954  00180A  D00D               	goto	l3324
  6955  00180C  282E               	incf	___flmul@aexp,w,c
  6956  00180E  A4D8               	btfss	status,2,c
  6957  001810  D008               	goto	l3322
  6958  001812  0E00               	movlw	0
  6959  001814  6E21               	movwf	___flmul@a,c
  6960  001816  0E00               	movlw	0
  6961  001818  6E22               	movwf	___flmul@a+1,c
  6962  00181A  0E00               	movlw	0
  6963  00181C  6E23               	movwf	___flmul@a+2,c
  6964  00181E  0E00               	movlw	0
  6965  001820  6E24               	movwf	___flmul@a+3,c
  6966  001822                     l3322:
  6967  001822  8E23               	bsf	___flmul@a+2,7,c
  6968  001824  D008               	goto	l1066
  6969  001826                     l3324:
  6970  001826  0E00               	movlw	0
  6971  001828  6E21               	movwf	___flmul@a,c
  6972  00182A  0E00               	movlw	0
  6973  00182C  6E22               	movwf	___flmul@a+1,c
  6974  00182E  0E00               	movlw	0
  6975  001830  6E23               	movwf	___flmul@a+2,c
  6976  001832  0E00               	movlw	0
  6977  001834  6E24               	movwf	___flmul@a+3,c
  6978  001836                     l1066:
  6979  001836  502E               	movf	___flmul@aexp,w,c
  6980  001838  B4D8               	btfsc	status,2,c
  6981  00183A  D003               	goto	l3328
  6982  00183C  502F               	movf	___flmul@bexp,w,c
  6983  00183E  A4D8               	btfss	status,2,c
  6984  001840  D009               	goto	l3332
  6985  001842                     l3328:
  6986  001842  0E00               	movlw	0
  6987  001844  6E1D               	movwf	?___flmul,c
  6988  001846  0E00               	movlw	0
  6989  001848  6E1E               	movwf	?___flmul+1,c
  6990  00184A  0E00               	movlw	0
  6991  00184C  6E1F               	movwf	?___flmul+2,c
  6992  00184E  0E00               	movlw	0
  6993  001850  6E20               	movwf	?___flmul+3,c
  6994  001852  0012               	return	
  6995  001854                     l3332:
  6996  001854  5023               	movf	___flmul@a+2,w,c
  6997  001856  021D               	mulwf	___flmul@b,c
  6998  001858  CFF3 F034          	movff	prodl,___flmul@temp
  6999  00185C  CFF4 F035          	movff	prodh,___flmul@temp+1
  7000  001860  5034               	movf	___flmul@temp,w,c
  7001  001862  6E2A               	movwf	___flmul@grs,c
  7002  001864  6A2B               	clrf	___flmul@grs+1,c
  7003  001866  6A2C               	clrf	___flmul@grs+2,c
  7004  001868  6A2D               	clrf	___flmul@grs+3,c
  7005  00186A  5035               	movf	___flmul@temp+1,w,c
  7006  00186C  6E30               	movwf	___flmul@prod,c
  7007  00186E  6A31               	clrf	___flmul@prod+1,c
  7008  001870  6A32               	clrf	___flmul@prod+2,c
  7009  001872  6A33               	clrf	___flmul@prod+3,c
  7010  001874  5022               	movf	___flmul@a+1,w,c
  7011  001876  021E               	mulwf	___flmul@b+1,c
  7012  001878  CFF3 F034          	movff	prodl,___flmul@temp
  7013  00187C  CFF4 F035          	movff	prodh,___flmul@temp+1
  7014  001880  5034               	movf	___flmul@temp,w,c
  7015  001882  262A               	addwf	___flmul@grs,f,c
  7016  001884  0E00               	movlw	0
  7017  001886  222B               	addwfc	___flmul@grs+1,f,c
  7018  001888  222C               	addwfc	___flmul@grs+2,f,c
  7019  00188A  222D               	addwfc	___flmul@grs+3,f,c
  7020  00188C  5035               	movf	___flmul@temp+1,w,c
  7021  00188E  2630               	addwf	___flmul@prod,f,c
  7022  001890  0E00               	movlw	0
  7023  001892  2231               	addwfc	___flmul@prod+1,f,c
  7024  001894  2232               	addwfc	___flmul@prod+2,f,c
  7025  001896  2233               	addwfc	___flmul@prod+3,f,c
  7026  001898  5021               	movf	___flmul@a,w,c
  7027  00189A  021F               	mulwf	___flmul@b+2,c
  7028  00189C  CFF3 F034          	movff	prodl,___flmul@temp
  7029  0018A0  CFF4 F035          	movff	prodh,___flmul@temp+1
  7030  0018A4  5034               	movf	___flmul@temp,w,c
  7031  0018A6  262A               	addwf	___flmul@grs,f,c
  7032  0018A8  0E00               	movlw	0
  7033  0018AA  222B               	addwfc	___flmul@grs+1,f,c
  7034  0018AC  222C               	addwfc	___flmul@grs+2,f,c
  7035  0018AE  222D               	addwfc	___flmul@grs+3,f,c
  7036  0018B0  5035               	movf	___flmul@temp+1,w,c
  7037  0018B2  2630               	addwf	___flmul@prod,f,c
  7038  0018B4  0E00               	movlw	0
  7039  0018B6  2231               	addwfc	___flmul@prod+1,f,c
  7040  0018B8  2232               	addwfc	___flmul@prod+2,f,c
  7041  0018BA  2233               	addwfc	___flmul@prod+3,f,c
  7042  0018BC  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  7043  0018C0  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  7044  0018C4  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  7045  0018C8  6A2A               	clrf	___flmul@grs,c
  7046  0018CA  5021               	movf	___flmul@a,w,c
  7047  0018CC  021E               	mulwf	___flmul@b+1,c
  7048  0018CE  CFF3 F034          	movff	prodl,___flmul@temp
  7049  0018D2  CFF4 F035          	movff	prodh,___flmul@temp+1
  7050  0018D6  5034               	movf	___flmul@temp,w,c
  7051  0018D8  262A               	addwf	___flmul@grs,f,c
  7052  0018DA  5035               	movf	___flmul@temp+1,w,c
  7053  0018DC  222B               	addwfc	___flmul@grs+1,f,c
  7054  0018DE  0E00               	movlw	0
  7055  0018E0  222C               	addwfc	___flmul@grs+2,f,c
  7056  0018E2  0E00               	movlw	0
  7057  0018E4  222D               	addwfc	___flmul@grs+3,f,c
  7058  0018E6  5022               	movf	___flmul@a+1,w,c
  7059  0018E8  021D               	mulwf	___flmul@b,c
  7060  0018EA  CFF3 F034          	movff	prodl,___flmul@temp
  7061  0018EE  CFF4 F035          	movff	prodh,___flmul@temp+1
  7062  0018F2  5034               	movf	___flmul@temp,w,c
  7063  0018F4  262A               	addwf	___flmul@grs,f,c
  7064  0018F6  5035               	movf	___flmul@temp+1,w,c
  7065  0018F8  222B               	addwfc	___flmul@grs+1,f,c
  7066  0018FA  0E00               	movlw	0
  7067  0018FC  222C               	addwfc	___flmul@grs+2,f,c
  7068  0018FE  0E00               	movlw	0
  7069  001900  222D               	addwfc	___flmul@grs+3,f,c
  7070  001902  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  7071  001906  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  7072  00190A  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  7073  00190E  6A2A               	clrf	___flmul@grs,c
  7074  001910  5021               	movf	___flmul@a,w,c
  7075  001912  021D               	mulwf	___flmul@b,c
  7076  001914  CFF3 F034          	movff	prodl,___flmul@temp
  7077  001918  CFF4 F035          	movff	prodh,___flmul@temp+1
  7078  00191C  5034               	movf	___flmul@temp,w,c
  7079  00191E  262A               	addwf	___flmul@grs,f,c
  7080  001920  5035               	movf	___flmul@temp+1,w,c
  7081  001922  222B               	addwfc	___flmul@grs+1,f,c
  7082  001924  0E00               	movlw	0
  7083  001926  222C               	addwfc	___flmul@grs+2,f,c
  7084  001928  0E00               	movlw	0
  7085  00192A  222D               	addwfc	___flmul@grs+3,f,c
  7086  00192C  5023               	movf	___flmul@a+2,w,c
  7087  00192E  021E               	mulwf	___flmul@b+1,c
  7088  001930  CFF3 F034          	movff	prodl,___flmul@temp
  7089  001934  CFF4 F035          	movff	prodh,___flmul@temp+1
  7090  001938  5034               	movf	___flmul@temp,w,c
  7091  00193A  2630               	addwf	___flmul@prod,f,c
  7092  00193C  5035               	movf	___flmul@temp+1,w,c
  7093  00193E  2231               	addwfc	___flmul@prod+1,f,c
  7094  001940  0E00               	movlw	0
  7095  001942  2232               	addwfc	___flmul@prod+2,f,c
  7096  001944  0E00               	movlw	0
  7097  001946  2233               	addwfc	___flmul@prod+3,f,c
  7098  001948  5022               	movf	___flmul@a+1,w,c
  7099  00194A  021F               	mulwf	___flmul@b+2,c
  7100  00194C  CFF3 F034          	movff	prodl,___flmul@temp
  7101  001950  CFF4 F035          	movff	prodh,___flmul@temp+1
  7102  001954  5034               	movf	___flmul@temp,w,c
  7103  001956  2630               	addwf	___flmul@prod,f,c
  7104  001958  5035               	movf	___flmul@temp+1,w,c
  7105  00195A  2231               	addwfc	___flmul@prod+1,f,c
  7106  00195C  0E00               	movlw	0
  7107  00195E  2232               	addwfc	___flmul@prod+2,f,c
  7108  001960  0E00               	movlw	0
  7109  001962  2233               	addwfc	___flmul@prod+3,f,c
  7110  001964  5023               	movf	___flmul@a+2,w,c
  7111  001966  021F               	mulwf	___flmul@b+2,c
  7112  001968  CFF3 F034          	movff	prodl,___flmul@temp
  7113  00196C  CFF4 F035          	movff	prodh,___flmul@temp+1
  7114  001970  5034               	movf	___flmul@temp,w,c
  7115  001972  6E25               	movwf	??___flmul& (0+255),c
  7116  001974  5035               	movf	___flmul@temp+1,w,c
  7117  001976  6E26               	movwf	(??___flmul+1)& (0+255),c
  7118  001978  6A27               	clrf	(??___flmul+2)& (0+255),c
  7119  00197A  6A28               	clrf	(??___flmul+3)& (0+255),c
  7120  00197C  C027  F028         	movff	??___flmul+2,??___flmul+3
  7121  001980  C026  F027         	movff	??___flmul+1,??___flmul+2
  7122  001984  C025  F026         	movff	??___flmul,??___flmul+1
  7123  001988  6A25               	clrf	??___flmul,c
  7124  00198A  5025               	movf	??___flmul,w,c
  7125  00198C  2630               	addwf	___flmul@prod,f,c
  7126  00198E  5026               	movf	??___flmul+1,w,c
  7127  001990  2231               	addwfc	___flmul@prod+1,f,c
  7128  001992  5027               	movf	??___flmul+2,w,c
  7129  001994  2232               	addwfc	___flmul@prod+2,f,c
  7130  001996  5028               	movf	??___flmul+3,w,c
  7131  001998  2233               	addwfc	___flmul@prod+3,f,c
  7132  00199A  C02A  F025         	movff	___flmul@grs,??___flmul
  7133  00199E  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  7134  0019A2  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  7135  0019A6  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  7136  0019AA  0E19               	movlw	25
  7137  0019AC  D005               	goto	u3390
  7138  0019AE                     u3395:
  7139  0019AE  90D8               	bcf	status,0,c
  7140  0019B0  3228               	rrcf	??___flmul+3,f,c
  7141  0019B2  3227               	rrcf	??___flmul+2,f,c
  7142  0019B4  3226               	rrcf	??___flmul+1,f,c
  7143  0019B6  3225               	rrcf	??___flmul,f,c
  7144  0019B8                     u3390:
  7145  0019B8  2EE8               	decfsz	wreg,f,c
  7146  0019BA  D7F9               	goto	u3395
  7147  0019BC  5025               	movf	??___flmul,w,c
  7148  0019BE  2630               	addwf	___flmul@prod,f,c
  7149  0019C0  5026               	movf	??___flmul+1,w,c
  7150  0019C2  2231               	addwfc	___flmul@prod+1,f,c
  7151  0019C4  5027               	movf	??___flmul+2,w,c
  7152  0019C6  2232               	addwfc	___flmul@prod+2,f,c
  7153  0019C8  5028               	movf	??___flmul+3,w,c
  7154  0019CA  2233               	addwfc	___flmul@prod+3,f,c
  7155  0019CC  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  7156  0019D0  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  7157  0019D4  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  7158  0019D8  6A2A               	clrf	___flmul@grs,c
  7159  0019DA  502E               	movf	___flmul@aexp,w,c
  7160  0019DC  C02F  F025         	movff	___flmul@bexp,??___flmul
  7161  0019E0  6A26               	clrf	(??___flmul+1)& (0+255),c
  7162  0019E2  2625               	addwf	??___flmul,f,c
  7163  0019E4  0E00               	movlw	0
  7164  0019E6  2226               	addwfc	??___flmul+1,f,c
  7165  0019E8  0E82               	movlw	130
  7166  0019EA  2425               	addwf	??___flmul,w,c
  7167  0019EC  6E34               	movwf	___flmul@temp,c
  7168  0019EE  0EFF               	movlw	255
  7169  0019F0  2026               	addwfc	??___flmul+1,w,c
  7170  0019F2  6E35               	movwf	___flmul@temp+1,c
  7171  0019F4  D00F               	goto	l3380
  7172  0019F6                     l3374:
  7173  0019F6  90D8               	bcf	status,0,c
  7174  0019F8  3630               	rlcf	___flmul@prod,f,c
  7175  0019FA  3631               	rlcf	___flmul@prod+1,f,c
  7176  0019FC  3632               	rlcf	___flmul@prod+2,f,c
  7177  0019FE  3633               	rlcf	___flmul@prod+3,f,c
  7178  001A00  BE2D               	btfsc	___flmul@grs+3,7,c
  7179  001A02  8030               	bsf	___flmul@prod,0,c
  7180  001A04  90D8               	bcf	status,0,c
  7181  001A06  362A               	rlcf	___flmul@grs,f,c
  7182  001A08  362B               	rlcf	___flmul@grs+1,f,c
  7183  001A0A  362C               	rlcf	___flmul@grs+2,f,c
  7184  001A0C  362D               	rlcf	___flmul@grs+3,f,c
  7185  001A0E  0634               	decf	___flmul@temp,f,c
  7186  001A10  A0D8               	btfss	status,0,c
  7187  001A12  0635               	decf	___flmul@temp+1,f,c
  7188  001A14                     l3380:
  7189  001A14  AE32               	btfss	___flmul@prod+2,7,c
  7190  001A16  D7EF               	goto	l3374
  7191  001A18  0E00               	movlw	0
  7192  001A1A  6E2E               	movwf	___flmul@aexp,c
  7193  001A1C  AE2D               	btfss	___flmul@grs+3,7,c
  7194  001A1E  D016               	goto	l1075
  7195  001A20  0EFF               	movlw	255
  7196  001A22  142A               	andwf	___flmul@grs,w,c
  7197  001A24  6E25               	movwf	??___flmul& (0+255),c
  7198  001A26  0EFF               	movlw	255
  7199  001A28  142B               	andwf	___flmul@grs+1,w,c
  7200  001A2A  6E26               	movwf	(??___flmul+1)& (0+255),c
  7201  001A2C  0EFF               	movlw	255
  7202  001A2E  142C               	andwf	___flmul@grs+2,w,c
  7203  001A30  6E27               	movwf	(??___flmul+2)& (0+255),c
  7204  001A32  0E7F               	movlw	127
  7205  001A34  142D               	andwf	___flmul@grs+3,w,c
  7206  001A36  6E28               	movwf	(??___flmul+3)& (0+255),c
  7207  001A38  5025               	movf	??___flmul,w,c
  7208  001A3A  1026               	iorwf	??___flmul+1,w,c
  7209  001A3C  1027               	iorwf	??___flmul+2,w,c
  7210  001A3E  1028               	iorwf	??___flmul+3,w,c
  7211  001A40  A4D8               	btfss	status,2,c
  7212  001A42  D002               	goto	l3390
  7213  001A44  A030               	btfss	___flmul@prod,0,c
  7214  001A46  D002               	goto	l1075
  7215  001A48                     l3390:
  7216  001A48  0E01               	movlw	1
  7217  001A4A  6E2E               	movwf	___flmul@aexp,c
  7218  001A4C                     l1075:
  7219  001A4C  502E               	movf	___flmul@aexp,w,c
  7220  001A4E  B4D8               	btfsc	status,2,c
  7221  001A50  D01F               	goto	l3400
  7222  001A52  0E01               	movlw	1
  7223  001A54  2630               	addwf	___flmul@prod,f,c
  7224  001A56  0E00               	movlw	0
  7225  001A58  2231               	addwfc	___flmul@prod+1,f,c
  7226  001A5A  2232               	addwfc	___flmul@prod+2,f,c
  7227  001A5C  2233               	addwfc	___flmul@prod+3,f,c
  7228  001A5E  A033               	btfss	___flmul@prod+3,0,c
  7229  001A60  D017               	goto	l3400
  7230  001A62  C030  F025         	movff	___flmul@prod,??___flmul
  7231  001A66  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  7232  001A6A  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  7233  001A6E  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  7234  001A72  3428               	rlcf	??___flmul+3,w,c
  7235  001A74  3228               	rrcf	??___flmul+3,f,c
  7236  001A76  3227               	rrcf	??___flmul+2,f,c
  7237  001A78  3226               	rrcf	??___flmul+1,f,c
  7238  001A7A  3225               	rrcf	??___flmul,f,c
  7239  001A7C  C025  F030         	movff	??___flmul,___flmul@prod
  7240  001A80  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  7241  001A84  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  7242  001A88  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  7243  001A8C  4A34               	infsnz	___flmul@temp,f,c
  7244  001A8E  2A35               	incf	___flmul@temp+1,f,c
  7245  001A90                     l3400:
  7246  001A90  BE35               	btfsc	___flmul@temp+1,7,c
  7247  001A92  D00D               	goto	l3404
  7248  001A94  5035               	movf	___flmul@temp+1,w,c
  7249  001A96  E103               	bnz	u3470
  7250  001A98  2834               	incf	___flmul@temp,w,c
  7251  001A9A  A0D8               	btfss	status,0,c
  7252  001A9C  D008               	goto	l3404
  7253  001A9E                     u3470:
  7254  001A9E  0E00               	movlw	0
  7255  001AA0  6E30               	movwf	___flmul@prod,c
  7256  001AA2  0E00               	movlw	0
  7257  001AA4  6E31               	movwf	___flmul@prod+1,c
  7258  001AA6  0E80               	movlw	128
  7259  001AA8  6E32               	movwf	___flmul@prod+2,c
  7260  001AAA  0E7F               	movlw	127
  7261  001AAC  D020               	goto	L10
  7262  001AAE                     l3404:
  7263  001AAE  BE35               	btfsc	___flmul@temp+1,7,c
  7264  001AB0  D005               	goto	l3406
  7265  001AB2  5035               	movf	___flmul@temp+1,w,c
  7266  001AB4  E10E               	bnz	l1083
  7267  001AB6  0434               	decf	___flmul@temp,w,c
  7268  001AB8  B0D8               	btfsc	status,0,c
  7269  001ABA  D00B               	goto	l1083
  7270  001ABC                     l3406:
  7271  001ABC  0E00               	movlw	0
  7272  001ABE  6E30               	movwf	___flmul@prod,c
  7273  001AC0  0E00               	movlw	0
  7274  001AC2  6E31               	movwf	___flmul@prod+1,c
  7275  001AC4  0E00               	movlw	0
  7276  001AC6  6E32               	movwf	___flmul@prod+2,c
  7277  001AC8  0E00               	movlw	0
  7278  001ACA  6E33               	movwf	___flmul@prod+3,c
  7279  001ACC  0E00               	movlw	0
  7280  001ACE  6E29               	movwf	___flmul@sign,c
  7281  001AD0  D00F               	goto	l3416
  7282  001AD2                     l1083:
  7283  001AD2  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  7284  001AD6  0EFF               	movlw	255
  7285  001AD8  1630               	andwf	___flmul@prod,f,c
  7286  001ADA  0EFF               	movlw	255
  7287  001ADC  1631               	andwf	___flmul@prod+1,f,c
  7288  001ADE  0E7F               	movlw	127
  7289  001AE0  1632               	andwf	___flmul@prod+2,f,c
  7290  001AE2  0E00               	movlw	0
  7291  001AE4  1633               	andwf	___flmul@prod+3,f,c
  7292  001AE6  B02F               	btfsc	___flmul@bexp,0,c
  7293  001AE8  8E32               	bsf	___flmul@prod+2,7,c
  7294  001AEA  90D8               	bcf	status,0,c
  7295  001AEC  302F               	rrcf	___flmul@bexp,w,c
  7296  001AEE                     L10:
  7297  001AEE  6E33               	movwf	___flmul@prod+3,c
  7298  001AF0                     l3416:
  7299  001AF0  5029               	movf	___flmul@sign,w,c
  7300  001AF2  1233               	iorwf	___flmul@prod+3,f,c
  7301  001AF4  C030  F01D         	movff	___flmul@prod,?___flmul
  7302  001AF8  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  7303  001AFC  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  7304  001B00  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  7305  001B04  0012               	return	
  7306  001B06                     __end_of___flmul:
  7307                           	opt stack 0
  7308                           tblptru	equ	0xFF8
  7309                           tblptrh	equ	0xFF7
  7310                           tblptrl	equ	0xFF6
  7311                           tablat	equ	0xFF5
  7312                           prodh	equ	0xFF4
  7313                           prodl	equ	0xFF3
  7314                           intcon	equ	0xFF2
  7315                           intcon2	equ	0xFF1
  7316                           intcon3	equ	0xFF0
  7317                           postinc0	equ	0xFEE
  7318                           wreg	equ	0xFE8
  7319                           postdec1	equ	0xFE5
  7320                           fsr1l	equ	0xFE1
  7321                           indf2	equ	0xFDF
  7322                           postinc2	equ	0xFDE
  7323                           postdec2	equ	0xFDD
  7324                           fsr2h	equ	0xFDA
  7325                           fsr2l	equ	0xFD9
  7326                           status	equ	0xFD8
  7327                           
  7328 ;; *************** function ___awmod *****************
  7329 ;; Defined at:
  7330 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;  dividend        2   14[COMRAM] int 
  7333 ;;  divisor         2   16[COMRAM] int 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;  sign            1   19[COMRAM] unsigned char 
  7336 ;;  counter         1   18[COMRAM] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  2   14[COMRAM] int 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;Total ram usage:        6 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    3
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_fround
  7357 ;;		_scale
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text13
  7362  002DF0                     __ptext13:
  7363                           	opt stack 0
  7364  002DF0                     ___awmod:
  7365                           	opt stack 24
  7366                           
  7367                           ;incstack = 0
  7368  002DF0  0E00               	movlw	0
  7369  002DF2  6E14               	movwf	___awmod@sign,c
  7370  002DF4  AE10               	btfss	___awmod@dividend+1,7,c
  7371  002DF6  D006               	goto	l3474
  7372  002DF8  6C0F               	negf	___awmod@dividend,c
  7373  002DFA  1E10               	comf	___awmod@dividend+1,f,c
  7374  002DFC  B0D8               	btfsc	status,0,c
  7375  002DFE  2A10               	incf	___awmod@dividend+1,f,c
  7376  002E00  0E01               	movlw	1
  7377  002E02  6E14               	movwf	___awmod@sign,c
  7378  002E04                     l3474:
  7379  002E04  AE12               	btfss	___awmod@divisor+1,7,c
  7380  002E06  D004               	goto	l3478
  7381  002E08  6C11               	negf	___awmod@divisor,c
  7382  002E0A  1E12               	comf	___awmod@divisor+1,f,c
  7383  002E0C  B0D8               	btfsc	status,0,c
  7384  002E0E  2A12               	incf	___awmod@divisor+1,f,c
  7385  002E10                     l3478:
  7386  002E10  5011               	movf	___awmod@divisor,w,c
  7387  002E12  1012               	iorwf	___awmod@divisor+1,w,c
  7388  002E14  B4D8               	btfsc	status,2,c
  7389  002E16  D018               	goto	l3494
  7390  002E18  0E01               	movlw	1
  7391  002E1A  6E13               	movwf	___awmod@counter,c
  7392  002E1C  D004               	goto	l3484
  7393  002E1E                     l3482:
  7394  002E1E  90D8               	bcf	status,0,c
  7395  002E20  3611               	rlcf	___awmod@divisor,f,c
  7396  002E22  3612               	rlcf	___awmod@divisor+1,f,c
  7397  002E24  2A13               	incf	___awmod@counter,f,c
  7398  002E26                     l3484:
  7399  002E26  AE12               	btfss	___awmod@divisor+1,7,c
  7400  002E28  D7FA               	goto	l3482
  7401  002E2A                     l3486:
  7402  002E2A  5011               	movf	___awmod@divisor,w,c
  7403  002E2C  5C0F               	subwf	___awmod@dividend,w,c
  7404  002E2E  5012               	movf	___awmod@divisor+1,w,c
  7405  002E30  5810               	subwfb	___awmod@dividend+1,w,c
  7406  002E32  A0D8               	btfss	status,0,c
  7407  002E34  D004               	goto	l3490
  7408  002E36  5011               	movf	___awmod@divisor,w,c
  7409  002E38  5E0F               	subwf	___awmod@dividend,f,c
  7410  002E3A  5012               	movf	___awmod@divisor+1,w,c
  7411  002E3C  5A10               	subwfb	___awmod@dividend+1,f,c
  7412  002E3E                     l3490:
  7413  002E3E  90D8               	bcf	status,0,c
  7414  002E40  3212               	rrcf	___awmod@divisor+1,f,c
  7415  002E42  3211               	rrcf	___awmod@divisor,f,c
  7416  002E44  2E13               	decfsz	___awmod@counter,f,c
  7417  002E46  D7F1               	goto	l3486
  7418  002E48                     l3494:
  7419  002E48  5014               	movf	___awmod@sign,w,c
  7420  002E4A  B4D8               	btfsc	status,2,c
  7421  002E4C  D004               	goto	l3498
  7422  002E4E  6C0F               	negf	___awmod@dividend,c
  7423  002E50  1E10               	comf	___awmod@dividend+1,f,c
  7424  002E52  B0D8               	btfsc	status,0,c
  7425  002E54  2A10               	incf	___awmod@dividend+1,f,c
  7426  002E56                     l3498:
  7427  002E56  C00F  F00F         	movff	___awmod@dividend,?___awmod
  7428  002E5A  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  7429  002E5E  0012               	return	
  7430  002E60                     __end_of___awmod:
  7431                           	opt stack 0
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           intcon	equ	0xFF2
  7439                           intcon2	equ	0xFF1
  7440                           intcon3	equ	0xFF0
  7441                           postinc0	equ	0xFEE
  7442                           wreg	equ	0xFE8
  7443                           postdec1	equ	0xFE5
  7444                           fsr1l	equ	0xFE1
  7445                           indf2	equ	0xFDF
  7446                           postinc2	equ	0xFDE
  7447                           postdec2	equ	0xFDD
  7448                           fsr2h	equ	0xFDA
  7449                           fsr2l	equ	0xFD9
  7450                           status	equ	0xFD8
  7451                           
  7452 ;; *************** function ___awdiv *****************
  7453 ;; Defined at:
  7454 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  dividend        2   20[COMRAM] int 
  7457 ;;  divisor         2   22[COMRAM] int 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  quotient        2   26[COMRAM] int 
  7460 ;;  sign            1   25[COMRAM] unsigned char 
  7461 ;;  counter         1   24[COMRAM] unsigned char 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  2   20[COMRAM] int 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7474 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7475 ;;Total ram usage:        8 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    3
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_fround
  7482 ;;		_scale
  7483 ;;		_sprintf
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text14
  7488  002C68                     __ptext14:
  7489                           	opt stack 0
  7490  002C68                     ___awdiv:
  7491                           	opt stack 24
  7492                           
  7493                           ;incstack = 0
  7494  002C68  0E00               	movlw	0
  7495  002C6A  6E1A               	movwf	___awdiv@sign,c
  7496  002C6C  AE18               	btfss	___awdiv@divisor+1,7,c
  7497  002C6E  D006               	goto	l3430
  7498  002C70  6C17               	negf	___awdiv@divisor,c
  7499  002C72  1E18               	comf	___awdiv@divisor+1,f,c
  7500  002C74  B0D8               	btfsc	status,0,c
  7501  002C76  2A18               	incf	___awdiv@divisor+1,f,c
  7502  002C78  0E01               	movlw	1
  7503  002C7A  6E1A               	movwf	___awdiv@sign,c
  7504  002C7C                     l3430:
  7505  002C7C  AE16               	btfss	___awdiv@dividend+1,7,c
  7506  002C7E  D006               	goto	l3436
  7507  002C80  6C15               	negf	___awdiv@dividend,c
  7508  002C82  1E16               	comf	___awdiv@dividend+1,f,c
  7509  002C84  B0D8               	btfsc	status,0,c
  7510  002C86  2A16               	incf	___awdiv@dividend+1,f,c
  7511  002C88  0E01               	movlw	1
  7512  002C8A  1A1A               	xorwf	___awdiv@sign,f,c
  7513  002C8C                     l3436:
  7514  002C8C  0E00               	movlw	0
  7515  002C8E  6E1C               	movwf	___awdiv@quotient+1,c
  7516  002C90  0E00               	movlw	0
  7517  002C92  6E1B               	movwf	___awdiv@quotient,c
  7518  002C94  5017               	movf	___awdiv@divisor,w,c
  7519  002C96  1018               	iorwf	___awdiv@divisor+1,w,c
  7520  002C98  B4D8               	btfsc	status,2,c
  7521  002C9A  D01C               	goto	l3458
  7522  002C9C  0E01               	movlw	1
  7523  002C9E  6E19               	movwf	___awdiv@counter,c
  7524  002CA0  D004               	goto	l3444
  7525  002CA2                     l3442:
  7526  002CA2  90D8               	bcf	status,0,c
  7527  002CA4  3617               	rlcf	___awdiv@divisor,f,c
  7528  002CA6  3618               	rlcf	___awdiv@divisor+1,f,c
  7529  002CA8  2A19               	incf	___awdiv@counter,f,c
  7530  002CAA                     l3444:
  7531  002CAA  AE18               	btfss	___awdiv@divisor+1,7,c
  7532  002CAC  D7FA               	goto	l3442
  7533  002CAE                     l3446:
  7534  002CAE  90D8               	bcf	status,0,c
  7535  002CB0  361B               	rlcf	___awdiv@quotient,f,c
  7536  002CB2  361C               	rlcf	___awdiv@quotient+1,f,c
  7537  002CB4  5017               	movf	___awdiv@divisor,w,c
  7538  002CB6  5C15               	subwf	___awdiv@dividend,w,c
  7539  002CB8  5018               	movf	___awdiv@divisor+1,w,c
  7540  002CBA  5816               	subwfb	___awdiv@dividend+1,w,c
  7541  002CBC  A0D8               	btfss	status,0,c
  7542  002CBE  D005               	goto	l3454
  7543  002CC0  5017               	movf	___awdiv@divisor,w,c
  7544  002CC2  5E15               	subwf	___awdiv@dividend,f,c
  7545  002CC4  5018               	movf	___awdiv@divisor+1,w,c
  7546  002CC6  5A16               	subwfb	___awdiv@dividend+1,f,c
  7547  002CC8  801B               	bsf	___awdiv@quotient,0,c
  7548  002CCA                     l3454:
  7549  002CCA  90D8               	bcf	status,0,c
  7550  002CCC  3218               	rrcf	___awdiv@divisor+1,f,c
  7551  002CCE  3217               	rrcf	___awdiv@divisor,f,c
  7552  002CD0  2E19               	decfsz	___awdiv@counter,f,c
  7553  002CD2  D7ED               	goto	l3446
  7554  002CD4                     l3458:
  7555  002CD4  501A               	movf	___awdiv@sign,w,c
  7556  002CD6  B4D8               	btfsc	status,2,c
  7557  002CD8  D004               	goto	l3462
  7558  002CDA  6C1B               	negf	___awdiv@quotient,c
  7559  002CDC  1E1C               	comf	___awdiv@quotient+1,f,c
  7560  002CDE  B0D8               	btfsc	status,0,c
  7561  002CE0  2A1C               	incf	___awdiv@quotient+1,f,c
  7562  002CE2                     l3462:
  7563  002CE2  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  7564  002CE6  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  7565  002CEA  0012               	return	
  7566  002CEC                     __end_of___awdiv:
  7567                           	opt stack 0
  7568                           tblptru	equ	0xFF8
  7569                           tblptrh	equ	0xFF7
  7570                           tblptrl	equ	0xFF6
  7571                           tablat	equ	0xFF5
  7572                           prodh	equ	0xFF4
  7573                           prodl	equ	0xFF3
  7574                           intcon	equ	0xFF2
  7575                           intcon2	equ	0xFF1
  7576                           intcon3	equ	0xFF0
  7577                           postinc0	equ	0xFEE
  7578                           wreg	equ	0xFE8
  7579                           postdec1	equ	0xFE5
  7580                           fsr1l	equ	0xFE1
  7581                           indf2	equ	0xFDF
  7582                           postinc2	equ	0xFDE
  7583                           postdec2	equ	0xFDD
  7584                           fsr2h	equ	0xFDA
  7585                           fsr2l	equ	0xFD9
  7586                           status	equ	0xFD8
  7587                           
  7588 ;; *************** function __tdiv_to_l_ *****************
  7589 ;; Defined at:
  7590 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  f1              4   14[COMRAM] float 
  7593 ;;  f2              4   18[COMRAM] float 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  quot            4   25[COMRAM] unsigned long 
  7596 ;;  exp1            1   30[COMRAM] unsigned char 
  7597 ;;  cntr            1   29[COMRAM] unsigned char 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  4   14[COMRAM] unsigned long 
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7607 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;Total ram usage:       17 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    3
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_sprintf
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           	psect	text15
  7622  00278C                     __ptext15:
  7623                           	opt stack 0
  7624  00278C                     __tdiv_to_l_:
  7625                           	opt stack 25
  7626                           
  7627                           ;incstack = 0
  7628  00278C  C011  F017         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7629  002790  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  7630  002792  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  7631  002794  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  7632  002796  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  7633  002798  E301               	bnc	u3711
  7634  00279A  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  7635  00279C                     u3711:
  7636  00279C  5017               	movf	??__tdiv_to_l_,w,c
  7637  00279E  6E1F               	movwf	__tdiv_to_l_@exp1,c
  7638  0027A0  501F               	movf	__tdiv_to_l_@exp1,w,c
  7639  0027A2  A4D8               	btfss	status,2,c
  7640  0027A4  D009               	goto	l3594
  7641  0027A6  0E00               	movlw	0
  7642  0027A8  6E0F               	movwf	?__tdiv_to_l_,c
  7643  0027AA  0E00               	movlw	0
  7644  0027AC  6E10               	movwf	?__tdiv_to_l_+1,c
  7645  0027AE  0E00               	movlw	0
  7646  0027B0  6E11               	movwf	?__tdiv_to_l_+2,c
  7647  0027B2  0E00               	movlw	0
  7648  0027B4  6E12               	movwf	?__tdiv_to_l_+3,c
  7649  0027B6  0012               	return	
  7650  0027B8                     l3594:
  7651  0027B8  C015  F017         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7652  0027BC  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  7653  0027BE  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  7654  0027C0  3414               	rlcf	__tdiv_to_l_@f2+1,w,c
  7655  0027C2  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  7656  0027C4  E301               	bnc	u3731
  7657  0027C6  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  7658  0027C8                     u3731:
  7659  0027C8  5017               	movf	??__tdiv_to_l_,w,c
  7660  0027CA  6E1E               	movwf	__tdiv_to_l_@cntr,c
  7661  0027CC  501E               	movf	__tdiv_to_l_@cntr,w,c
  7662  0027CE  A4D8               	btfss	status,2,c
  7663  0027D0  D009               	goto	l3600
  7664  0027D2  0E00               	movlw	0
  7665  0027D4  6E0F               	movwf	?__tdiv_to_l_,c
  7666  0027D6  0E00               	movlw	0
  7667  0027D8  6E10               	movwf	?__tdiv_to_l_+1,c
  7668  0027DA  0E00               	movlw	0
  7669  0027DC  6E11               	movwf	?__tdiv_to_l_+2,c
  7670  0027DE  0E00               	movlw	0
  7671  0027E0  6E12               	movwf	?__tdiv_to_l_+3,c
  7672  0027E2  0012               	return	
  7673  0027E4                     l3600:
  7674  0027E4  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  7675  0027E6  0EFF               	movlw	255
  7676  0027E8  160F               	andwf	__tdiv_to_l_@f1,f,c
  7677  0027EA  0EFF               	movlw	255
  7678  0027EC  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  7679  0027EE  0E00               	movlw	0
  7680  0027F0  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  7681  0027F2  8E14               	bsf	__tdiv_to_l_@f2+1,7,c
  7682  0027F4  0EFF               	movlw	255
  7683  0027F6  1613               	andwf	__tdiv_to_l_@f2,f,c
  7684  0027F8  0EFF               	movlw	255
  7685  0027FA  1614               	andwf	__tdiv_to_l_@f2+1,f,c
  7686  0027FC  0E00               	movlw	0
  7687  0027FE  1615               	andwf	__tdiv_to_l_@f2+2,f,c
  7688  002800  0E00               	movlw	0
  7689  002802  6E1A               	movwf	__tdiv_to_l_@quot,c
  7690  002804  0E00               	movlw	0
  7691  002806  6E1B               	movwf	__tdiv_to_l_@quot+1,c
  7692  002808  0E00               	movlw	0
  7693  00280A  6E1C               	movwf	__tdiv_to_l_@quot+2,c
  7694  00280C  0E00               	movlw	0
  7695  00280E  6E1D               	movwf	__tdiv_to_l_@quot+3,c
  7696  002810  0E7F               	movlw	127
  7697  002812  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  7698  002814  501E               	movf	__tdiv_to_l_@cntr,w,c
  7699  002816  0F98               	addlw	152
  7700  002818  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  7701  00281A  0E18               	movlw	24
  7702  00281C  6E1E               	movwf	__tdiv_to_l_@cntr,c
  7703  00281E                     l804:
  7704  00281E  90D8               	bcf	status,0,c
  7705  002820  361A               	rlcf	__tdiv_to_l_@quot,f,c
  7706  002822  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  7707  002824  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  7708  002826  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  7709  002828  5013               	movf	__tdiv_to_l_@f2,w,c
  7710  00282A  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  7711  00282C  5014               	movf	__tdiv_to_l_@f2+1,w,c
  7712  00282E  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  7713  002830  5015               	movf	__tdiv_to_l_@f2+2,w,c
  7714  002832  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  7715  002834  A0D8               	btfss	status,0,c
  7716  002836  D007               	goto	l805
  7717  002838  5013               	movf	__tdiv_to_l_@f2,w,c
  7718  00283A  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  7719  00283C  5014               	movf	__tdiv_to_l_@f2+1,w,c
  7720  00283E  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  7721  002840  5015               	movf	__tdiv_to_l_@f2+2,w,c
  7722  002842  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  7723  002844  801A               	bsf	__tdiv_to_l_@quot,0,c
  7724  002846                     l805:
  7725  002846  90D8               	bcf	status,0,c
  7726  002848  360F               	rlcf	__tdiv_to_l_@f1,f,c
  7727  00284A  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  7728  00284C  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  7729  00284E  2E1E               	decfsz	__tdiv_to_l_@cntr,f,c
  7730  002850  D7E6               	goto	l804
  7731  002852  AE1F               	btfss	__tdiv_to_l_@exp1,7,c
  7732  002854  D016               	goto	l3634
  7733  002856  501F               	movf	__tdiv_to_l_@exp1,w,c
  7734  002858  0A80               	xorlw	128
  7735  00285A  0F97               	addlw	151
  7736  00285C  B0D8               	btfsc	status,0,c
  7737  00285E  D009               	goto	l3630
  7738  002860  0E00               	movlw	0
  7739  002862  6E0F               	movwf	?__tdiv_to_l_,c
  7740  002864  0E00               	movlw	0
  7741  002866  6E10               	movwf	?__tdiv_to_l_+1,c
  7742  002868  0E00               	movlw	0
  7743  00286A  6E11               	movwf	?__tdiv_to_l_+2,c
  7744  00286C  0E00               	movlw	0
  7745  00286E  6E12               	movwf	?__tdiv_to_l_+3,c
  7746  002870  0012               	return	
  7747  002872                     l3630:
  7748  002872  90D8               	bcf	status,0,c
  7749  002874  321D               	rrcf	__tdiv_to_l_@quot+3,f,c
  7750  002876  321C               	rrcf	__tdiv_to_l_@quot+2,f,c
  7751  002878  321B               	rrcf	__tdiv_to_l_@quot+1,f,c
  7752  00287A  321A               	rrcf	__tdiv_to_l_@quot,f,c
  7753  00287C  3E1F               	incfsz	__tdiv_to_l_@exp1,f,c
  7754  00287E  D7F9               	goto	l3630
  7755  002880  D015               	goto	l811
  7756  002882                     l3634:
  7757  002882  0E17               	movlw	23
  7758  002884  641F               	cpfsgt	__tdiv_to_l_@exp1,c
  7759  002886  D00F               	goto	l3642
  7760  002888  0E00               	movlw	0
  7761  00288A  6E0F               	movwf	?__tdiv_to_l_,c
  7762  00288C  0E00               	movlw	0
  7763  00288E  6E10               	movwf	?__tdiv_to_l_+1,c
  7764  002890  0E00               	movlw	0
  7765  002892  6E11               	movwf	?__tdiv_to_l_+2,c
  7766  002894  0E00               	movlw	0
  7767  002896  6E12               	movwf	?__tdiv_to_l_+3,c
  7768  002898  0012               	return	
  7769  00289A                     l3640:
  7770  00289A  90D8               	bcf	status,0,c
  7771  00289C  361A               	rlcf	__tdiv_to_l_@quot,f,c
  7772  00289E  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  7773  0028A0  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  7774  0028A2  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  7775  0028A4  061F               	decf	__tdiv_to_l_@exp1,f,c
  7776  0028A6                     l3642:
  7777  0028A6  501F               	movf	__tdiv_to_l_@exp1,w,c
  7778  0028A8  A4D8               	btfss	status,2,c
  7779  0028AA  D7F7               	goto	l3640
  7780  0028AC                     l811:
  7781  0028AC  C01A  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7782  0028B0  C01B  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7783  0028B4  C01C  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7784  0028B8  C01D  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7785  0028BC  0012               	return		;funcret
  7786  0028BE                     __end_of__tdiv_to_l_:
  7787                           	opt stack 0
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           prodh	equ	0xFF4
  7793                           prodl	equ	0xFF3
  7794                           intcon	equ	0xFF2
  7795                           intcon2	equ	0xFF1
  7796                           intcon3	equ	0xFF0
  7797                           postinc0	equ	0xFEE
  7798                           wreg	equ	0xFE8
  7799                           postdec1	equ	0xFE5
  7800                           fsr1l	equ	0xFE1
  7801                           indf2	equ	0xFDF
  7802                           postinc2	equ	0xFDE
  7803                           postdec2	equ	0xFDD
  7804                           fsr2h	equ	0xFDA
  7805                           fsr2l	equ	0xFD9
  7806                           status	equ	0xFD8
  7807                           
  7808 ;; *************** function __div_to_l_ *****************
  7809 ;; Defined at:
  7810 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  f1              4   14[COMRAM] unsigned long 
  7813 ;;  f2              4   18[COMRAM] unsigned long 
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;  quot            4   22[COMRAM] unsigned long 
  7816 ;;  exp1            1   27[COMRAM] unsigned char 
  7817 ;;  cntr            1   26[COMRAM] unsigned char 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  4   14[COMRAM] unsigned long 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7827 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7828 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;Total ram usage:       14 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    3
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_sprintf
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text16
  7842  0028BE                     __ptext16:
  7843                           	opt stack 0
  7844  0028BE                     __div_to_l_:
  7845                           	opt stack 25
  7846                           
  7847                           ;incstack = 0
  7848  0028BE  3411               	rlcf	__div_to_l_@f1+2,w,c
  7849  0028C0  3412               	rlcf	__div_to_l_@f1+3,w,c
  7850  0028C2  6E1C               	movwf	__div_to_l_@exp1,c
  7851  0028C4  501C               	movf	__div_to_l_@exp1,w,c
  7852  0028C6  A4D8               	btfss	status,2,c
  7853  0028C8  D009               	goto	l3650
  7854  0028CA  0E00               	movlw	0
  7855  0028CC  6E0F               	movwf	?__div_to_l_,c
  7856  0028CE  0E00               	movlw	0
  7857  0028D0  6E10               	movwf	?__div_to_l_+1,c
  7858  0028D2  0E00               	movlw	0
  7859  0028D4  6E11               	movwf	?__div_to_l_+2,c
  7860  0028D6  0E00               	movlw	0
  7861  0028D8  6E12               	movwf	?__div_to_l_+3,c
  7862  0028DA  0012               	return	
  7863  0028DC                     l3650:
  7864  0028DC  3415               	rlcf	__div_to_l_@f2+2,w,c
  7865  0028DE  3416               	rlcf	__div_to_l_@f2+3,w,c
  7866  0028E0  6E1B               	movwf	__div_to_l_@cntr,c
  7867  0028E2  501B               	movf	__div_to_l_@cntr,w,c
  7868  0028E4  A4D8               	btfss	status,2,c
  7869  0028E6  D009               	goto	l3656
  7870  0028E8  0E00               	movlw	0
  7871  0028EA  6E0F               	movwf	?__div_to_l_,c
  7872  0028EC  0E00               	movlw	0
  7873  0028EE  6E10               	movwf	?__div_to_l_+1,c
  7874  0028F0  0E00               	movlw	0
  7875  0028F2  6E11               	movwf	?__div_to_l_+2,c
  7876  0028F4  0E00               	movlw	0
  7877  0028F6  6E12               	movwf	?__div_to_l_+3,c
  7878  0028F8  0012               	return	
  7879  0028FA                     l3656:
  7880  0028FA  8E11               	bsf	__div_to_l_@f1+2,7,c
  7881  0028FC  0EFF               	movlw	255
  7882  0028FE  160F               	andwf	__div_to_l_@f1,f,c
  7883  002900  0EFF               	movlw	255
  7884  002902  1610               	andwf	__div_to_l_@f1+1,f,c
  7885  002904  0EFF               	movlw	255
  7886  002906  1611               	andwf	__div_to_l_@f1+2,f,c
  7887  002908  0E00               	movlw	0
  7888  00290A  1612               	andwf	__div_to_l_@f1+3,f,c
  7889  00290C  8E15               	bsf	__div_to_l_@f2+2,7,c
  7890  00290E  0EFF               	movlw	255
  7891  002910  1613               	andwf	__div_to_l_@f2,f,c
  7892  002912  0EFF               	movlw	255
  7893  002914  1614               	andwf	__div_to_l_@f2+1,f,c
  7894  002916  0EFF               	movlw	255
  7895  002918  1615               	andwf	__div_to_l_@f2+2,f,c
  7896  00291A  0E00               	movlw	0
  7897  00291C  1616               	andwf	__div_to_l_@f2+3,f,c
  7898  00291E  0E00               	movlw	0
  7899  002920  6E17               	movwf	__div_to_l_@quot,c
  7900  002922  0E00               	movlw	0
  7901  002924  6E18               	movwf	__div_to_l_@quot+1,c
  7902  002926  0E00               	movlw	0
  7903  002928  6E19               	movwf	__div_to_l_@quot+2,c
  7904  00292A  0E00               	movlw	0
  7905  00292C  6E1A               	movwf	__div_to_l_@quot+3,c
  7906  00292E  0E7F               	movlw	127
  7907  002930  5E1C               	subwf	__div_to_l_@exp1,f,c
  7908  002932  501B               	movf	__div_to_l_@cntr,w,c
  7909  002934  0FA0               	addlw	160
  7910  002936  5E1C               	subwf	__div_to_l_@exp1,f,c
  7911  002938  0E20               	movlw	32
  7912  00293A  6E1B               	movwf	__div_to_l_@cntr,c
  7913  00293C                     l3670:
  7914  00293C  90D8               	bcf	status,0,c
  7915  00293E  3617               	rlcf	__div_to_l_@quot,f,c
  7916  002940  3618               	rlcf	__div_to_l_@quot+1,f,c
  7917  002942  3619               	rlcf	__div_to_l_@quot+2,f,c
  7918  002944  361A               	rlcf	__div_to_l_@quot+3,f,c
  7919  002946  5013               	movf	__div_to_l_@f2,w,c
  7920  002948  5C0F               	subwf	__div_to_l_@f1,w,c
  7921  00294A  5014               	movf	__div_to_l_@f2+1,w,c
  7922  00294C  5810               	subwfb	__div_to_l_@f1+1,w,c
  7923  00294E  5015               	movf	__div_to_l_@f2+2,w,c
  7924  002950  5811               	subwfb	__div_to_l_@f1+2,w,c
  7925  002952  5016               	movf	__div_to_l_@f2+3,w,c
  7926  002954  5812               	subwfb	__div_to_l_@f1+3,w,c
  7927  002956  A0D8               	btfss	status,0,c
  7928  002958  D009               	goto	l3678
  7929  00295A  5013               	movf	__div_to_l_@f2,w,c
  7930  00295C  5E0F               	subwf	__div_to_l_@f1,f,c
  7931  00295E  5014               	movf	__div_to_l_@f2+1,w,c
  7932  002960  5A10               	subwfb	__div_to_l_@f1+1,f,c
  7933  002962  5015               	movf	__div_to_l_@f2+2,w,c
  7934  002964  5A11               	subwfb	__div_to_l_@f1+2,f,c
  7935  002966  5016               	movf	__div_to_l_@f2+3,w,c
  7936  002968  5A12               	subwfb	__div_to_l_@f1+3,f,c
  7937  00296A  8017               	bsf	__div_to_l_@quot,0,c
  7938  00296C                     l3678:
  7939  00296C  90D8               	bcf	status,0,c
  7940  00296E  360F               	rlcf	__div_to_l_@f1,f,c
  7941  002970  3610               	rlcf	__div_to_l_@f1+1,f,c
  7942  002972  3611               	rlcf	__div_to_l_@f1+2,f,c
  7943  002974  3612               	rlcf	__div_to_l_@f1+3,f,c
  7944  002976  2E1B               	decfsz	__div_to_l_@cntr,f,c
  7945  002978  D7E1               	goto	l3670
  7946  00297A  AE1C               	btfss	__div_to_l_@exp1,7,c
  7947  00297C  D016               	goto	l3694
  7948  00297E  501C               	movf	__div_to_l_@exp1,w,c
  7949  002980  0A80               	xorlw	128
  7950  002982  0F9F               	addlw	159
  7951  002984  B0D8               	btfsc	status,0,c
  7952  002986  D009               	goto	l3690
  7953  002988  0E00               	movlw	0
  7954  00298A  6E0F               	movwf	?__div_to_l_,c
  7955  00298C  0E00               	movlw	0
  7956  00298E  6E10               	movwf	?__div_to_l_+1,c
  7957  002990  0E00               	movlw	0
  7958  002992  6E11               	movwf	?__div_to_l_+2,c
  7959  002994  0E00               	movlw	0
  7960  002996  6E12               	movwf	?__div_to_l_+3,c
  7961  002998  0012               	return	
  7962  00299A                     l3690:
  7963  00299A  90D8               	bcf	status,0,c
  7964  00299C  321A               	rrcf	__div_to_l_@quot+3,f,c
  7965  00299E  3219               	rrcf	__div_to_l_@quot+2,f,c
  7966  0029A0  3218               	rrcf	__div_to_l_@quot+1,f,c
  7967  0029A2  3217               	rrcf	__div_to_l_@quot,f,c
  7968  0029A4  3E1C               	incfsz	__div_to_l_@exp1,f,c
  7969  0029A6  D7F9               	goto	l3690
  7970  0029A8  D015               	goto	l707
  7971  0029AA                     l3694:
  7972  0029AA  0E1F               	movlw	31
  7973  0029AC  641C               	cpfsgt	__div_to_l_@exp1,c
  7974  0029AE  D00F               	goto	l3702
  7975  0029B0  0E00               	movlw	0
  7976  0029B2  6E0F               	movwf	?__div_to_l_,c
  7977  0029B4  0E00               	movlw	0
  7978  0029B6  6E10               	movwf	?__div_to_l_+1,c
  7979  0029B8  0E00               	movlw	0
  7980  0029BA  6E11               	movwf	?__div_to_l_+2,c
  7981  0029BC  0E00               	movlw	0
  7982  0029BE  6E12               	movwf	?__div_to_l_+3,c
  7983  0029C0  0012               	return	
  7984  0029C2                     l3700:
  7985  0029C2  90D8               	bcf	status,0,c
  7986  0029C4  3617               	rlcf	__div_to_l_@quot,f,c
  7987  0029C6  3618               	rlcf	__div_to_l_@quot+1,f,c
  7988  0029C8  3619               	rlcf	__div_to_l_@quot+2,f,c
  7989  0029CA  361A               	rlcf	__div_to_l_@quot+3,f,c
  7990  0029CC  061C               	decf	__div_to_l_@exp1,f,c
  7991  0029CE                     l3702:
  7992  0029CE  501C               	movf	__div_to_l_@exp1,w,c
  7993  0029D0  A4D8               	btfss	status,2,c
  7994  0029D2  D7F7               	goto	l3700
  7995  0029D4                     l707:
  7996  0029D4  C017  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  7997  0029D8  C018  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7998  0029DC  C019  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7999  0029E0  C01A  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  8000  0029E4  0012               	return		;funcret
  8001  0029E6                     __end_of__div_to_l_:
  8002                           	opt stack 0
  8003                           tblptru	equ	0xFF8
  8004                           tblptrh	equ	0xFF7
  8005                           tblptrl	equ	0xFF6
  8006                           tablat	equ	0xFF5
  8007                           prodh	equ	0xFF4
  8008                           prodl	equ	0xFF3
  8009                           intcon	equ	0xFF2
  8010                           intcon2	equ	0xFF1
  8011                           intcon3	equ	0xFF0
  8012                           postinc0	equ	0xFEE
  8013                           wreg	equ	0xFE8
  8014                           postdec1	equ	0xFE5
  8015                           fsr1l	equ	0xFE1
  8016                           indf2	equ	0xFDF
  8017                           postinc2	equ	0xFDE
  8018                           postdec2	equ	0xFDD
  8019                           fsr2h	equ	0xFDA
  8020                           fsr2l	equ	0xFD9
  8021                           status	equ	0xFD8
  8022                           
  8023 ;; *************** function ___xxtofl *****************
  8024 ;; Defined at:
  8025 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  sign            1    wreg     unsigned char 
  8028 ;;  val             4   20[COMRAM] long 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  sign            1   28[COMRAM] unsigned char 
  8031 ;;  arg             4   30[COMRAM] unsigned long 
  8032 ;;  exp             1   29[COMRAM] unsigned char 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  4   20[COMRAM] unsigned char 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;Total ram usage:       14 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    3
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_read_adc_voltage
  8053 ;;		_sprintf
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text17
  8058  00263C                     __ptext17:
  8059                           	opt stack 0
  8060  00263C                     ___xxtofl:
  8061                           	opt stack 26
  8062                           
  8063                           ;incstack = 0
  8064                           ;___xxtofl@sign stored from wreg
  8065  00263C  6E1D               	movwf	___xxtofl@sign,c
  8066  00263E  501D               	movf	___xxtofl@sign,w,c
  8067  002640  A4D8               	btfss	status,2,c
  8068  002642  AE18               	btfss	___xxtofl@val+3,7,c
  8069  002644  D01A               	goto	l1088
  8070  002646  C015  F019         	movff	___xxtofl@val,??___xxtofl
  8071  00264A  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
  8072  00264E  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
  8073  002652  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
  8074  002656  1E19               	comf	??___xxtofl,f,c
  8075  002658  1E1A               	comf	??___xxtofl+1,f,c
  8076  00265A  1E1B               	comf	??___xxtofl+2,f,c
  8077  00265C  1E1C               	comf	??___xxtofl+3,f,c
  8078  00265E  2A19               	incf	??___xxtofl,f,c
  8079  002660  0E00               	movlw	0
  8080  002662  221A               	addwfc	??___xxtofl+1,f,c
  8081  002664  221B               	addwfc	??___xxtofl+2,f,c
  8082  002666  221C               	addwfc	??___xxtofl+3,f,c
  8083  002668  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
  8084  00266C  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
  8085  002670  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
  8086  002674  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
  8087  002678  D008               	goto	l3834
  8088  00267A                     l1088:
  8089  00267A  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
  8090  00267E  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8091  002682  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8092  002686  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8093  00268A                     l3834:
  8094  00268A  5015               	movf	___xxtofl@val,w,c
  8095  00268C  1016               	iorwf	___xxtofl@val+1,w,c
  8096  00268E  1017               	iorwf	___xxtofl@val+2,w,c
  8097  002690  1018               	iorwf	___xxtofl@val+3,w,c
  8098  002692  A4D8               	btfss	status,2,c
  8099  002694  D009               	goto	l3840
  8100  002696  0E00               	movlw	0
  8101  002698  6E15               	movwf	?___xxtofl,c
  8102  00269A  0E00               	movlw	0
  8103  00269C  6E16               	movwf	?___xxtofl+1,c
  8104  00269E  0E00               	movlw	0
  8105  0026A0  6E17               	movwf	?___xxtofl+2,c
  8106  0026A2  0E00               	movlw	0
  8107  0026A4  6E18               	movwf	?___xxtofl+3,c
  8108  0026A6  0012               	return	
  8109  0026A8                     l3840:
  8110  0026A8  0E96               	movlw	150
  8111  0026AA  6E1E               	movwf	___xxtofl@exp,c
  8112  0026AC  D006               	goto	l3844
  8113  0026AE                     l3842:
  8114  0026AE  2A1E               	incf	___xxtofl@exp,f,c
  8115  0026B0  90D8               	bcf	status,0,c
  8116  0026B2  3222               	rrcf	___xxtofl@arg+3,f,c
  8117  0026B4  3221               	rrcf	___xxtofl@arg+2,f,c
  8118  0026B6  3220               	rrcf	___xxtofl@arg+1,f,c
  8119  0026B8  321F               	rrcf	___xxtofl@arg,f,c
  8120  0026BA                     l3844:
  8121  0026BA  0E00               	movlw	0
  8122  0026BC  141F               	andwf	___xxtofl@arg,w,c
  8123  0026BE  6E19               	movwf	??___xxtofl& (0+255),c
  8124  0026C0  0E00               	movlw	0
  8125  0026C2  1420               	andwf	___xxtofl@arg+1,w,c
  8126  0026C4  6E1A               	movwf	(??___xxtofl+1)& (0+255),c
  8127  0026C6  0E00               	movlw	0
  8128  0026C8  1421               	andwf	___xxtofl@arg+2,w,c
  8129  0026CA  6E1B               	movwf	(??___xxtofl+2)& (0+255),c
  8130  0026CC  0EFE               	movlw	254
  8131  0026CE  1422               	andwf	___xxtofl@arg+3,w,c
  8132  0026D0  6E1C               	movwf	(??___xxtofl+3)& (0+255),c
  8133  0026D2  5019               	movf	??___xxtofl,w,c
  8134  0026D4  101A               	iorwf	??___xxtofl+1,w,c
  8135  0026D6  101B               	iorwf	??___xxtofl+2,w,c
  8136  0026D8  101C               	iorwf	??___xxtofl+3,w,c
  8137  0026DA  B4D8               	btfsc	status,2,c
  8138  0026DC  D00D               	goto	l1095
  8139  0026DE  D7E7               	goto	l3842
  8140  0026E0                     l3846:
  8141  0026E0  2A1E               	incf	___xxtofl@exp,f,c
  8142  0026E2  0E01               	movlw	1
  8143  0026E4  261F               	addwf	___xxtofl@arg,f,c
  8144  0026E6  0E00               	movlw	0
  8145  0026E8  2220               	addwfc	___xxtofl@arg+1,f,c
  8146  0026EA  2221               	addwfc	___xxtofl@arg+2,f,c
  8147  0026EC  2222               	addwfc	___xxtofl@arg+3,f,c
  8148  0026EE  90D8               	bcf	status,0,c
  8149  0026F0  3222               	rrcf	___xxtofl@arg+3,f,c
  8150  0026F2  3221               	rrcf	___xxtofl@arg+2,f,c
  8151  0026F4  3220               	rrcf	___xxtofl@arg+1,f,c
  8152  0026F6  321F               	rrcf	___xxtofl@arg,f,c
  8153  0026F8                     l1095:
  8154  0026F8  0E00               	movlw	0
  8155  0026FA  141F               	andwf	___xxtofl@arg,w,c
  8156  0026FC  6E19               	movwf	??___xxtofl& (0+255),c
  8157  0026FE  0E00               	movlw	0
  8158  002700  1420               	andwf	___xxtofl@arg+1,w,c
  8159  002702  6E1A               	movwf	(??___xxtofl+1)& (0+255),c
  8160  002704  0E00               	movlw	0
  8161  002706  1421               	andwf	___xxtofl@arg+2,w,c
  8162  002708  6E1B               	movwf	(??___xxtofl+2)& (0+255),c
  8163  00270A  0EFF               	movlw	255
  8164  00270C  1422               	andwf	___xxtofl@arg+3,w,c
  8165  00270E  6E1C               	movwf	(??___xxtofl+3)& (0+255),c
  8166  002710  5019               	movf	??___xxtofl,w,c
  8167  002712  101A               	iorwf	??___xxtofl+1,w,c
  8168  002714  101B               	iorwf	??___xxtofl+2,w,c
  8169  002716  101C               	iorwf	??___xxtofl+3,w,c
  8170  002718  B4D8               	btfsc	status,2,c
  8171  00271A  D007               	goto	l3854
  8172  00271C  D7E1               	goto	l3846
  8173  00271E                     l3852:
  8174  00271E  061E               	decf	___xxtofl@exp,f,c
  8175  002720  90D8               	bcf	status,0,c
  8176  002722  361F               	rlcf	___xxtofl@arg,f,c
  8177  002724  3620               	rlcf	___xxtofl@arg+1,f,c
  8178  002726  3621               	rlcf	___xxtofl@arg+2,f,c
  8179  002728  3622               	rlcf	___xxtofl@arg+3,f,c
  8180  00272A                     l3854:
  8181  00272A  BE21               	btfsc	___xxtofl@arg+2,7,c
  8182  00272C  D003               	goto	l1102
  8183  00272E  0E02               	movlw	2
  8184  002730  601E               	cpfslt	___xxtofl@exp,c
  8185  002732  D7F5               	goto	l3852
  8186  002734                     l1102:
  8187  002734  B01E               	btfsc	___xxtofl@exp,0,c
  8188  002736  D008               	goto	l1103
  8189  002738  0EFF               	movlw	255
  8190  00273A  161F               	andwf	___xxtofl@arg,f,c
  8191  00273C  0EFF               	movlw	255
  8192  00273E  1620               	andwf	___xxtofl@arg+1,f,c
  8193  002740  0E7F               	movlw	127
  8194  002742  1621               	andwf	___xxtofl@arg+2,f,c
  8195  002744  0EFF               	movlw	255
  8196  002746  1622               	andwf	___xxtofl@arg+3,f,c
  8197  002748                     l1103:
  8198  002748  90D8               	bcf	status,0,c
  8199  00274A  321E               	rrcf	___xxtofl@exp,f,c
  8200  00274C  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
  8201  002750  6A1A               	clrf	(??___xxtofl+1)& (0+255),c
  8202  002752  6A1B               	clrf	(??___xxtofl+2)& (0+255),c
  8203  002754  6A1C               	clrf	(??___xxtofl+3)& (0+255),c
  8204  002756  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
  8205  00275A  6A1B               	clrf	??___xxtofl+2,c
  8206  00275C  6A1A               	clrf	??___xxtofl+1,c
  8207  00275E  6A19               	clrf	??___xxtofl,c
  8208  002760  5019               	movf	??___xxtofl,w,c
  8209  002762  121F               	iorwf	___xxtofl@arg,f,c
  8210  002764  501A               	movf	??___xxtofl+1,w,c
  8211  002766  1220               	iorwf	___xxtofl@arg+1,f,c
  8212  002768  501B               	movf	??___xxtofl+2,w,c
  8213  00276A  1221               	iorwf	___xxtofl@arg+2,f,c
  8214  00276C  501C               	movf	??___xxtofl+3,w,c
  8215  00276E  1222               	iorwf	___xxtofl@arg+3,f,c
  8216  002770  501D               	movf	___xxtofl@sign,w,c
  8217  002772  A4D8               	btfss	status,2,c
  8218  002774  AE18               	btfss	___xxtofl@val+3,7,c
  8219  002776  D001               	goto	l3866
  8220  002778  8E22               	bsf	___xxtofl@arg+3,7,c
  8221  00277A                     l3866:
  8222  00277A  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
  8223  00277E  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
  8224  002782  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
  8225  002786  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
  8226  00278A  0012               	return	
  8227  00278C                     __end_of___xxtofl:
  8228                           	opt stack 0
  8229                           tblptru	equ	0xFF8
  8230                           tblptrh	equ	0xFF7
  8231                           tblptrl	equ	0xFF6
  8232                           tablat	equ	0xFF5
  8233                           prodh	equ	0xFF4
  8234                           prodl	equ	0xFF3
  8235                           intcon	equ	0xFF2
  8236                           intcon2	equ	0xFF1
  8237                           intcon3	equ	0xFF0
  8238                           postinc0	equ	0xFEE
  8239                           wreg	equ	0xFE8
  8240                           postdec1	equ	0xFE5
  8241                           fsr1l	equ	0xFE1
  8242                           indf2	equ	0xFDF
  8243                           postinc2	equ	0xFDE
  8244                           postdec2	equ	0xFDD
  8245                           fsr2h	equ	0xFDA
  8246                           fsr2l	equ	0xFD9
  8247                           status	equ	0xFD8
  8248                           
  8249 ;; *************** function ___wmul *****************
  8250 ;; Defined at:
  8251 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  multiplier      2   14[COMRAM] unsigned int 
  8254 ;;  multiplicand    2   16[COMRAM] unsigned int 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  product         2   18[COMRAM] unsigned int 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2   14[COMRAM] unsigned int 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0, prodl, prodh
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;Total ram usage:        6 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    3
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_read_adc_voltage
  8277 ;;		_sprintf
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text18
  8282  003166                     __ptext18:
  8283                           	opt stack 0
  8284  003166                     ___wmul:
  8285                           	opt stack 26
  8286                           
  8287                           ;incstack = 0
  8288  003166  500F               	movf	___wmul@multiplier,w,c
  8289  003168  0211               	mulwf	___wmul@multiplicand,c
  8290  00316A  CFF3 F013          	movff	prodl,___wmul@product
  8291  00316E  CFF4 F014          	movff	prodh,___wmul@product+1
  8292  003172  500F               	movf	___wmul@multiplier,w,c
  8293  003174  0212               	mulwf	___wmul@multiplicand+1,c
  8294  003176  50F3               	movf	prodl,w,c
  8295  003178  2614               	addwf	___wmul@product+1,f,c
  8296  00317A  5010               	movf	___wmul@multiplier+1,w,c
  8297  00317C  0211               	mulwf	___wmul@multiplicand,c
  8298  00317E  50F3               	movf	prodl,w,c
  8299  003180  2614               	addwf	___wmul@product+1,f,c
  8300  003182  C013  F00F         	movff	___wmul@product,?___wmul
  8301  003186  C014  F010         	movff	___wmul@product+1,?___wmul+1
  8302  00318A  0012               	return	
  8303  00318C                     __end_of___wmul:
  8304                           	opt stack 0
  8305                           tblptru	equ	0xFF8
  8306                           tblptrh	equ	0xFF7
  8307                           tblptrl	equ	0xFF6
  8308                           tablat	equ	0xFF5
  8309                           prodh	equ	0xFF4
  8310                           prodl	equ	0xFF3
  8311                           intcon	equ	0xFF2
  8312                           intcon2	equ	0xFF1
  8313                           intcon3	equ	0xFF0
  8314                           postinc0	equ	0xFEE
  8315                           wreg	equ	0xFE8
  8316                           postdec1	equ	0xFE5
  8317                           fsr1l	equ	0xFE1
  8318                           indf2	equ	0xFDF
  8319                           postinc2	equ	0xFDE
  8320                           postdec2	equ	0xFDD
  8321                           fsr2h	equ	0xFDA
  8322                           fsr2l	equ	0xFD9
  8323                           status	equ	0xFD8
  8324                           
  8325 ;; *************** function ___llmod *****************
  8326 ;; Defined at:
  8327 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  dividend        4   27[COMRAM] unsigned long 
  8330 ;;  divisor         4   31[COMRAM] unsigned long 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  counter         1   35[COMRAM] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  4   27[COMRAM] unsigned long 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8342 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;Total ram usage:        9 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    3
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_sprintf
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text19
  8357  002ECA                     __ptext19:
  8358                           	opt stack 0
  8359  002ECA                     ___llmod:
  8360                           	opt stack 25
  8361                           
  8362                           ;incstack = 0
  8363  002ECA  5020               	movf	___llmod@divisor,w,c
  8364  002ECC  1021               	iorwf	___llmod@divisor+1,w,c
  8365  002ECE  1022               	iorwf	___llmod@divisor+2,w,c
  8366  002ED0  1023               	iorwf	___llmod@divisor+3,w,c
  8367  002ED2  B4D8               	btfsc	status,2,c
  8368  002ED4  D024               	goto	l896
  8369  002ED6  0E01               	movlw	1
  8370  002ED8  6E24               	movwf	___llmod@counter,c
  8371  002EDA  D006               	goto	l3818
  8372  002EDC                     l3816:
  8373  002EDC  90D8               	bcf	status,0,c
  8374  002EDE  3620               	rlcf	___llmod@divisor,f,c
  8375  002EE0  3621               	rlcf	___llmod@divisor+1,f,c
  8376  002EE2  3622               	rlcf	___llmod@divisor+2,f,c
  8377  002EE4  3623               	rlcf	___llmod@divisor+3,f,c
  8378  002EE6  2A24               	incf	___llmod@counter,f,c
  8379  002EE8                     l3818:
  8380  002EE8  AE23               	btfss	___llmod@divisor+3,7,c
  8381  002EEA  D7F8               	goto	l3816
  8382  002EEC                     l3820:
  8383  002EEC  5020               	movf	___llmod@divisor,w,c
  8384  002EEE  5C1C               	subwf	___llmod@dividend,w,c
  8385  002EF0  5021               	movf	___llmod@divisor+1,w,c
  8386  002EF2  581D               	subwfb	___llmod@dividend+1,w,c
  8387  002EF4  5022               	movf	___llmod@divisor+2,w,c
  8388  002EF6  581E               	subwfb	___llmod@dividend+2,w,c
  8389  002EF8  5023               	movf	___llmod@divisor+3,w,c
  8390  002EFA  581F               	subwfb	___llmod@dividend+3,w,c
  8391  002EFC  A0D8               	btfss	status,0,c
  8392  002EFE  D008               	goto	l3824
  8393  002F00  5020               	movf	___llmod@divisor,w,c
  8394  002F02  5E1C               	subwf	___llmod@dividend,f,c
  8395  002F04  5021               	movf	___llmod@divisor+1,w,c
  8396  002F06  5A1D               	subwfb	___llmod@dividend+1,f,c
  8397  002F08  5022               	movf	___llmod@divisor+2,w,c
  8398  002F0A  5A1E               	subwfb	___llmod@dividend+2,f,c
  8399  002F0C  5023               	movf	___llmod@divisor+3,w,c
  8400  002F0E  5A1F               	subwfb	___llmod@dividend+3,f,c
  8401  002F10                     l3824:
  8402  002F10  90D8               	bcf	status,0,c
  8403  002F12  3223               	rrcf	___llmod@divisor+3,f,c
  8404  002F14  3222               	rrcf	___llmod@divisor+2,f,c
  8405  002F16  3221               	rrcf	___llmod@divisor+1,f,c
  8406  002F18  3220               	rrcf	___llmod@divisor,f,c
  8407  002F1A  2E24               	decfsz	___llmod@counter,f,c
  8408  002F1C  D7E7               	goto	l3820
  8409  002F1E                     l896:
  8410  002F1E  C01C  F01C         	movff	___llmod@dividend,?___llmod
  8411  002F22  C01D  F01D         	movff	___llmod@dividend+1,?___llmod+1
  8412  002F26  C01E  F01E         	movff	___llmod@dividend+2,?___llmod+2
  8413  002F2A  C01F  F01F         	movff	___llmod@dividend+3,?___llmod+3
  8414  002F2E  0012               	return		;funcret
  8415  002F30                     __end_of___llmod:
  8416                           	opt stack 0
  8417                           tblptru	equ	0xFF8
  8418                           tblptrh	equ	0xFF7
  8419                           tblptrl	equ	0xFF6
  8420                           tablat	equ	0xFF5
  8421                           prodh	equ	0xFF4
  8422                           prodl	equ	0xFF3
  8423                           intcon	equ	0xFF2
  8424                           intcon2	equ	0xFF1
  8425                           intcon3	equ	0xFF0
  8426                           postinc0	equ	0xFEE
  8427                           wreg	equ	0xFE8
  8428                           postdec1	equ	0xFE5
  8429                           fsr1l	equ	0xFE1
  8430                           indf2	equ	0xFDF
  8431                           postinc2	equ	0xFDE
  8432                           postdec2	equ	0xFDD
  8433                           fsr2h	equ	0xFDA
  8434                           fsr2l	equ	0xFD9
  8435                           status	equ	0xFD8
  8436                           
  8437 ;; *************** function ___lldiv *****************
  8438 ;; Defined at:
  8439 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  dividend        4   14[COMRAM] unsigned long 
  8442 ;;  divisor         4   18[COMRAM] unsigned long 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  quotient        4   22[COMRAM] unsigned long 
  8445 ;;  counter         1   26[COMRAM] unsigned char 
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  4   14[COMRAM] unsigned long 
  8448 ;; Registers used:
  8449 ;;		wreg, status,2, status,0
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8455 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;Total ram usage:       13 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    3
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_sprintf
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text20
  8470  002D6E                     __ptext20:
  8471                           	opt stack 0
  8472  002D6E                     ___lldiv:
  8473                           	opt stack 25
  8474                           
  8475                           ;incstack = 0
  8476  002D6E  0E00               	movlw	0
  8477  002D70  6E17               	movwf	___lldiv@quotient,c
  8478  002D72  0E00               	movlw	0
  8479  002D74  6E18               	movwf	___lldiv@quotient+1,c
  8480  002D76  0E00               	movlw	0
  8481  002D78  6E19               	movwf	___lldiv@quotient+2,c
  8482  002D7A  0E00               	movlw	0
  8483  002D7C  6E1A               	movwf	___lldiv@quotient+3,c
  8484  002D7E  5013               	movf	___lldiv@divisor,w,c
  8485  002D80  1014               	iorwf	___lldiv@divisor+1,w,c
  8486  002D82  1015               	iorwf	___lldiv@divisor+2,w,c
  8487  002D84  1016               	iorwf	___lldiv@divisor+3,w,c
  8488  002D86  B4D8               	btfsc	status,2,c
  8489  002D88  D02A               	goto	l886
  8490  002D8A  0E01               	movlw	1
  8491  002D8C  6E1B               	movwf	___lldiv@counter,c
  8492  002D8E  D006               	goto	l3798
  8493  002D90                     l3796:
  8494  002D90  90D8               	bcf	status,0,c
  8495  002D92  3613               	rlcf	___lldiv@divisor,f,c
  8496  002D94  3614               	rlcf	___lldiv@divisor+1,f,c
  8497  002D96  3615               	rlcf	___lldiv@divisor+2,f,c
  8498  002D98  3616               	rlcf	___lldiv@divisor+3,f,c
  8499  002D9A  2A1B               	incf	___lldiv@counter,f,c
  8500  002D9C                     l3798:
  8501  002D9C  AE16               	btfss	___lldiv@divisor+3,7,c
  8502  002D9E  D7F8               	goto	l3796
  8503  002DA0                     l3800:
  8504  002DA0  90D8               	bcf	status,0,c
  8505  002DA2  3617               	rlcf	___lldiv@quotient,f,c
  8506  002DA4  3618               	rlcf	___lldiv@quotient+1,f,c
  8507  002DA6  3619               	rlcf	___lldiv@quotient+2,f,c
  8508  002DA8  361A               	rlcf	___lldiv@quotient+3,f,c
  8509  002DAA  5013               	movf	___lldiv@divisor,w,c
  8510  002DAC  5C0F               	subwf	___lldiv@dividend,w,c
  8511  002DAE  5014               	movf	___lldiv@divisor+1,w,c
  8512  002DB0  5810               	subwfb	___lldiv@dividend+1,w,c
  8513  002DB2  5015               	movf	___lldiv@divisor+2,w,c
  8514  002DB4  5811               	subwfb	___lldiv@dividend+2,w,c
  8515  002DB6  5016               	movf	___lldiv@divisor+3,w,c
  8516  002DB8  5812               	subwfb	___lldiv@dividend+3,w,c
  8517  002DBA  A0D8               	btfss	status,0,c
  8518  002DBC  D009               	goto	l3808
  8519  002DBE  5013               	movf	___lldiv@divisor,w,c
  8520  002DC0  5E0F               	subwf	___lldiv@dividend,f,c
  8521  002DC2  5014               	movf	___lldiv@divisor+1,w,c
  8522  002DC4  5A10               	subwfb	___lldiv@dividend+1,f,c
  8523  002DC6  5015               	movf	___lldiv@divisor+2,w,c
  8524  002DC8  5A11               	subwfb	___lldiv@dividend+2,f,c
  8525  002DCA  5016               	movf	___lldiv@divisor+3,w,c
  8526  002DCC  5A12               	subwfb	___lldiv@dividend+3,f,c
  8527  002DCE  8017               	bsf	___lldiv@quotient,0,c
  8528  002DD0                     l3808:
  8529  002DD0  90D8               	bcf	status,0,c
  8530  002DD2  3216               	rrcf	___lldiv@divisor+3,f,c
  8531  002DD4  3215               	rrcf	___lldiv@divisor+2,f,c
  8532  002DD6  3214               	rrcf	___lldiv@divisor+1,f,c
  8533  002DD8  3213               	rrcf	___lldiv@divisor,f,c
  8534  002DDA  2E1B               	decfsz	___lldiv@counter,f,c
  8535  002DDC  D7E1               	goto	l3800
  8536  002DDE                     l886:
  8537  002DDE  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  8538  002DE2  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  8539  002DE6  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  8540  002DEA  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  8541  002DEE  0012               	return		;funcret
  8542  002DF0                     __end_of___lldiv:
  8543                           	opt stack 0
  8544                           tblptru	equ	0xFF8
  8545                           tblptrh	equ	0xFF7
  8546                           tblptrl	equ	0xFF6
  8547                           tablat	equ	0xFF5
  8548                           prodh	equ	0xFF4
  8549                           prodl	equ	0xFF3
  8550                           intcon	equ	0xFF2
  8551                           intcon2	equ	0xFF1
  8552                           intcon3	equ	0xFF0
  8553                           postinc0	equ	0xFEE
  8554                           wreg	equ	0xFE8
  8555                           postdec1	equ	0xFE5
  8556                           fsr1l	equ	0xFE1
  8557                           indf2	equ	0xFDF
  8558                           postinc2	equ	0xFDE
  8559                           postdec2	equ	0xFDD
  8560                           fsr2h	equ	0xFDA
  8561                           fsr2l	equ	0xFD9
  8562                           status	equ	0xFD8
  8563                           
  8564 ;; *************** function ___fltol *****************
  8565 ;; Defined at:
  8566 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  f1              4   62[COMRAM] unsigned long 
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;  exp1            1   71[COMRAM] unsigned char 
  8571 ;;  sign1           1   70[COMRAM] unsigned char 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  4   62[COMRAM] long 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;Total ram usage:       10 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    3
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_sprintf
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text21
  8596  002B06                     __ptext21:
  8597                           	opt stack 0
  8598  002B06                     ___fltol:
  8599                           	opt stack 25
  8600                           
  8601                           ;incstack = 0
  8602  002B06  3441               	rlcf	___fltol@f1+2,w,c
  8603  002B08  3442               	rlcf	___fltol@f1+3,w,c
  8604  002B0A  6E48               	movwf	___fltol@exp1,c
  8605  002B0C  5048               	movf	___fltol@exp1,w,c
  8606  002B0E  A4D8               	btfss	status,2,c
  8607  002B10  D009               	goto	l3752
  8608  002B12  0E00               	movlw	0
  8609  002B14  6E3F               	movwf	?___fltol,c
  8610  002B16  0E00               	movlw	0
  8611  002B18  6E40               	movwf	?___fltol+1,c
  8612  002B1A  0E00               	movlw	0
  8613  002B1C  6E41               	movwf	?___fltol+2,c
  8614  002B1E  0E00               	movlw	0
  8615  002B20  6E42               	movwf	?___fltol+3,c
  8616  002B22  0012               	return	
  8617  002B24                     l3752:
  8618  002B24  C03F  F043         	movff	___fltol@f1,??___fltol
  8619  002B28  C040  F044         	movff	___fltol@f1+1,??___fltol+1
  8620  002B2C  C041  F045         	movff	___fltol@f1+2,??___fltol+2
  8621  002B30  C042  F046         	movff	___fltol@f1+3,??___fltol+3
  8622  002B34  0E20               	movlw	32
  8623  002B36  D005               	goto	u3940
  8624  002B38                     u3945:
  8625  002B38  90D8               	bcf	status,0,c
  8626  002B3A  3246               	rrcf	??___fltol+3,f,c
  8627  002B3C  3245               	rrcf	??___fltol+2,f,c
  8628  002B3E  3244               	rrcf	??___fltol+1,f,c
  8629  002B40  3243               	rrcf	??___fltol,f,c
  8630  002B42                     u3940:
  8631  002B42  2EE8               	decfsz	wreg,f,c
  8632  002B44  D7F9               	goto	u3945
  8633  002B46  5043               	movf	??___fltol,w,c
  8634  002B48  6E47               	movwf	___fltol@sign1,c
  8635  002B4A  8E41               	bsf	___fltol@f1+2,7,c
  8636  002B4C  0EFF               	movlw	255
  8637  002B4E  163F               	andwf	___fltol@f1,f,c
  8638  002B50  0EFF               	movlw	255
  8639  002B52  1640               	andwf	___fltol@f1+1,f,c
  8640  002B54  0EFF               	movlw	255
  8641  002B56  1641               	andwf	___fltol@f1+2,f,c
  8642  002B58  0E00               	movlw	0
  8643  002B5A  1642               	andwf	___fltol@f1+3,f,c
  8644  002B5C  0E96               	movlw	150
  8645  002B5E  5E48               	subwf	___fltol@exp1,f,c
  8646  002B60  AE48               	btfss	___fltol@exp1,7,c
  8647  002B62  D016               	goto	l3772
  8648  002B64  5048               	movf	___fltol@exp1,w,c
  8649  002B66  0A80               	xorlw	128
  8650  002B68  0F97               	addlw	151
  8651  002B6A  B0D8               	btfsc	status,0,c
  8652  002B6C  D009               	goto	l3768
  8653  002B6E  0E00               	movlw	0
  8654  002B70  6E3F               	movwf	?___fltol,c
  8655  002B72  0E00               	movlw	0
  8656  002B74  6E40               	movwf	?___fltol+1,c
  8657  002B76  0E00               	movlw	0
  8658  002B78  6E41               	movwf	?___fltol+2,c
  8659  002B7A  0E00               	movlw	0
  8660  002B7C  6E42               	movwf	?___fltol+3,c
  8661  002B7E  0012               	return	
  8662  002B80                     l3768:
  8663  002B80  90D8               	bcf	status,0,c
  8664  002B82  3242               	rrcf	___fltol@f1+3,f,c
  8665  002B84  3241               	rrcf	___fltol@f1+2,f,c
  8666  002B86  3240               	rrcf	___fltol@f1+1,f,c
  8667  002B88  323F               	rrcf	___fltol@f1,f,c
  8668  002B8A  3E48               	incfsz	___fltol@exp1,f,c
  8669  002B8C  D7F9               	goto	l3768
  8670  002B8E  D015               	goto	l3782
  8671  002B90                     l3772:
  8672  002B90  0E1F               	movlw	31
  8673  002B92  6448               	cpfsgt	___fltol@exp1,c
  8674  002B94  D00F               	goto	l3780
  8675  002B96  0E00               	movlw	0
  8676  002B98  6E3F               	movwf	?___fltol,c
  8677  002B9A  0E00               	movlw	0
  8678  002B9C  6E40               	movwf	?___fltol+1,c
  8679  002B9E  0E00               	movlw	0
  8680  002BA0  6E41               	movwf	?___fltol+2,c
  8681  002BA2  0E00               	movlw	0
  8682  002BA4  6E42               	movwf	?___fltol+3,c
  8683  002BA6  0012               	return	
  8684  002BA8                     l3778:
  8685  002BA8  90D8               	bcf	status,0,c
  8686  002BAA  363F               	rlcf	___fltol@f1,f,c
  8687  002BAC  3640               	rlcf	___fltol@f1+1,f,c
  8688  002BAE  3641               	rlcf	___fltol@f1+2,f,c
  8689  002BB0  3642               	rlcf	___fltol@f1+3,f,c
  8690  002BB2  0648               	decf	___fltol@exp1,f,c
  8691  002BB4                     l3780:
  8692  002BB4  5048               	movf	___fltol@exp1,w,c
  8693  002BB6  A4D8               	btfss	status,2,c
  8694  002BB8  D7F7               	goto	l3778
  8695  002BBA                     l3782:
  8696  002BBA  5047               	movf	___fltol@sign1,w,c
  8697  002BBC  B4D8               	btfsc	status,2,c
  8698  002BBE  D008               	goto	l3786
  8699  002BC0  1E42               	comf	___fltol@f1+3,f,c
  8700  002BC2  1E41               	comf	___fltol@f1+2,f,c
  8701  002BC4  1E40               	comf	___fltol@f1+1,f,c
  8702  002BC6  6C3F               	negf	___fltol@f1,c
  8703  002BC8  0E00               	movlw	0
  8704  002BCA  2240               	addwfc	___fltol@f1+1,f,c
  8705  002BCC  2241               	addwfc	___fltol@f1+2,f,c
  8706  002BCE  2242               	addwfc	___fltol@f1+3,f,c
  8707  002BD0                     l3786:
  8708  002BD0  C03F  F03F         	movff	___fltol@f1,?___fltol
  8709  002BD4  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  8710  002BD8  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  8711  002BDC  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  8712  002BE0  0012               	return	
  8713  002BE2                     __end_of___fltol:
  8714                           	opt stack 0
  8715                           tblptru	equ	0xFF8
  8716                           tblptrh	equ	0xFF7
  8717                           tblptrl	equ	0xFF6
  8718                           tablat	equ	0xFF5
  8719                           prodh	equ	0xFF4
  8720                           prodl	equ	0xFF3
  8721                           intcon	equ	0xFF2
  8722                           intcon2	equ	0xFF1
  8723                           intcon3	equ	0xFF0
  8724                           postinc0	equ	0xFEE
  8725                           wreg	equ	0xFE8
  8726                           postdec1	equ	0xFE5
  8727                           fsr1l	equ	0xFE1
  8728                           indf2	equ	0xFDF
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           fsr2h	equ	0xFDA
  8732                           fsr2l	equ	0xFD9
  8733                           status	equ	0xFD8
  8734                           
  8735 ;; *************** function ___flsub *****************
  8736 ;; Defined at:
  8737 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  b               4   86[COMRAM] long 
  8740 ;;  a               4   90[COMRAM] long 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  4   86[COMRAM] long 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8752 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;Total ram usage:        8 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    4
  8759 ;; This function calls:
  8760 ;;		___fladd
  8761 ;; This function is called by:
  8762 ;;		_sprintf
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text22
  8767  002FDC                     __ptext22:
  8768                           	opt stack 0
  8769  002FDC                     ___flsub:
  8770                           	opt stack 24
  8771                           
  8772                           ;incstack = 0
  8773  002FDC  0E00               	movlw	0
  8774  002FDE  1A5B               	xorwf	___flsub@a,f,c
  8775  002FE0  0E00               	movlw	0
  8776  002FE2  1A5C               	xorwf	___flsub@a+1,f,c
  8777  002FE4  0E00               	movlw	0
  8778  002FE6  1A5D               	xorwf	___flsub@a+2,f,c
  8779  002FE8  0E80               	movlw	128
  8780  002FEA  1A5E               	xorwf	___flsub@a+3,f,c
  8781  002FEC  C057  F043         	movff	___flsub@b,___fladd@b
  8782  002FF0  C058  F044         	movff	___flsub@b+1,___fladd@b+1
  8783  002FF4  C059  F045         	movff	___flsub@b+2,___fladd@b+2
  8784  002FF8  C05A  F046         	movff	___flsub@b+3,___fladd@b+3
  8785  002FFC  C05B  F047         	movff	___flsub@a,___fladd@a
  8786  003000  C05C  F048         	movff	___flsub@a+1,___fladd@a+1
  8787  003004  C05D  F049         	movff	___flsub@a+2,___fladd@a+2
  8788  003008  C05E  F04A         	movff	___flsub@a+3,___fladd@a+3
  8789  00300C  EC83  F00D         	call	___fladd	;wreg free
  8790  003010  C043  F057         	movff	?___fladd,?___flsub
  8791  003014  C044  F058         	movff	?___fladd+1,?___flsub+1
  8792  003018  C045  F059         	movff	?___fladd+2,?___flsub+2
  8793  00301C  C046  F05A         	movff	?___fladd+3,?___flsub+3
  8794  003020  0012               	return	
  8795  003022                     __end_of___flsub:
  8796                           	opt stack 0
  8797                           tblptru	equ	0xFF8
  8798                           tblptrh	equ	0xFF7
  8799                           tblptrl	equ	0xFF6
  8800                           tablat	equ	0xFF5
  8801                           prodh	equ	0xFF4
  8802                           prodl	equ	0xFF3
  8803                           intcon	equ	0xFF2
  8804                           intcon2	equ	0xFF1
  8805                           intcon3	equ	0xFF0
  8806                           postinc0	equ	0xFEE
  8807                           wreg	equ	0xFE8
  8808                           postdec1	equ	0xFE5
  8809                           fsr1l	equ	0xFE1
  8810                           indf2	equ	0xFDF
  8811                           postinc2	equ	0xFDE
  8812                           postdec2	equ	0xFDD
  8813                           fsr2h	equ	0xFDA
  8814                           fsr2l	equ	0xFD9
  8815                           status	equ	0xFD8
  8816                           
  8817 ;; *************** function ___fladd *****************
  8818 ;; Defined at:
  8819 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  b               4   66[COMRAM] long 
  8822 ;;  a               4   70[COMRAM] long 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  grs             1   85[COMRAM] unsigned char 
  8825 ;;  bexp            1   84[COMRAM] unsigned char 
  8826 ;;  aexp            1   83[COMRAM] unsigned char 
  8827 ;;  signs           1   82[COMRAM] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  4   66[COMRAM] unsigned char 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8837 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8838 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8839 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8840 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8841 ;;Total ram usage:       20 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    3
  8844 ;; This function calls:
  8845 ;;		Nothing
  8846 ;; This function is called by:
  8847 ;;		_main
  8848 ;;		_sprintf
  8849 ;;		___flsub
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text23
  8854  001B06                     __ptext23:
  8855                           	opt stack 0
  8856  001B06                     ___fladd:
  8857                           	opt stack 24
  8858                           
  8859                           ;incstack = 0
  8860  001B06  5046               	movf	___fladd@b+3,w,c
  8861  001B08  0B80               	andlw	128
  8862  001B0A  6E53               	movwf	___fladd@signs,c
  8863  001B0C  5046               	movf	___fladd@b+3,w,c
  8864  001B0E  2446               	addwf	___fladd@b+3,w,c
  8865  001B10  6E55               	movwf	___fladd@bexp,c
  8866  001B12  BE45               	btfsc	___fladd@b+2,7,c
  8867  001B14  8055               	bsf	___fladd@bexp,0,c
  8868  001B16  5055               	movf	___fladd@bexp,w,c
  8869  001B18  B4D8               	btfsc	status,2,c
  8870  001B1A  D00D               	goto	l3106
  8871  001B1C  2855               	incf	___fladd@bexp,w,c
  8872  001B1E  A4D8               	btfss	status,2,c
  8873  001B20  D008               	goto	l3102
  8874  001B22  0E00               	movlw	0
  8875  001B24  6E43               	movwf	___fladd@b,c
  8876  001B26  0E00               	movlw	0
  8877  001B28  6E44               	movwf	___fladd@b+1,c
  8878  001B2A  0E00               	movlw	0
  8879  001B2C  6E45               	movwf	___fladd@b+2,c
  8880  001B2E  0E00               	movlw	0
  8881  001B30  6E46               	movwf	___fladd@b+3,c
  8882  001B32                     l3102:
  8883  001B32  8E45               	bsf	___fladd@b+2,7,c
  8884  001B34  D006               	goto	L11
  8885  001B36                     l3106:
  8886  001B36  0E00               	movlw	0
  8887  001B38  6E43               	movwf	___fladd@b,c
  8888  001B3A  0E00               	movlw	0
  8889  001B3C  6E44               	movwf	___fladd@b+1,c
  8890  001B3E  0E00               	movlw	0
  8891  001B40  6E45               	movwf	___fladd@b+2,c
  8892  001B42                     L11:
  8893  001B42  0E00               	movlw	0
  8894  001B44  6E46               	movwf	___fladd@b+3,c
  8895  001B46  504A               	movf	___fladd@a+3,w,c
  8896  001B48  0B80               	andlw	128
  8897  001B4A  6E54               	movwf	___fladd@aexp,c
  8898  001B4C  5053               	movf	___fladd@signs,w,c
  8899  001B4E  1854               	xorwf	___fladd@aexp,w,c
  8900  001B50  A4D8               	btfss	status,2,c
  8901  001B52  8C53               	bsf	___fladd@signs,6,c
  8902  001B54  504A               	movf	___fladd@a+3,w,c
  8903  001B56  244A               	addwf	___fladd@a+3,w,c
  8904  001B58  6E54               	movwf	___fladd@aexp,c
  8905  001B5A  BE49               	btfsc	___fladd@a+2,7,c
  8906  001B5C  8054               	bsf	___fladd@aexp,0,c
  8907  001B5E  5054               	movf	___fladd@aexp,w,c
  8908  001B60  B4D8               	btfsc	status,2,c
  8909  001B62  D00D               	goto	l3130
  8910  001B64  2854               	incf	___fladd@aexp,w,c
  8911  001B66  A4D8               	btfss	status,2,c
  8912  001B68  D008               	goto	l3126
  8913  001B6A  0E00               	movlw	0
  8914  001B6C  6E47               	movwf	___fladd@a,c
  8915  001B6E  0E00               	movlw	0
  8916  001B70  6E48               	movwf	___fladd@a+1,c
  8917  001B72  0E00               	movlw	0
  8918  001B74  6E49               	movwf	___fladd@a+2,c
  8919  001B76  0E00               	movlw	0
  8920  001B78  6E4A               	movwf	___fladd@a+3,c
  8921  001B7A                     l3126:
  8922  001B7A  8E49               	bsf	___fladd@a+2,7,c
  8923  001B7C  D006               	goto	L12
  8924  001B7E                     l3130:
  8925  001B7E  0E00               	movlw	0
  8926  001B80  6E47               	movwf	___fladd@a,c
  8927  001B82  0E00               	movlw	0
  8928  001B84  6E48               	movwf	___fladd@a+1,c
  8929  001B86  0E00               	movlw	0
  8930  001B88  6E49               	movwf	___fladd@a+2,c
  8931  001B8A                     L12:
  8932  001B8A  0E00               	movlw	0
  8933  001B8C  6E4A               	movwf	___fladd@a+3,c
  8934  001B8E  5055               	movf	___fladd@bexp,w,c
  8935  001B90  5C54               	subwf	___fladd@aexp,w,c
  8936  001B92  B0D8               	btfsc	status,0,c
  8937  001B94  D022               	goto	l3168
  8938  001B96  AC53               	btfss	___fladd@signs,6,c
  8939  001B98  D002               	goto	l3138
  8940  001B9A  0E80               	movlw	128
  8941  001B9C  1A53               	xorwf	___fladd@signs,f,c
  8942  001B9E                     l3138:
  8943  001B9E  C055  F056         	movff	___fladd@bexp,___fladd@grs
  8944  001BA2  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  8945  001BA6  C056  F054         	movff	___fladd@grs,___fladd@aexp
  8946  001BAA  C043  F056         	movff	___fladd@b,___fladd@grs
  8947  001BAE  C047  F043         	movff	___fladd@a,___fladd@b
  8948  001BB2  C056  F047         	movff	___fladd@grs,___fladd@a
  8949  001BB6  C044  F056         	movff	___fladd@b+1,___fladd@grs
  8950  001BBA  C048  F044         	movff	___fladd@a+1,___fladd@b+1
  8951  001BBE  C056  F048         	movff	___fladd@grs,___fladd@a+1
  8952  001BC2  C045  F056         	movff	___fladd@b+2,___fladd@grs
  8953  001BC6  C049  F045         	movff	___fladd@a+2,___fladd@b+2
  8954  001BCA  C056  F049         	movff	___fladd@grs,___fladd@a+2
  8955  001BCE  C046  F056         	movff	___fladd@b+3,___fladd@grs
  8956  001BD2  C04A  F046         	movff	___fladd@a+3,___fladd@b+3
  8957  001BD6  C056  F04A         	movff	___fladd@grs,___fladd@a+3
  8958  001BDA                     l3168:
  8959  001BDA  0E00               	movlw	0
  8960  001BDC  6E56               	movwf	___fladd@grs,c
  8961  001BDE  5055               	movf	___fladd@bexp,w,c
  8962  001BE0  6E4B               	movwf	??___fladd& (0+255),c
  8963  001BE2  6A4C               	clrf	(??___fladd+1)& (0+255),c
  8964  001BE4  1E4B               	comf	??___fladd,f,c
  8965  001BE6  1E4C               	comf	??___fladd+1,f,c
  8966  001BE8  4A4B               	infsnz	??___fladd,f,c
  8967  001BEA  2A4C               	incf	??___fladd+1,f,c
  8968  001BEC  5054               	movf	___fladd@aexp,w,c
  8969  001BEE  6E4D               	movwf	(??___fladd+2)& (0+255),c
  8970  001BF0  6A4E               	clrf	(??___fladd+3)& (0+255),c
  8971  001BF2  504B               	movf	??___fladd,w,c
  8972  001BF4  264D               	addwf	??___fladd+2,f,c
  8973  001BF6  504C               	movf	??___fladd+1,w,c
  8974  001BF8  224E               	addwfc	??___fladd+3,f,c
  8975  001BFA  BE4E               	btfsc	??___fladd+3,7,c
  8976  001BFC  D02C               	goto	l981
  8977  001BFE  504E               	movf	??___fladd+3,w,c
  8978  001C00  E104               	bnz	u3010
  8979  001C02  0E1A               	movlw	26
  8980  001C04  5C4D               	subwf	??___fladd+2,w,c
  8981  001C06  A0D8               	btfss	status,0,c
  8982  001C08  D026               	goto	l981
  8983  001C0A                     u3010:
  8984  001C0A  5043               	movf	___fladd@b,w,c
  8985  001C0C  1044               	iorwf	___fladd@b+1,w,c
  8986  001C0E  1045               	iorwf	___fladd@b+2,w,c
  8987  001C10  1046               	iorwf	___fladd@b+3,w,c
  8988  001C12  B4D8               	btfsc	status,2,c
  8989  001C14  D002               	goto	u3020
  8990  001C16  0E01               	movlw	1
  8991  001C18  D001               	goto	u3030
  8992  001C1A                     u3020:
  8993  001C1A  0E00               	movlw	0
  8994  001C1C                     u3030:
  8995  001C1C  6E56               	movwf	___fladd@grs,c
  8996  001C1E  0E00               	movlw	0
  8997  001C20  6E43               	movwf	___fladd@b,c
  8998  001C22  0E00               	movlw	0
  8999  001C24  6E44               	movwf	___fladd@b+1,c
  9000  001C26  0E00               	movlw	0
  9001  001C28  6E45               	movwf	___fladd@b+2,c
  9002  001C2A  0E00               	movlw	0
  9003  001C2C  6E46               	movwf	___fladd@b+3,c
  9004  001C2E  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  9005  001C32  D015               	goto	l980
  9006  001C34                     l982:
  9007  001C34  A056               	btfss	___fladd@grs,0,c
  9008  001C36  D005               	goto	l3180
  9009  001C38  90D8               	bcf	status,0,c
  9010  001C3A  3056               	rrcf	___fladd@grs,w,c
  9011  001C3C  0901               	iorlw	1
  9012  001C3E  6E56               	movwf	___fladd@grs,c
  9013  001C40  D002               	goto	l3182
  9014  001C42                     l3180:
  9015  001C42  90D8               	bcf	status,0,c
  9016  001C44  3256               	rrcf	___fladd@grs,f,c
  9017  001C46                     l3182:
  9018  001C46  B043               	btfsc	___fladd@b,0,c
  9019  001C48  8E56               	bsf	___fladd@grs,7,c
  9020  001C4A  3446               	rlcf	___fladd@b+3,w,c
  9021  001C4C  3246               	rrcf	___fladd@b+3,f,c
  9022  001C4E  3245               	rrcf	___fladd@b+2,f,c
  9023  001C50  3244               	rrcf	___fladd@b+1,f,c
  9024  001C52  3243               	rrcf	___fladd@b,f,c
  9025  001C54  2A55               	incf	___fladd@bexp,f,c
  9026  001C56                     l981:
  9027  001C56  5054               	movf	___fladd@aexp,w,c
  9028  001C58  5C55               	subwf	___fladd@bexp,w,c
  9029  001C5A  A0D8               	btfss	status,0,c
  9030  001C5C  D7EB               	goto	l982
  9031  001C5E                     l980:
  9032  001C5E  BC53               	btfsc	___fladd@signs,6,c
  9033  001C60  D029               	goto	l3214
  9034  001C62  5055               	movf	___fladd@bexp,w,c
  9035  001C64  A4D8               	btfss	status,2,c
  9036  001C66  D009               	goto	l3196
  9037  001C68  0E00               	movlw	0
  9038  001C6A  6E43               	movwf	?___fladd,c
  9039  001C6C  0E00               	movlw	0
  9040  001C6E  6E44               	movwf	?___fladd+1,c
  9041  001C70  0E00               	movlw	0
  9042  001C72  6E45               	movwf	?___fladd+2,c
  9043  001C74  0E00               	movlw	0
  9044  001C76  6E46               	movwf	?___fladd+3,c
  9045  001C78  0012               	return	
  9046  001C7A                     l3196:
  9047  001C7A  5047               	movf	___fladd@a,w,c
  9048  001C7C  2643               	addwf	___fladd@b,f,c
  9049  001C7E  5048               	movf	___fladd@a+1,w,c
  9050  001C80  2244               	addwfc	___fladd@b+1,f,c
  9051  001C82  5049               	movf	___fladd@a+2,w,c
  9052  001C84  2245               	addwfc	___fladd@b+2,f,c
  9053  001C86  504A               	movf	___fladd@a+3,w,c
  9054  001C88  2246               	addwfc	___fladd@b+3,f,c
  9055  001C8A  A046               	btfss	___fladd@b+3,0,c
  9056  001C8C  D083               	goto	l3250
  9057  001C8E  A056               	btfss	___fladd@grs,0,c
  9058  001C90  D006               	goto	l3204
  9059  001C92  90D8               	bcf	status,0,c
  9060  001C94  3256               	rrcf	___fladd@grs,f,c
  9061  001C96  5056               	movf	___fladd@grs,w,c
  9062  001C98  0901               	iorlw	1
  9063  001C9A  6E56               	movwf	___fladd@grs,c
  9064  001C9C  D002               	goto	l3206
  9065  001C9E                     l3204:
  9066  001C9E  90D8               	bcf	status,0,c
  9067  001CA0  3256               	rrcf	___fladd@grs,f,c
  9068  001CA2                     l3206:
  9069  001CA2  B043               	btfsc	___fladd@b,0,c
  9070  001CA4  8E56               	bsf	___fladd@grs,7,c
  9071  001CA6  3446               	rlcf	___fladd@b+3,w,c
  9072  001CA8  3246               	rrcf	___fladd@b+3,f,c
  9073  001CAA  3245               	rrcf	___fladd@b+2,f,c
  9074  001CAC  3244               	rrcf	___fladd@b+1,f,c
  9075  001CAE  3243               	rrcf	___fladd@b,f,c
  9076  001CB0  2A55               	incf	___fladd@bexp,f,c
  9077  001CB2  D070               	goto	l3250
  9078  001CB4                     l3214:
  9079  001CB4  5047               	movf	___fladd@a,w,c
  9080  001CB6  5C43               	subwf	___fladd@b,w,c
  9081  001CB8  5048               	movf	___fladd@a+1,w,c
  9082  001CBA  5844               	subwfb	___fladd@b+1,w,c
  9083  001CBC  5049               	movf	___fladd@a+2,w,c
  9084  001CBE  5845               	subwfb	___fladd@b+2,w,c
  9085  001CC0  5046               	movf	___fladd@b+3,w,c
  9086  001CC2  0A80               	xorlw	128
  9087  001CC4  6E4B               	movwf	??___fladd& (0+255),c
  9088  001CC6  504A               	movf	___fladd@a+3,w,c
  9089  001CC8  0A80               	xorlw	128
  9090  001CCA  584B               	subwfb	??___fladd& (0+255),w,c
  9091  001CCC  B0D8               	btfsc	status,0,c
  9092  001CCE  D036               	goto	l3224
  9093  001CD0  C043  F04B         	movff	___fladd@b,??___fladd
  9094  001CD4  C044  F04C         	movff	___fladd@b+1,??___fladd+1
  9095  001CD8  C045  F04D         	movff	___fladd@b+2,??___fladd+2
  9096  001CDC  C046  F04E         	movff	___fladd@b+3,??___fladd+3
  9097  001CE0  1E4B               	comf	??___fladd,f,c
  9098  001CE2  1E4C               	comf	??___fladd+1,f,c
  9099  001CE4  1E4D               	comf	??___fladd+2,f,c
  9100  001CE6  1E4E               	comf	??___fladd+3,f,c
  9101  001CE8  2A4B               	incf	??___fladd,f,c
  9102  001CEA  0E00               	movlw	0
  9103  001CEC  224C               	addwfc	??___fladd+1,f,c
  9104  001CEE  224D               	addwfc	??___fladd+2,f,c
  9105  001CF0  224E               	addwfc	??___fladd+3,f,c
  9106  001CF2  5047               	movf	___fladd@a,w,c
  9107  001CF4  244B               	addwf	??___fladd,w,c
  9108  001CF6  6E4F               	movwf	(??___fladd+4)& (0+255),c
  9109  001CF8  5048               	movf	___fladd@a+1,w,c
  9110  001CFA  204C               	addwfc	??___fladd+1,w,c
  9111  001CFC  6E50               	movwf	(??___fladd+5)& (0+255),c
  9112  001CFE  5049               	movf	___fladd@a+2,w,c
  9113  001D00  204D               	addwfc	??___fladd+2,w,c
  9114  001D02  6E51               	movwf	(??___fladd+6)& (0+255),c
  9115  001D04  504A               	movf	___fladd@a+3,w,c
  9116  001D06  204E               	addwfc	??___fladd+3,w,c
  9117  001D08  6E52               	movwf	(??___fladd+7)& (0+255),c
  9118  001D0A  0EFF               	movlw	255
  9119  001D0C  244F               	addwf	??___fladd+4,w,c
  9120  001D0E  6E43               	movwf	___fladd@b,c
  9121  001D10  0EFF               	movlw	255
  9122  001D12  2050               	addwfc	??___fladd+5,w,c
  9123  001D14  6E44               	movwf	___fladd@b+1,c
  9124  001D16  0EFF               	movlw	255
  9125  001D18  2051               	addwfc	??___fladd+6,w,c
  9126  001D1A  6E45               	movwf	___fladd@b+2,c
  9127  001D1C  0EFF               	movlw	255
  9128  001D1E  2052               	addwfc	??___fladd+7,w,c
  9129  001D20  6E46               	movwf	___fladd@b+3,c
  9130  001D22  0E80               	movlw	128
  9131  001D24  1A53               	xorwf	___fladd@signs,f,c
  9132  001D26  6C56               	negf	___fladd@grs,c
  9133  001D28  5056               	movf	___fladd@grs,w,c
  9134  001D2A  A4D8               	btfss	status,2,c
  9135  001D2C  D00F               	goto	l997
  9136  001D2E  0E01               	movlw	1
  9137  001D30  2643               	addwf	___fladd@b,f,c
  9138  001D32  0E00               	movlw	0
  9139  001D34  2244               	addwfc	___fladd@b+1,f,c
  9140  001D36  2245               	addwfc	___fladd@b+2,f,c
  9141  001D38  2246               	addwfc	___fladd@b+3,f,c
  9142  001D3A  D008               	goto	l997
  9143  001D3C                     l3224:
  9144  001D3C  5047               	movf	___fladd@a,w,c
  9145  001D3E  5E43               	subwf	___fladd@b,f,c
  9146  001D40  5048               	movf	___fladd@a+1,w,c
  9147  001D42  5A44               	subwfb	___fladd@b+1,f,c
  9148  001D44  5049               	movf	___fladd@a+2,w,c
  9149  001D46  5A45               	subwfb	___fladd@b+2,f,c
  9150  001D48  504A               	movf	___fladd@a+3,w,c
  9151  001D4A  5A46               	subwfb	___fladd@b+3,f,c
  9152  001D4C                     l997:
  9153  001D4C  5043               	movf	___fladd@b,w,c
  9154  001D4E  1044               	iorwf	___fladd@b+1,w,c
  9155  001D50  1045               	iorwf	___fladd@b+2,w,c
  9156  001D52  1046               	iorwf	___fladd@b+3,w,c
  9157  001D54  A4D8               	btfss	status,2,c
  9158  001D56  D01C               	goto	l3248
  9159  001D58  5056               	movf	___fladd@grs,w,c
  9160  001D5A  A4D8               	btfss	status,2,c
  9161  001D5C  D019               	goto	l3248
  9162  001D5E  0E00               	movlw	0
  9163  001D60  6E43               	movwf	?___fladd,c
  9164  001D62  0E00               	movlw	0
  9165  001D64  6E44               	movwf	?___fladd+1,c
  9166  001D66  0E00               	movlw	0
  9167  001D68  6E45               	movwf	?___fladd+2,c
  9168  001D6A  0E00               	movlw	0
  9169  001D6C  6E46               	movwf	?___fladd+3,c
  9170  001D6E  0012               	return	
  9171  001D70                     l3232:
  9172  001D70  90D8               	bcf	status,0,c
  9173  001D72  3643               	rlcf	___fladd@b,f,c
  9174  001D74  3644               	rlcf	___fladd@b+1,f,c
  9175  001D76  3645               	rlcf	___fladd@b+2,f,c
  9176  001D78  3646               	rlcf	___fladd@b+3,f,c
  9177  001D7A  BE56               	btfsc	___fladd@grs,7,c
  9178  001D7C  8043               	bsf	___fladd@b,0,c
  9179  001D7E  A056               	btfss	___fladd@grs,0,c
  9180  001D80  D002               	goto	l3242
  9181  001D82  80D8               	bsf	status,0,c
  9182  001D84  D001               	goto	L13
  9183  001D86                     l3242:
  9184  001D86  90D8               	bcf	status,0,c
  9185  001D88                     L13:
  9186  001D88  3656               	rlcf	___fladd@grs,f,c
  9187  001D8A  5055               	movf	___fladd@bexp,w,c
  9188  001D8C  A4D8               	btfss	status,2,c
  9189  001D8E  0655               	decf	___fladd@bexp,f,c
  9190  001D90                     l3248:
  9191  001D90  AE45               	btfss	___fladd@b+2,7,c
  9192  001D92  D7EE               	goto	l3232
  9193  001D94                     l3250:
  9194  001D94  0E00               	movlw	0
  9195  001D96  6E54               	movwf	___fladd@aexp,c
  9196  001D98  AE56               	btfss	___fladd@grs,7,c
  9197  001D9A  D00A               	goto	l1006
  9198  001D9C  C056  F04B         	movff	___fladd@grs,??___fladd
  9199  001DA0  0E7F               	movlw	127
  9200  001DA2  164B               	andwf	??___fladd,f,c
  9201  001DA4  A4D8               	btfss	status,2,c
  9202  001DA6  D002               	goto	l3258
  9203  001DA8  A043               	btfss	___fladd@b,0,c
  9204  001DAA  D002               	goto	l1006
  9205  001DAC                     l3258:
  9206  001DAC  0E01               	movlw	1
  9207  001DAE  6E54               	movwf	___fladd@aexp,c
  9208  001DB0                     l1006:
  9209  001DB0  5054               	movf	___fladd@aexp,w,c
  9210  001DB2  B4D8               	btfsc	status,2,c
  9211  001DB4  D020               	goto	l3268
  9212  001DB6  0E01               	movlw	1
  9213  001DB8  2643               	addwf	___fladd@b,f,c
  9214  001DBA  0E00               	movlw	0
  9215  001DBC  2244               	addwfc	___fladd@b+1,f,c
  9216  001DBE  2245               	addwfc	___fladd@b+2,f,c
  9217  001DC0  2246               	addwfc	___fladd@b+3,f,c
  9218  001DC2  A046               	btfss	___fladd@b+3,0,c
  9219  001DC4  D018               	goto	l3268
  9220  001DC6  C043  F04B         	movff	___fladd@b,??___fladd
  9221  001DCA  C044  F04C         	movff	___fladd@b+1,??___fladd+1
  9222  001DCE  C045  F04D         	movff	___fladd@b+2,??___fladd+2
  9223  001DD2  C046  F04E         	movff	___fladd@b+3,??___fladd+3
  9224  001DD6  344E               	rlcf	??___fladd+3,w,c
  9225  001DD8  324E               	rrcf	??___fladd+3,f,c
  9226  001DDA  324D               	rrcf	??___fladd+2,f,c
  9227  001DDC  324C               	rrcf	??___fladd+1,f,c
  9228  001DDE  324B               	rrcf	??___fladd,f,c
  9229  001DE0  C04B  F043         	movff	??___fladd,___fladd@b
  9230  001DE4  C04C  F044         	movff	??___fladd+1,___fladd@b+1
  9231  001DE8  C04D  F045         	movff	??___fladd+2,___fladd@b+2
  9232  001DEC  C04E  F046         	movff	??___fladd+3,___fladd@b+3
  9233  001DF0  2855               	incf	___fladd@bexp,w,c
  9234  001DF2  A4D8               	btfss	status,2,c
  9235  001DF4  2A55               	incf	___fladd@bexp,f,c
  9236  001DF6                     l3268:
  9237  001DF6  2855               	incf	___fladd@bexp,w,c
  9238  001DF8  B4D8               	btfsc	status,2,c
  9239  001DFA  D003               	goto	l3272
  9240  001DFC  5055               	movf	___fladd@bexp,w,c
  9241  001DFE  A4D8               	btfss	status,2,c
  9242  001E00  D00D               	goto	l3276
  9243  001E02                     l3272:
  9244  001E02  0E00               	movlw	0
  9245  001E04  6E43               	movwf	___fladd@b,c
  9246  001E06  0E00               	movlw	0
  9247  001E08  6E44               	movwf	___fladd@b+1,c
  9248  001E0A  0E00               	movlw	0
  9249  001E0C  6E45               	movwf	___fladd@b+2,c
  9250  001E0E  0E00               	movlw	0
  9251  001E10  6E46               	movwf	___fladd@b+3,c
  9252  001E12  5055               	movf	___fladd@bexp,w,c
  9253  001E14  A4D8               	btfss	status,2,c
  9254  001E16  D002               	goto	l3276
  9255  001E18  0E00               	movlw	0
  9256  001E1A  6E53               	movwf	___fladd@signs,c
  9257  001E1C                     l3276:
  9258  001E1C  A055               	btfss	___fladd@bexp,0,c
  9259  001E1E  D002               	goto	l3280
  9260  001E20  8E45               	bsf	___fladd@b+2,7,c
  9261  001E22  D001               	goto	l3282
  9262  001E24                     l3280:
  9263  001E24  9E45               	bcf	___fladd@b+2,7,c
  9264  001E26                     l3282:
  9265  001E26  90D8               	bcf	status,0,c
  9266  001E28  3055               	rrcf	___fladd@bexp,w,c
  9267  001E2A  6E46               	movwf	___fladd@b+3,c
  9268  001E2C  BE53               	btfsc	___fladd@signs,7,c
  9269  001E2E  8E46               	bsf	___fladd@b+3,7,c
  9270  001E30  C043  F043         	movff	___fladd@b,?___fladd
  9271  001E34  C044  F044         	movff	___fladd@b+1,?___fladd+1
  9272  001E38  C045  F045         	movff	___fladd@b+2,?___fladd+2
  9273  001E3C  C046  F046         	movff	___fladd@b+3,?___fladd+3
  9274  001E40  0012               	return	
  9275  001E42                     __end_of___fladd:
  9276                           	opt stack 0
  9277                           tblptru	equ	0xFF8
  9278                           tblptrh	equ	0xFF7
  9279                           tblptrl	equ	0xFF6
  9280                           tablat	equ	0xFF5
  9281                           prodh	equ	0xFF4
  9282                           prodl	equ	0xFF3
  9283                           intcon	equ	0xFF2
  9284                           intcon2	equ	0xFF1
  9285                           intcon3	equ	0xFF0
  9286                           postinc0	equ	0xFEE
  9287                           wreg	equ	0xFE8
  9288                           postdec1	equ	0xFE5
  9289                           fsr1l	equ	0xFE1
  9290                           indf2	equ	0xFDF
  9291                           postinc2	equ	0xFDE
  9292                           postdec2	equ	0xFDD
  9293                           fsr2h	equ	0xFDA
  9294                           fsr2l	equ	0xFD9
  9295                           status	equ	0xFD8
  9296                           
  9297 ;; *************** function ___flneg *****************
  9298 ;; Defined at:
  9299 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;  f1              4   14[COMRAM] unsigned char 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;		None
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  4   14[COMRAM] unsigned char 
  9306 ;; Registers used:
  9307 ;;		wreg, status,2, status,0
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;Total ram usage:        4 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:    3
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		_sprintf
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text24
  9328  00310A                     __ptext24:
  9329                           	opt stack 0
  9330  00310A                     ___flneg:
  9331                           	opt stack 25
  9332                           
  9333                           ;incstack = 0
  9334  00310A  500F               	movf	___flneg@f1,w,c
  9335  00310C  1010               	iorwf	___flneg@f1+1,w,c
  9336  00310E  1011               	iorwf	___flneg@f1+2,w,c
  9337  003110  1012               	iorwf	___flneg@f1+3,w,c
  9338  003112  B4D8               	btfsc	status,2,c
  9339  003114  D008               	goto	l3742
  9340  003116  0E00               	movlw	0
  9341  003118  1A0F               	xorwf	___flneg@f1,f,c
  9342  00311A  0E00               	movlw	0
  9343  00311C  1A10               	xorwf	___flneg@f1+1,f,c
  9344  00311E  0E00               	movlw	0
  9345  003120  1A11               	xorwf	___flneg@f1+2,f,c
  9346  003122  0E80               	movlw	128
  9347  003124  1A12               	xorwf	___flneg@f1+3,f,c
  9348  003126                     l3742:
  9349  003126  C00F  F00F         	movff	___flneg@f1,?___flneg
  9350  00312A  C010  F010         	movff	___flneg@f1+1,?___flneg+1
  9351  00312E  C011  F011         	movff	___flneg@f1+2,?___flneg+2
  9352  003132  C012  F012         	movff	___flneg@f1+3,?___flneg+3
  9353  003136  0012               	return	
  9354  003138                     __end_of___flneg:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           intcon	equ	0xFF2
  9363                           intcon2	equ	0xFF1
  9364                           intcon3	equ	0xFF0
  9365                           postinc0	equ	0xFEE
  9366                           wreg	equ	0xFE8
  9367                           postdec1	equ	0xFE5
  9368                           fsr1l	equ	0xFE1
  9369                           indf2	equ	0xFDF
  9370                           postinc2	equ	0xFDE
  9371                           postdec2	equ	0xFDD
  9372                           fsr2h	equ	0xFDA
  9373                           fsr2l	equ	0xFD9
  9374                           status	equ	0xFD8
  9375                           
  9376 ;; *************** function ___flge *****************
  9377 ;; Defined at:
  9378 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  ff1             4   86[COMRAM] unsigned char 
  9381 ;;  ff2             4   90[COMRAM] unsigned char 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;		None               void
  9386 ;; Registers used:
  9387 ;;		wreg, status,2, status,0
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9393 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9396 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9397 ;;Total ram usage:       12 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    3
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_main
  9404 ;;		_sprintf
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text25
  9409  0029E6                     __ptext25:
  9410                           	opt stack 0
  9411  0029E6                     ___flge:
  9412                           	opt stack 25
  9413                           
  9414                           ;incstack = 0
  9415  0029E6  0E00               	movlw	0
  9416  0029E8  1457               	andwf	___flge@ff1,w,c
  9417  0029EA  6E5F               	movwf	??___flge& (0+255),c
  9418  0029EC  0E00               	movlw	0
  9419  0029EE  1458               	andwf	___flge@ff1+1,w,c
  9420  0029F0  6E60               	movwf	(??___flge+1)& (0+255),c
  9421  0029F2  0E80               	movlw	128
  9422  0029F4  1459               	andwf	___flge@ff1+2,w,c
  9423  0029F6  6E61               	movwf	(??___flge+2)& (0+255),c
  9424  0029F8  0E7F               	movlw	127
  9425  0029FA  145A               	andwf	___flge@ff1+3,w,c
  9426  0029FC  6E62               	movwf	(??___flge+3)& (0+255),c
  9427  0029FE  505F               	movf	??___flge,w,c
  9428  002A00  1060               	iorwf	??___flge+1,w,c
  9429  002A02  1061               	iorwf	??___flge+2,w,c
  9430  002A04  1062               	iorwf	??___flge+3,w,c
  9431  002A06  A4D8               	btfss	status,2,c
  9432  002A08  D008               	goto	l3720
  9433  002A0A  0E00               	movlw	0
  9434  002A0C  6E57               	movwf	___flge@ff1,c
  9435  002A0E  0E00               	movlw	0
  9436  002A10  6E58               	movwf	___flge@ff1+1,c
  9437  002A12  0E00               	movlw	0
  9438  002A14  6E59               	movwf	___flge@ff1+2,c
  9439  002A16  0E00               	movlw	0
  9440  002A18  6E5A               	movwf	___flge@ff1+3,c
  9441  002A1A                     l3720:
  9442  002A1A  0E00               	movlw	0
  9443  002A1C  145B               	andwf	___flge@ff2,w,c
  9444  002A1E  6E5F               	movwf	??___flge& (0+255),c
  9445  002A20  0E00               	movlw	0
  9446  002A22  145C               	andwf	___flge@ff2+1,w,c
  9447  002A24  6E60               	movwf	(??___flge+1)& (0+255),c
  9448  002A26  0E80               	movlw	128
  9449  002A28  145D               	andwf	___flge@ff2+2,w,c
  9450  002A2A  6E61               	movwf	(??___flge+2)& (0+255),c
  9451  002A2C  0E7F               	movlw	127
  9452  002A2E  145E               	andwf	___flge@ff2+3,w,c
  9453  002A30  6E62               	movwf	(??___flge+3)& (0+255),c
  9454  002A32  505F               	movf	??___flge,w,c
  9455  002A34  1060               	iorwf	??___flge+1,w,c
  9456  002A36  1061               	iorwf	??___flge+2,w,c
  9457  002A38  1062               	iorwf	??___flge+3,w,c
  9458  002A3A  A4D8               	btfss	status,2,c
  9459  002A3C  D008               	goto	l3724
  9460  002A3E  0E00               	movlw	0
  9461  002A40  6E5B               	movwf	___flge@ff2,c
  9462  002A42  0E00               	movlw	0
  9463  002A44  6E5C               	movwf	___flge@ff2+1,c
  9464  002A46  0E00               	movlw	0
  9465  002A48  6E5D               	movwf	___flge@ff2+2,c
  9466  002A4A  0E00               	movlw	0
  9467  002A4C  6E5E               	movwf	___flge@ff2+3,c
  9468  002A4E                     l3724:
  9469  002A4E  AE5A               	btfss	___flge@ff1+3,7,c
  9470  002A50  D01D               	goto	l3728
  9471  002A52  C057  F05F         	movff	___flge@ff1,??___flge
  9472  002A56  C058  F060         	movff	___flge@ff1+1,??___flge+1
  9473  002A5A  C059  F061         	movff	___flge@ff1+2,??___flge+2
  9474  002A5E  C05A  F062         	movff	___flge@ff1+3,??___flge+3
  9475  002A62  1E5F               	comf	??___flge,f,c
  9476  002A64  1E60               	comf	??___flge+1,f,c
  9477  002A66  1E61               	comf	??___flge+2,f,c
  9478  002A68  1E62               	comf	??___flge+3,f,c
  9479  002A6A  2A5F               	incf	??___flge,f,c
  9480  002A6C  0E00               	movlw	0
  9481  002A6E  2260               	addwfc	??___flge+1,f,c
  9482  002A70  2261               	addwfc	??___flge+2,f,c
  9483  002A72  2262               	addwfc	??___flge+3,f,c
  9484  002A74  0E00               	movlw	0
  9485  002A76  245F               	addwf	??___flge,w,c
  9486  002A78  6E57               	movwf	___flge@ff1,c
  9487  002A7A  0E00               	movlw	0
  9488  002A7C  2060               	addwfc	??___flge+1,w,c
  9489  002A7E  6E58               	movwf	___flge@ff1+1,c
  9490  002A80  0E00               	movlw	0
  9491  002A82  2061               	addwfc	??___flge+2,w,c
  9492  002A84  6E59               	movwf	___flge@ff1+2,c
  9493  002A86  0E80               	movlw	128
  9494  002A88  2062               	addwfc	??___flge+3,w,c
  9495  002A8A  6E5A               	movwf	___flge@ff1+3,c
  9496  002A8C                     l3728:
  9497  002A8C  AE5E               	btfss	___flge@ff2+3,7,c
  9498  002A8E  D01D               	goto	l717
  9499  002A90  C05B  F05F         	movff	___flge@ff2,??___flge
  9500  002A94  C05C  F060         	movff	___flge@ff2+1,??___flge+1
  9501  002A98  C05D  F061         	movff	___flge@ff2+2,??___flge+2
  9502  002A9C  C05E  F062         	movff	___flge@ff2+3,??___flge+3
  9503  002AA0  1E5F               	comf	??___flge,f,c
  9504  002AA2  1E60               	comf	??___flge+1,f,c
  9505  002AA4  1E61               	comf	??___flge+2,f,c
  9506  002AA6  1E62               	comf	??___flge+3,f,c
  9507  002AA8  2A5F               	incf	??___flge,f,c
  9508  002AAA  0E00               	movlw	0
  9509  002AAC  2260               	addwfc	??___flge+1,f,c
  9510  002AAE  2261               	addwfc	??___flge+2,f,c
  9511  002AB0  2262               	addwfc	??___flge+3,f,c
  9512  002AB2  0E00               	movlw	0
  9513  002AB4  245F               	addwf	??___flge,w,c
  9514  002AB6  6E5B               	movwf	___flge@ff2,c
  9515  002AB8  0E00               	movlw	0
  9516  002ABA  2060               	addwfc	??___flge+1,w,c
  9517  002ABC  6E5C               	movwf	___flge@ff2+1,c
  9518  002ABE  0E00               	movlw	0
  9519  002AC0  2061               	addwfc	??___flge+2,w,c
  9520  002AC2  6E5D               	movwf	___flge@ff2+2,c
  9521  002AC4  0E80               	movlw	128
  9522  002AC6  2062               	addwfc	??___flge+3,w,c
  9523  002AC8  6E5E               	movwf	___flge@ff2+3,c
  9524  002ACA                     l717:
  9525  002ACA  0E00               	movlw	0
  9526  002ACC  1A57               	xorwf	___flge@ff1,f,c
  9527  002ACE  0E00               	movlw	0
  9528  002AD0  1A58               	xorwf	___flge@ff1+1,f,c
  9529  002AD2  0E00               	movlw	0
  9530  002AD4  1A59               	xorwf	___flge@ff1+2,f,c
  9531  002AD6  0E80               	movlw	128
  9532  002AD8  1A5A               	xorwf	___flge@ff1+3,f,c
  9533  002ADA  0E00               	movlw	0
  9534  002ADC  1A5B               	xorwf	___flge@ff2,f,c
  9535  002ADE  0E00               	movlw	0
  9536  002AE0  1A5C               	xorwf	___flge@ff2+1,f,c
  9537  002AE2  0E00               	movlw	0
  9538  002AE4  1A5D               	xorwf	___flge@ff2+2,f,c
  9539  002AE6  0E80               	movlw	128
  9540  002AE8  1A5E               	xorwf	___flge@ff2+3,f,c
  9541  002AEA  505B               	movf	___flge@ff2,w,c
  9542  002AEC  5C57               	subwf	___flge@ff1,w,c
  9543  002AEE  505C               	movf	___flge@ff2+1,w,c
  9544  002AF0  5858               	subwfb	___flge@ff1+1,w,c
  9545  002AF2  505D               	movf	___flge@ff2+2,w,c
  9546  002AF4  5859               	subwfb	___flge@ff1+2,w,c
  9547  002AF6  505E               	movf	___flge@ff2+3,w,c
  9548  002AF8  585A               	subwfb	___flge@ff1+3,w,c
  9549  002AFA  B0D8               	btfsc	status,0,c
  9550  002AFC  D002               	goto	l3734
  9551  002AFE  90D8               	bcf	status,0,c
  9552  002B00  0012               	return	
  9553  002B02                     l3734:
  9554  002B02  80D8               	bsf	status,0,c
  9555  002B04  0012               	return	
  9556  002B06                     __end_of___flge:
  9557                           	opt stack 0
  9558                           tblptru	equ	0xFF8
  9559                           tblptrh	equ	0xFF7
  9560                           tblptrl	equ	0xFF6
  9561                           tablat	equ	0xFF5
  9562                           prodh	equ	0xFF4
  9563                           prodl	equ	0xFF3
  9564                           intcon	equ	0xFF2
  9565                           intcon2	equ	0xFF1
  9566                           intcon3	equ	0xFF0
  9567                           postinc0	equ	0xFEE
  9568                           wreg	equ	0xFE8
  9569                           postdec1	equ	0xFE5
  9570                           fsr1l	equ	0xFE1
  9571                           indf2	equ	0xFDF
  9572                           postinc2	equ	0xFDE
  9573                           postdec2	equ	0xFDD
  9574                           fsr2h	equ	0xFDA
  9575                           fsr2l	equ	0xFD9
  9576                           status	equ	0xFD8
  9577                           
  9578 ;; *************** function _lcd_puts *****************
  9579 ;; Defined at:
  9580 ;;		line 120 in file "lcd_x8.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  s               2   28[COMRAM] PTR unsigned char 
  9583 ;;		 -> display@LCD(64), display@LCDP(64), 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;		None
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1    wreg      void 
  9588 ;; Registers used:
  9589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;Total ram usage:        2 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    8
  9602 ;; This function calls:
  9603 ;;		_lcd_putc
  9604 ;; This function is called by:
  9605 ;;		_display
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text26
  9610  00318C                     __ptext26:
  9611                           	opt stack 0
  9612  00318C                     _lcd_puts:
  9613                           	opt stack 21
  9614                           
  9615                           ;lcd_x8.c: 121: while (*s) {
  9616                           
  9617                           ;incstack = 0
  9618  00318C  D009               	goto	l3876
  9619  00318E                     l3872:
  9620                           
  9621                           ;lcd_x8.c: 122: lcd_putc(*s);
  9622  00318E  C01D  FFD9         	movff	lcd_puts@s,fsr2l
  9623  003192  C01E  FFDA         	movff	lcd_puts@s+1,fsr2h
  9624  003196  50DF               	movf	indf2,w,c
  9625  003198  ECC3  F017         	call	_lcd_putc
  9626                           
  9627                           ;lcd_x8.c: 123: s++;
  9628  00319C  4A1D               	infsnz	lcd_puts@s,f,c
  9629  00319E  2A1E               	incf	lcd_puts@s+1,f,c
  9630  0031A0                     l3876:
  9631  0031A0  C01D  FFD9         	movff	lcd_puts@s,fsr2l
  9632  0031A4  C01E  FFDA         	movff	lcd_puts@s+1,fsr2h
  9633  0031A8  50DF               	movf	indf2,w,c
  9634  0031AA  B4D8               	btfsc	status,2,c
  9635  0031AC  0012               	return	
  9636  0031AE  D7EF               	goto	l3872
  9637  0031B0                     __end_of_lcd_puts:
  9638                           	opt stack 0
  9639                           tblptru	equ	0xFF8
  9640                           tblptrh	equ	0xFF7
  9641                           tblptrl	equ	0xFF6
  9642                           tablat	equ	0xFF5
  9643                           prodh	equ	0xFF4
  9644                           prodl	equ	0xFF3
  9645                           intcon	equ	0xFF2
  9646                           intcon2	equ	0xFF1
  9647                           intcon3	equ	0xFF0
  9648                           postinc0	equ	0xFEE
  9649                           wreg	equ	0xFE8
  9650                           postdec1	equ	0xFE5
  9651                           fsr1l	equ	0xFE1
  9652                           indf2	equ	0xFDF
  9653                           postinc2	equ	0xFDE
  9654                           postdec2	equ	0xFDD
  9655                           fsr2h	equ	0xFDA
  9656                           fsr2l	equ	0xFD9
  9657                           status	equ	0xFD8
  9658                           
  9659 ;; *************** function _lcd_putc *****************
  9660 ;; Defined at:
  9661 ;;		line 106 in file "lcd_x8.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  c               1    wreg     unsigned char 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  c               1   27[COMRAM] unsigned char 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		wreg, status,2, status,0, cstack
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;Total ram usage:        1 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:    7
  9682 ;; This function calls:
  9683 ;;		_delay_ms
  9684 ;;		_lcd_gotoxy
  9685 ;;		_lcd_send_byte
  9686 ;; This function is called by:
  9687 ;;		_lcd_puts
  9688 ;;		_display
  9689 ;; This function uses a non-reentrant model
  9690 ;;
  9691                           
  9692                           	psect	text27
  9693  002F86                     __ptext27:
  9694                           	opt stack 0
  9695  002F86                     _lcd_putc:
  9696                           	opt stack 21
  9697                           
  9698                           ;incstack = 0
  9699                           ;lcd_putc@c stored from wreg
  9700  002F86  6E1C               	movwf	lcd_putc@c,c
  9701                           
  9702                           ;lcd_x8.c: 107: switch (c) {
  9703  002F88  D01E               	goto	l3514
  9704  002F8A                     l3504:
  9705  002F8A  0E01               	movlw	1
  9706  002F8C  6E17               	movwf	lcd_send_byte@n,c
  9707  002F8E  0E00               	movlw	0
  9708  002F90  EC4F  F018         	call	_lcd_send_byte
  9709                           
  9710                           ;lcd_x8.c: 109: delay_ms(2);
  9711  002F94  0E00               	movlw	0
  9712  002F96  6E10               	movwf	delay_ms@n+1,c
  9713  002F98  0E02               	movlw	2
  9714  002F9A  6E0F               	movwf	delay_ms@n,c
  9715  002F9C  ECD8  F018         	call	_delay_ms	;wreg free
  9716                           
  9717                           ;lcd_x8.c: 110: break;
  9718  002FA0  0012               	return	
  9719  002FA2                     l3506:
  9720  002FA2  0E02               	movlw	2
  9721  002FA4  6E19               	movwf	lcd_gotoxy@y,c
  9722  002FA6  0E01               	movlw	1
  9723  002FA8  EC11  F018         	call	_lcd_gotoxy
  9724                           
  9725                           ;lcd_x8.c: 112: break;
  9726  002FAC  0012               	return	
  9727  002FAE                     l3508:
  9728  002FAE  0E10               	movlw	16
  9729  002FB0  6E17               	movwf	lcd_send_byte@n,c
  9730  002FB2  0E00               	movlw	0
  9731  002FB4  EC4F  F018         	call	_lcd_send_byte
  9732                           
  9733                           ;lcd_x8.c: 114: break;
  9734  002FB8  0012               	return	
  9735  002FBA                     l3510:
  9736  002FBA  C01C  F017         	movff	lcd_putc@c,lcd_send_byte@n
  9737  002FBE  0E01               	movlw	1
  9738  002FC0  EC4F  F018         	call	_lcd_send_byte
  9739                           
  9740                           ;lcd_x8.c: 117: }
  9741                           
  9742                           ;lcd_x8.c: 116: break;
  9743  002FC4  0012               	return	
  9744  002FC6                     l3514:
  9745  002FC6  501C               	movf	lcd_putc@c,w,c
  9746                           
  9747                           ; Switch size 1, requested type "space"
  9748                           ; Number of cases is 3, Range of values is 8 to 12
  9749                           ; switch strategies available:
  9750                           ; Name         Instructions Cycles
  9751                           ; simple_byte           10     6 (average)
  9752                           ;	Chosen strategy is simple_byte
  9753  002FC8  0A08               	xorlw	8	; case 8
  9754  002FCA  B4D8               	btfsc	status,2,c
  9755  002FCC  D7F0               	goto	l3508
  9756  002FCE  0A02               	xorlw	2	; case 10
  9757  002FD0  B4D8               	btfsc	status,2,c
  9758  002FD2  D7E7               	goto	l3506
  9759  002FD4  0A06               	xorlw	6	; case 12
  9760  002FD6  B4D8               	btfsc	status,2,c
  9761  002FD8  D7D8               	goto	l3504
  9762  002FDA  D7EF               	goto	l3510
  9763  002FDC                     __end_of_lcd_putc:
  9764                           	opt stack 0
  9765                           tblptru	equ	0xFF8
  9766                           tblptrh	equ	0xFF7
  9767                           tblptrl	equ	0xFF6
  9768                           tablat	equ	0xFF5
  9769                           prodh	equ	0xFF4
  9770                           prodl	equ	0xFF3
  9771                           intcon	equ	0xFF2
  9772                           intcon2	equ	0xFF1
  9773                           intcon3	equ	0xFF0
  9774                           postinc0	equ	0xFEE
  9775                           wreg	equ	0xFE8
  9776                           postdec1	equ	0xFE5
  9777                           fsr1l	equ	0xFE1
  9778                           indf2	equ	0xFDF
  9779                           postinc2	equ	0xFDE
  9780                           postdec2	equ	0xFDD
  9781                           fsr2h	equ	0xFDA
  9782                           fsr2l	equ	0xFD9
  9783                           status	equ	0xFD8
  9784                           
  9785 ;; *************** function _lcd_gotoxy *****************
  9786 ;; Defined at:
  9787 ;;		line 89 in file "lcd_x8.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  x               1    wreg     unsigned char 
  9790 ;;  y               1   24[COMRAM] unsigned char 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;  x               1   25[COMRAM] unsigned char 
  9793 ;;  address         1   26[COMRAM] unsigned char 
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1    wreg      void 
  9796 ;; Registers used:
  9797 ;;		wreg, status,2, status,0, cstack
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9803 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9807 ;;Total ram usage:        3 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:    6
  9810 ;; This function calls:
  9811 ;;		_lcd_send_byte
  9812 ;; This function is called by:
  9813 ;;		_lcd_putc
  9814 ;;		_display
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text28
  9819  003022                     __ptext28:
  9820                           	opt stack 0
  9821  003022                     _lcd_gotoxy:
  9822                           	opt stack 21
  9823                           
  9824                           ;incstack = 0
  9825                           ;lcd_gotoxy@x stored from wreg
  9826  003022  6E1A               	movwf	lcd_gotoxy@x,c
  9827                           
  9828                           ;lcd_x8.c: 90: unsigned char address;
  9829                           ;lcd_x8.c: 92: switch (y) {
  9830  003024  D009               	goto	l3084
  9831  003026                     l3074:
  9832  003026  0E80               	movlw	128
  9833  003028  D005               	goto	L16
  9834  00302A                     l3076:
  9835  00302A  0EC0               	movlw	192
  9836  00302C  D003               	goto	L16
  9837  00302E                     l3078:
  9838  00302E  0E90               	movlw	144
  9839  003030  D001               	goto	L16
  9840  003032                     l3080:
  9841  003032  0ED0               	movlw	208
  9842  003034                     L16:
  9843  003034  6E1B               	movwf	lcd_gotoxy@address,c
  9844                           
  9845                           ;lcd_x8.c: 101: }
  9846                           
  9847                           ;lcd_x8.c: 100: break;
  9848  003036  D00D               	goto	l3086
  9849  003038                     l3084:
  9850  003038  5019               	movf	lcd_gotoxy@y,w,c
  9851                           
  9852                           ; Switch size 1, requested type "space"
  9853                           ; Number of cases is 4, Range of values is 1 to 4
  9854                           ; switch strategies available:
  9855                           ; Name         Instructions Cycles
  9856                           ; simple_byte           13     7 (average)
  9857                           ;	Chosen strategy is simple_byte
  9858  00303A  0A01               	xorlw	1	; case 1
  9859  00303C  B4D8               	btfsc	status,2,c
  9860  00303E  D7F3               	goto	l3074
  9861  003040  0A03               	xorlw	3	; case 2
  9862  003042  B4D8               	btfsc	status,2,c
  9863  003044  D7F2               	goto	l3076
  9864  003046  0A01               	xorlw	1	; case 3
  9865  003048  B4D8               	btfsc	status,2,c
  9866  00304A  D7F1               	goto	l3078
  9867  00304C  0A07               	xorlw	7	; case 4
  9868  00304E  B4D8               	btfsc	status,2,c
  9869  003050  D7F0               	goto	l3080
  9870  003052                     l3086:
  9871                           
  9872                           ;lcd_x8.c: 102: address += x - 1;
  9873  003052  041A               	decf	lcd_gotoxy@x,w,c
  9874  003054  261B               	addwf	lcd_gotoxy@address,f,c
  9875                           
  9876                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
  9877  003056  501B               	movf	lcd_gotoxy@address,w,c
  9878  003058  0980               	iorlw	128
  9879  00305A  6E17               	movwf	lcd_send_byte@n,c
  9880  00305C  0E00               	movlw	0
  9881  00305E  EC4F  F018         	call	_lcd_send_byte
  9882  003062  0012               	return		;funcret
  9883  003064                     __end_of_lcd_gotoxy:
  9884                           	opt stack 0
  9885                           tblptru	equ	0xFF8
  9886                           tblptrh	equ	0xFF7
  9887                           tblptrl	equ	0xFF6
  9888                           tablat	equ	0xFF5
  9889                           prodh	equ	0xFF4
  9890                           prodl	equ	0xFF3
  9891                           intcon	equ	0xFF2
  9892                           intcon2	equ	0xFF1
  9893                           intcon3	equ	0xFF0
  9894                           postinc0	equ	0xFEE
  9895                           wreg	equ	0xFE8
  9896                           postdec1	equ	0xFE5
  9897                           fsr1l	equ	0xFE1
  9898                           indf2	equ	0xFDF
  9899                           postinc2	equ	0xFDE
  9900                           postdec2	equ	0xFDD
  9901                           fsr2h	equ	0xFDA
  9902                           fsr2l	equ	0xFD9
  9903                           status	equ	0xFD8
  9904                           
  9905 ;; *************** function _lcd_send_byte *****************
  9906 ;; Defined at:
  9907 ;;		line 39 in file "lcd_x8.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  cm_data         1    wreg     unsigned char 
  9910 ;;  n               1   22[COMRAM] unsigned char 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  cm_data         1   23[COMRAM] unsigned char 
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  1    wreg      void 
  9915 ;; Registers used:
  9916 ;;		wreg, status,2, status,0, cstack
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9922 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;Total ram usage:        2 bytes
  9927 ;; Hardware stack levels used:    1
  9928 ;; Hardware stack levels required when called:    5
  9929 ;; This function calls:
  9930 ;;		_delay_cycles
  9931 ;;		_lcd_send_nibble
  9932 ;; This function is called by:
  9933 ;;		_lcd_init
  9934 ;;		_lcd_gotoxy
  9935 ;;		_lcd_putc
  9936 ;;		_main
  9937 ;;		_Lcd_Shift_Right
  9938 ;;		_Lcd_Shift_Left
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           	psect	text29
  9943  00309E                     __ptext29:
  9944                           	opt stack 0
  9945  00309E                     _lcd_send_byte:
  9946                           	opt stack 25
  9947                           
  9948                           ;incstack = 0
  9949                           ;lcd_send_byte@cm_data stored from wreg
  9950  00309E  6E18               	movwf	lcd_send_byte@cm_data,c
  9951                           
  9952                           ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
  9953  0030A0  B018               	btfsc	lcd_send_byte@cm_data,0,c
  9954  0030A2  D002               	bra	u2895
  9955  0030A4  9484               	bcf	3972,2,c	;volatile
  9956  0030A6  D001               	bra	u2896
  9957  0030A8                     u2895:
  9958  0030A8  8484               	bsf	3972,2,c	;volatile
  9959  0030AA                     u2896:
  9960                           
  9961                           ;lcd_x8.c: 44: delay_cycles(1);
  9962  0030AA  0E01               	movlw	1
  9963  0030AC  EC9C  F018         	call	_delay_cycles
  9964                           
  9965                           ;lcd_x8.c: 46: delay_cycles(1);
  9966  0030B0  0E01               	movlw	1
  9967  0030B2  EC9C  F018         	call	_delay_cycles
  9968                           
  9969                           ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
  9970  0030B6  9284               	bcf	3972,1,c	;volatile
  9971                           
  9972                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
  9973  0030B8  3817               	swapf	lcd_send_byte@n,w,c
  9974  0030BA  0B0F               	andlw	15
  9975  0030BC  ECEA  F018         	call	_lcd_send_nibble
  9976                           
  9977                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
  9978  0030C0  5017               	movf	lcd_send_byte@n,w,c
  9979  0030C2  0B0F               	andlw	15
  9980  0030C4  ECEA  F018         	call	_lcd_send_nibble
  9981                           
  9982                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
  9983  0030C8  5018               	movf	lcd_send_byte@cm_data,w,c
  9984  0030CA  B4D8               	btfsc	status,2,c
  9985  0030CC  0012               	return	
  9986  0030CE  0E32               	movlw	50
  9987  0030D0                     u6907:
  9988  0030D0  0004               	clrwdt	
  9989  0030D2  2EE8               	decfsz	wreg,f,c
  9990  0030D4  D7FD               	goto	u6907
  9991  0030D6  0012               	return	
  9992  0030D8                     __end_of_lcd_send_byte:
  9993                           	opt stack 0
  9994                           tblptru	equ	0xFF8
  9995                           tblptrh	equ	0xFF7
  9996                           tblptrl	equ	0xFF6
  9997                           tablat	equ	0xFF5
  9998                           prodh	equ	0xFF4
  9999                           prodl	equ	0xFF3
 10000                           intcon	equ	0xFF2
 10001                           intcon2	equ	0xFF1
 10002                           intcon3	equ	0xFF0
 10003                           postinc0	equ	0xFEE
 10004                           wreg	equ	0xFE8
 10005                           postdec1	equ	0xFE5
 10006                           fsr1l	equ	0xFE1
 10007                           indf2	equ	0xFDF
 10008                           postinc2	equ	0xFDE
 10009                           postdec2	equ	0xFDD
 10010                           fsr2h	equ	0xFDA
 10011                           fsr2l	equ	0xFD9
 10012                           status	equ	0xFD8
 10013                           
 10014 ;; *************** function _lcd_send_nibble *****************
 10015 ;; Defined at:
 10016 ;;		line 29 in file "lcd_x8.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;  n               1    wreg     unsigned char 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  n               1   21[COMRAM] unsigned char 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  1    wreg      void 
 10023 ;; Registers used:
 10024 ;;		wreg, status,2, status,0, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;Total ram usage:        2 bytes
 10035 ;; Hardware stack levels used:    1
 10036 ;; Hardware stack levels required when called:    4
 10037 ;; This function calls:
 10038 ;;		_delay_cycles
 10039 ;; This function is called by:
 10040 ;;		_lcd_send_byte
 10041 ;;		_lcd_init
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text30
 10046  0031D4                     __ptext30:
 10047                           	opt stack 0
 10048  0031D4                     _lcd_send_nibble:
 10049                           	opt stack 25
 10050                           
 10051                           ;incstack = 0
 10052                           ;lcd_send_nibble@n stored from wreg
 10053  0031D4  6E16               	movwf	lcd_send_nibble@n,c
 10054                           
 10055                           ;lcd_x8.c: 31: lcd.data = n;
 10056  0031D6  C016  F015         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 10057  0031DA  3A15               	swapf	??_lcd_send_nibble,f,c
 10058  0031DC  5083               	movf	3971,w,c
 10059  0031DE  1815               	xorwf	??_lcd_send_nibble,w,c
 10060  0031E0  0B0F               	andlw	-241
 10061  0031E2  1815               	xorwf	??_lcd_send_nibble,w,c
 10062  0031E4  6E83               	movwf	3971,c
 10063                           
 10064                           ;lcd_x8.c: 33: delay_cycles(1);
 10065  0031E6  0E01               	movlw	1
 10066  0031E8  EC9C  F018         	call	_delay_cycles
 10067                           
 10068                           ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
 10069  0031EC  8284               	bsf	3972,1,c	;volatile
 10070                           
 10071                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 10072  0031EE  0004               	clrwdt	
 10073  0031F0  F000               	nop		;2 cycle nop
 10074                           
 10075                           ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
 10076  0031F2  9284               	bcf	3972,1,c	;volatile
 10077  0031F4  0012               	return		;funcret
 10078  0031F6                     __end_of_lcd_send_nibble:
 10079                           	opt stack 0
 10080                           tblptru	equ	0xFF8
 10081                           tblptrh	equ	0xFF7
 10082                           tblptrl	equ	0xFF6
 10083                           tablat	equ	0xFF5
 10084                           prodh	equ	0xFF4
 10085                           prodl	equ	0xFF3
 10086                           intcon	equ	0xFF2
 10087                           intcon2	equ	0xFF1
 10088                           intcon3	equ	0xFF0
 10089                           postinc0	equ	0xFEE
 10090                           wreg	equ	0xFE8
 10091                           postdec1	equ	0xFE5
 10092                           fsr1l	equ	0xFE1
 10093                           indf2	equ	0xFDF
 10094                           postinc2	equ	0xFDE
 10095                           postdec2	equ	0xFDD
 10096                           fsr2h	equ	0xFDA
 10097                           fsr2l	equ	0xFD9
 10098                           status	equ	0xFD8
 10099                           
 10100 ;; *************** function _delay_cycles *****************
 10101 ;; Defined at:
 10102 ;;		line 20 in file "lcd_x8.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;  n               1    wreg     unsigned char 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;  n               1   17[COMRAM] unsigned char 
 10107 ;;  x               2   18[COMRAM] int 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg, status,2, status,0
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10119 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;Total ram usage:        6 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    3
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		_lcd_send_nibble
 10128 ;;		_lcd_send_byte
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text31
 10133  003138                     __ptext31:
 10134                           	opt stack 0
 10135  003138                     _delay_cycles:
 10136                           	opt stack 25
 10137                           
 10138                           ;incstack = 0
 10139                           ;delay_cycles@n stored from wreg
 10140  003138  6E12               	movwf	delay_cycles@n,c
 10141                           
 10142                           ;lcd_x8.c: 21: int x;
 10143                           ;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 10144  00313A  0E00               	movlw	0
 10145  00313C  6E14               	movwf	delay_cycles@x+1,c
 10146  00313E  0E00               	movlw	0
 10147  003140  6E13               	movwf	delay_cycles@x,c
 10148  003142  D003               	goto	l3038
 10149  003144                     l14:
 10150  003144  0004               	clrwdt		;# 
 10151  003146  4A13               	infsnz	delay_cycles@x,f,c
 10152  003148  2A14               	incf	delay_cycles@x+1,f,c
 10153  00314A                     l3038:
 10154  00314A  5012               	movf	delay_cycles@n,w,c
 10155  00314C  6E0F               	movwf	??_delay_cycles& (0+255),c
 10156  00314E  6A10               	clrf	(??_delay_cycles+1)& (0+255),c
 10157  003150  5013               	movf	delay_cycles@x,w,c
 10158  003152  5C0F               	subwf	??_delay_cycles,w,c
 10159  003154  5010               	movf	??_delay_cycles+1,w,c
 10160  003156  0A80               	xorlw	128
 10161  003158  6E11               	movwf	(??_delay_cycles+2)& (0+255),c
 10162  00315A  5014               	movf	delay_cycles@x+1,w,c
 10163  00315C  0A80               	xorlw	128
 10164  00315E  5811               	subwfb	(??_delay_cycles+2)& (0+255),w,c
 10165  003160  A0D8               	btfss	status,0,c
 10166  003162  0012               	return	
 10167  003164  D7EF               	goto	l14
 10168  003166                     __end_of_delay_cycles:
 10169                           	opt stack 0
 10170                           tblptru	equ	0xFF8
 10171                           tblptrh	equ	0xFF7
 10172                           tblptrl	equ	0xFF6
 10173                           tablat	equ	0xFF5
 10174                           prodh	equ	0xFF4
 10175                           prodl	equ	0xFF3
 10176                           intcon	equ	0xFF2
 10177                           intcon2	equ	0xFF1
 10178                           intcon3	equ	0xFF0
 10179                           postinc0	equ	0xFEE
 10180                           wreg	equ	0xFE8
 10181                           postdec1	equ	0xFE5
 10182                           fsr1l	equ	0xFE1
 10183                           indf2	equ	0xFDF
 10184                           postinc2	equ	0xFDE
 10185                           postdec2	equ	0xFDD
 10186                           fsr2h	equ	0xFDA
 10187                           fsr2l	equ	0xFD9
 10188                           status	equ	0xFD8
 10189                           
 10190 ;; *************** function _delay_ms *****************
 10191 ;; Defined at:
 10192 ;;		line 147 in file "hw.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  n               2   14[COMRAM] unsigned int 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;  i               2   16[COMRAM] int 
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  1    wreg      void 
 10199 ;; Registers used:
 10200 ;;		wreg, status,2, status,0
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;Total ram usage:        4 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:    3
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_lcd_init
 10217 ;;		_lcd_putc
 10218 ;;		_main
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text32
 10223  0031B0                     __ptext32:
 10224                           	opt stack 0
 10225  0031B0                     _delay_ms:
 10226                           	opt stack 26
 10227                           
 10228                           ;hw.c: 149: int i;
 10229                           ;hw.c: 150: for (i=0; i < n; i++){
 10230                           
 10231                           ;incstack = 0
 10232  0031B0  0E00               	movlw	0
 10233  0031B2  6E12               	movwf	delay_ms@i+1,c
 10234  0031B4  0E00               	movlw	0
 10235  0031B6  6E11               	movwf	delay_ms@i,c
 10236  0031B8  D006               	goto	l257
 10237  0031BA                     l3068:
 10238                           
 10239                           ;hw.c: 151: _delaywdt((unsigned long)((1)*(4000000UL/4000.0))) ;
 10240  0031BA  0EFA               	movlw	250
 10241  0031BC                     u6917:
 10242  0031BC  0004               	clrwdt	
 10243  0031BE  2EE8               	decfsz	wreg,f,c
 10244  0031C0  D7FD               	goto	u6917
 10245  0031C2  4A11               	infsnz	delay_ms@i,f,c
 10246  0031C4  2A12               	incf	delay_ms@i+1,f,c
 10247  0031C6                     l257:
 10248  0031C6  500F               	movf	delay_ms@n,w,c
 10249  0031C8  5C11               	subwf	delay_ms@i,w,c
 10250  0031CA  5010               	movf	delay_ms@n+1,w,c
 10251  0031CC  5812               	subwfb	delay_ms@i+1,w,c
 10252  0031CE  B0D8               	btfsc	status,0,c
 10253  0031D0  0012               	return	
 10254  0031D2  D7F3               	goto	l3068
 10255  0031D4                     __end_of_delay_ms:
 10256                           	opt stack 0
 10257                           tblptru	equ	0xFF8
 10258                           tblptrh	equ	0xFF7
 10259                           tblptrl	equ	0xFF6
 10260                           tablat	equ	0xFF5
 10261                           prodh	equ	0xFF4
 10262                           prodl	equ	0xFF3
 10263                           intcon	equ	0xFF2
 10264                           intcon2	equ	0xFF1
 10265                           intcon3	equ	0xFF0
 10266                           postinc0	equ	0xFEE
 10267                           wreg	equ	0xFE8
 10268                           postdec1	equ	0xFE5
 10269                           fsr1l	equ	0xFE1
 10270                           indf2	equ	0xFDF
 10271                           postinc2	equ	0xFDE
 10272                           postdec2	equ	0xFDD
 10273                           fsr2h	equ	0xFDA
 10274                           fsr2l	equ	0xFD9
 10275                           status	equ	0xFD8
 10276                           
 10277 ;; *************** function _highIsr *****************
 10278 ;; Defined at:
 10279 ;;		line 134 in file "hw.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;		None
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0, cstack
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10295 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10297 ;;Total ram usage:       14 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    2
 10300 ;; This function calls:
 10301 ;;		_EXT_Int0_isr
 10302 ;;		_EXT_Int1_isr
 10303 ;;		_EXT_Int2_isr
 10304 ;;		_Timer0_isr
 10305 ;; This function is called by:
 10306 ;;		Interrupt level 2
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           	psect	intcode
 10311  000008                     __pintcode:
 10312                           	opt stack 0
 10313  000008                     _highIsr:
 10314                           	opt stack 21
 10315                           
 10316                           ;incstack = 0
 10317  000008  8271               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10318  00000A  CFFA F001          	movff	pclath,??_highIsr
 10319  00000E  CFFB F002          	movff	pclatu,??_highIsr+1
 10320  000012  EDF1  F015         	call	int_func,f	;refresh shadow registers
 10321                           pclatu	equ	0xFFB
 10322                           pclath	equ	0xFFA
 10323                           tblptru	equ	0xFF8
 10324                           tblptrh	equ	0xFF7
 10325                           tblptrl	equ	0xFF6
 10326                           tablat	equ	0xFF5
 10327                           prodh	equ	0xFF4
 10328                           prodl	equ	0xFF3
 10329                           intcon	equ	0xFF2
 10330                           intcon2	equ	0xFF1
 10331                           intcon3	equ	0xFF0
 10332                           postinc0	equ	0xFEE
 10333                           wreg	equ	0xFE8
 10334                           postdec1	equ	0xFE5
 10335                           fsr1l	equ	0xFE1
 10336                           indf2	equ	0xFDF
 10337                           postinc2	equ	0xFDE
 10338                           postdec2	equ	0xFDD
 10339                           fsr2h	equ	0xFDA
 10340                           fsr2l	equ	0xFD9
 10341                           status	equ	0xFD8
 10342                           
 10343                           	psect	intcode_body
 10344  002BE2                     __pintcode_body:
 10345                           	opt stack 21
 10346  002BE2                     int_func:
 10347                           	opt stack 21
 10348  002BE2  0006               	pop		; remove dummy address from shadow register refresh
 10349  002BE4  CFE9 F003          	movff	fsr0l,??_highIsr+2
 10350  002BE8  CFEA F004          	movff	fsr0h,??_highIsr+3
 10351  002BEC  CFE1 F005          	movff	fsr1l,??_highIsr+4
 10352  002BF0  CFE2 F006          	movff	fsr1h,??_highIsr+5
 10353  002BF4  CFD9 F007          	movff	fsr2l,??_highIsr+6
 10354  002BF8  CFDA F008          	movff	fsr2h,??_highIsr+7
 10355  002BFC  CFF3 F009          	movff	prodl,??_highIsr+8
 10356  002C00  CFF4 F00A          	movff	prodh,??_highIsr+9
 10357  002C04  CFF6 F00B          	movff	tblptrl,??_highIsr+10
 10358  002C08  CFF7 F00C          	movff	tblptrh,??_highIsr+11
 10359  002C0C  CFF8 F00D          	movff	tblptru,??_highIsr+12
 10360  002C10  CFF5 F00E          	movff	tablat,??_highIsr+13
 10361                           
 10362                           ;hw.c: 137: if(INTCONbits.TMR0IF) Timer0_isr();
 10363  002C14  B4F2               	btfsc	intcon,2,c	;volatile
 10364  002C16  EC19  F019         	call	_Timer0_isr	;wreg free
 10365                           
 10366                           ;hw.c: 138: if(INTCON3bits.INT2IF)EXT_Int2_isr();
 10367  002C1A  B2F0               	btfsc	intcon3,1,c	;volatile
 10368  002C1C  EC22  F019         	call	_EXT_Int2_isr	;wreg free
 10369                           
 10370                           ;hw.c: 139: if(INTCON3bits.INT1IF)EXT_Int1_isr();
 10371  002C20  B0F0               	btfsc	intcon3,0,c	;volatile
 10372  002C22  EC2A  F019         	call	_EXT_Int1_isr	;wreg free
 10373                           
 10374                           ;hw.c: 141: if (INTCONbits.INT0IF)EXT_Int0_isr();
 10375  002C26  B2F2               	btfsc	intcon,1,c	;volatile
 10376  002C28  EC6C  F018         	call	_EXT_Int0_isr	;wreg free
 10377  002C2C  C00E  FFF5         	movff	??_highIsr+13,tablat
 10378  002C30  C00D  FFF8         	movff	??_highIsr+12,tblptru
 10379  002C34  C00C  FFF7         	movff	??_highIsr+11,tblptrh
 10380  002C38  C00B  FFF6         	movff	??_highIsr+10,tblptrl
 10381  002C3C  C00A  FFF4         	movff	??_highIsr+9,prodh
 10382  002C40  C009  FFF3         	movff	??_highIsr+8,prodl
 10383  002C44  C008  FFDA         	movff	??_highIsr+7,fsr2h
 10384  002C48  C007  FFD9         	movff	??_highIsr+6,fsr2l
 10385  002C4C  C006  FFE2         	movff	??_highIsr+5,fsr1h
 10386  002C50  C005  FFE1         	movff	??_highIsr+4,fsr1l
 10387  002C54  C004  FFEA         	movff	??_highIsr+3,fsr0h
 10388  002C58  C003  FFE9         	movff	??_highIsr+2,fsr0l
 10389  002C5C  C002  FFFB         	movff	??_highIsr+1,pclatu
 10390  002C60  C001  FFFA         	movff	??_highIsr,pclath
 10391  002C64  9271               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10392  002C66  0011               	retfie		f
 10393  002C68                     __end_of_highIsr:
 10394                           	opt stack 0
 10395                           pclatu	equ	0xFFB
 10396                           pclath	equ	0xFFA
 10397                           tblptru	equ	0xFF8
 10398                           tblptrh	equ	0xFF7
 10399                           tblptrl	equ	0xFF6
 10400                           tablat	equ	0xFF5
 10401                           prodh	equ	0xFF4
 10402                           prodl	equ	0xFF3
 10403                           intcon	equ	0xFF2
 10404                           intcon2	equ	0xFF1
 10405                           intcon3	equ	0xFF0
 10406                           postinc0	equ	0xFEE
 10407                           fsr0h	equ	0xFEA
 10408                           fsr0l	equ	0xFE9
 10409                           wreg	equ	0xFE8
 10410                           postdec1	equ	0xFE5
 10411                           fsr1h	equ	0xFE2
 10412                           fsr1l	equ	0xFE1
 10413                           indf2	equ	0xFDF
 10414                           postinc2	equ	0xFDE
 10415                           postdec2	equ	0xFDD
 10416                           fsr2h	equ	0xFDA
 10417                           fsr2l	equ	0xFD9
 10418                           status	equ	0xFD8
 10419                           
 10420 ;; *************** function _Timer0_isr *****************
 10421 ;; Defined at:
 10422 ;;		line 92 in file "hw.c"
 10423 ;; Parameters:    Size  Location     Type
 10424 ;;		None
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, status,2, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;Total ram usage:        0 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:    1
 10443 ;; This function calls:
 10444 ;;		_reloadTimer0
 10445 ;; This function is called by:
 10446 ;;		_highIsr
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text34
 10451  003232                     __ptext34:
 10452                           	opt stack 0
 10453  003232                     _Timer0_isr:
 10454                           	opt stack 21
 10455                           
 10456                           ;hw.c: 96: INTCONbits.TMR0IF=0;
 10457                           
 10458                           ;incstack = 0
 10459  003232  94F2               	bcf	intcon,2,c	;volatile
 10460                           
 10461                           ;hw.c: 99: timer_flag=1;
 10462  003234  0E00               	movlw	0
 10463  003236  0100               	movlb	0	; () banked
 10464  003238  6FAD               	movwf	(_timer_flag+1)& (0+255),b
 10465  00323A  0E01               	movlw	1
 10466  00323C  6FAC               	movwf	_timer_flag& (0+255),b
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;hw.c: 101: reloadTimer0();
 10470  00323E  EC37  F019         	call	_reloadTimer0	;wreg free
 10471  003242  0012               	return		;funcret
 10472  003244                     __end_of_Timer0_isr:
 10473                           	opt stack 0
 10474                           pclatu	equ	0xFFB
 10475                           pclath	equ	0xFFA
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           intcon	equ	0xFF2
 10483                           intcon2	equ	0xFF1
 10484                           intcon3	equ	0xFF0
 10485                           postinc0	equ	0xFEE
 10486                           fsr0h	equ	0xFEA
 10487                           fsr0l	equ	0xFE9
 10488                           wreg	equ	0xFE8
 10489                           postdec1	equ	0xFE5
 10490                           fsr1h	equ	0xFE2
 10491                           fsr1l	equ	0xFE1
 10492                           indf2	equ	0xFDF
 10493                           postinc2	equ	0xFDE
 10494                           postdec2	equ	0xFDD
 10495                           fsr2h	equ	0xFDA
 10496                           fsr2l	equ	0xFD9
 10497                           status	equ	0xFD8
 10498                           
 10499 ;; *************** function _reloadTimer0 *****************
 10500 ;; Defined at:
 10501 ;;		line 85 in file "hw.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;		None
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;		None
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;Total ram usage:        0 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_Timer0_isr
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text35
 10529  00326E                     __ptext35:
 10530                           	opt stack 0
 10531  00326E                     _reloadTimer0:
 10532                           	opt stack 21
 10533                           
 10534                           ;hw.c: 87: TMR3H = (unsigned char) ((3036 >> 8) & 0x00FF);
 10535                           
 10536                           ;incstack = 0
 10537  00326E  0E0B               	movlw	11
 10538  003270  6EB3               	movwf	4019,c	;volatile
 10539                           
 10540                           ;hw.c: 88: TMR3L = (unsigned char)(3036 & 0x00FF );
 10541  003272  0EDC               	movlw	220
 10542  003274  6EB2               	movwf	4018,c	;volatile
 10543  003276  0012               	return		;funcret
 10544  003278                     __end_of_reloadTimer0:
 10545                           	opt stack 0
 10546                           pclatu	equ	0xFFB
 10547                           pclath	equ	0xFFA
 10548                           tblptru	equ	0xFF8
 10549                           tblptrh	equ	0xFF7
 10550                           tblptrl	equ	0xFF6
 10551                           tablat	equ	0xFF5
 10552                           prodh	equ	0xFF4
 10553                           prodl	equ	0xFF3
 10554                           intcon	equ	0xFF2
 10555                           intcon2	equ	0xFF1
 10556                           intcon3	equ	0xFF0
 10557                           postinc0	equ	0xFEE
 10558                           fsr0h	equ	0xFEA
 10559                           fsr0l	equ	0xFE9
 10560                           wreg	equ	0xFE8
 10561                           postdec1	equ	0xFE5
 10562                           fsr1h	equ	0xFE2
 10563                           fsr1l	equ	0xFE1
 10564                           indf2	equ	0xFDF
 10565                           postinc2	equ	0xFDE
 10566                           postdec2	equ	0xFDD
 10567                           fsr2h	equ	0xFDA
 10568                           fsr2l	equ	0xFD9
 10569                           status	equ	0xFD8
 10570                           
 10571 ;; *************** function _EXT_Int2_isr *****************
 10572 ;; Defined at:
 10573 ;;		line 124 in file "hw.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;		None
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;		None
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      void 
 10580 ;; Registers used:
 10581 ;;		wreg, status,2
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10591 ;;Total ram usage:        0 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; This function calls:
 10594 ;;		Nothing
 10595 ;; This function is called by:
 10596 ;;		_highIsr
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text36
 10601  003244                     __ptext36:
 10602                           	opt stack 0
 10603  003244                     _EXT_Int2_isr:
 10604                           	opt stack 22
 10605                           
 10606                           ;hw.c: 126: INTCON3bits.INT2IF=0;
 10607                           
 10608                           ;incstack = 0
 10609  003244  92F0               	bcf	intcon3,1,c	;volatile
 10610                           
 10611                           ;hw.c: 127: PORTCbits.RC5=0;
 10612  003246  9A82               	bcf	3970,5,c	;volatile
 10613                           
 10614                           ;hw.c: 128: start_flag=0;
 10615  003248  0E00               	movlw	0
 10616  00324A  0101               	movlb	1	; () banked
 10617  00324C  6F93               	movwf	(_start_flag+1)& (0+255),b
 10618  00324E  0E00               	movlw	0
 10619  003250  6F92               	movwf	_start_flag& (0+255),b
 10620                           
 10621                           ; BSR set to: 1
 10622  003252  0012               	return		;funcret
 10623  003254                     __end_of_EXT_Int2_isr:
 10624                           	opt stack 0
 10625                           pclatu	equ	0xFFB
 10626                           pclath	equ	0xFFA
 10627                           tblptru	equ	0xFF8
 10628                           tblptrh	equ	0xFF7
 10629                           tblptrl	equ	0xFF6
 10630                           tablat	equ	0xFF5
 10631                           prodh	equ	0xFF4
 10632                           prodl	equ	0xFF3
 10633                           intcon	equ	0xFF2
 10634                           intcon2	equ	0xFF1
 10635                           intcon3	equ	0xFF0
 10636                           postinc0	equ	0xFEE
 10637                           fsr0h	equ	0xFEA
 10638                           fsr0l	equ	0xFE9
 10639                           wreg	equ	0xFE8
 10640                           postdec1	equ	0xFE5
 10641                           fsr1h	equ	0xFE2
 10642                           fsr1l	equ	0xFE1
 10643                           indf2	equ	0xFDF
 10644                           postinc2	equ	0xFDE
 10645                           postdec2	equ	0xFDD
 10646                           fsr2h	equ	0xFDA
 10647                           fsr2l	equ	0xFD9
 10648                           status	equ	0xFD8
 10649                           
 10650 ;; *************** function _EXT_Int1_isr *****************
 10651 ;; Defined at:
 10652 ;;		line 104 in file "hw.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;		None
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;		None
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg, status,2
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;Total ram usage:        0 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_highIsr
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           	psect	text37
 10680  003254                     __ptext37:
 10681                           	opt stack 0
 10682  003254                     _EXT_Int1_isr:
 10683                           	opt stack 22
 10684                           
 10685                           ;hw.c: 106: INTCON3bits.INT1IF=0;
 10686                           
 10687                           ; BSR set to: 1
 10688                           ;incstack = 0
 10689  003254  90F0               	bcf	intcon3,0,c	;volatile
 10690                           
 10691                           ;hw.c: 107: start_flag=1;
 10692  003256  0E00               	movlw	0
 10693  003258  0101               	movlb	1	; () banked
 10694  00325A  6F93               	movwf	(_start_flag+1)& (0+255),b
 10695  00325C  0E01               	movlw	1
 10696  00325E  6F92               	movwf	_start_flag& (0+255),b
 10697                           
 10698                           ; BSR set to: 1
 10699  003260  0012               	return		;funcret
 10700  003262                     __end_of_EXT_Int1_isr:
 10701                           	opt stack 0
 10702                           pclatu	equ	0xFFB
 10703                           pclath	equ	0xFFA
 10704                           tblptru	equ	0xFF8
 10705                           tblptrh	equ	0xFF7
 10706                           tblptrl	equ	0xFF6
 10707                           tablat	equ	0xFF5
 10708                           prodh	equ	0xFF4
 10709                           prodl	equ	0xFF3
 10710                           intcon	equ	0xFF2
 10711                           intcon2	equ	0xFF1
 10712                           intcon3	equ	0xFF0
 10713                           postinc0	equ	0xFEE
 10714                           fsr0h	equ	0xFEA
 10715                           fsr0l	equ	0xFE9
 10716                           wreg	equ	0xFE8
 10717                           postdec1	equ	0xFE5
 10718                           fsr1h	equ	0xFE2
 10719                           fsr1l	equ	0xFE1
 10720                           indf2	equ	0xFDF
 10721                           postinc2	equ	0xFDE
 10722                           postdec2	equ	0xFDD
 10723                           fsr2h	equ	0xFDA
 10724                           fsr2l	equ	0xFD9
 10725                           status	equ	0xFD8
 10726                           
 10727 ;; *************** function _EXT_Int0_isr *****************
 10728 ;; Defined at:
 10729 ;;		line 110 in file "hw.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;		None
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;		None
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  1    wreg      void 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;Total ram usage:        0 bytes
 10748 ;; Hardware stack levels used:    1
 10749 ;; This function calls:
 10750 ;;		Nothing
 10751 ;; This function is called by:
 10752 ;;		_highIsr
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           
 10756                           	psect	text38
 10757  0030D8                     __ptext38:
 10758                           	opt stack 0
 10759  0030D8                     _EXT_Int0_isr:
 10760                           	opt stack 22
 10761                           
 10762                           ;hw.c: 112: INTCONbits.INT0IF=0;
 10763                           
 10764                           ; BSR set to: 1
 10765                           ;incstack = 0
 10766  0030D8  92F2               	bcf	intcon,1,c	;volatile
 10767                           
 10768                           ;hw.c: 114: if(mode==4)
 10769  0030DA  0E04               	movlw	4
 10770  0030DC  0101               	movlb	1	; () banked
 10771  0030DE  198E               	xorwf	_mode& (0+255),w,b
 10772  0030E0  0101               	movlb	1	; () banked
 10773  0030E2  118F               	iorwf	(_mode+1)& (0+255),w,b
 10774  0030E4  A4D8               	btfss	status,2,c
 10775  0030E6  D006               	goto	i2l4416
 10776                           
 10777                           ; BSR set to: 1
 10778                           ;hw.c: 115: {
 10779                           ;hw.c: 116: mode=0;
 10780  0030E8  0E00               	movlw	0
 10781  0030EA  0101               	movlb	1	; () banked
 10782  0030EC  6F8F               	movwf	(_mode+1)& (0+255),b
 10783  0030EE  0E00               	movlw	0
 10784  0030F0  6F8E               	movwf	_mode& (0+255),b
 10785                           
 10786                           ;hw.c: 117: }
 10787  0030F2  0012               	return	
 10788  0030F4                     i2l4416:
 10789                           
 10790                           ; BSR set to: 1
 10791                           ;hw.c: 118: else
 10792                           ;hw.c: 119: {
 10793                           ;hw.c: 120: mode=mode+1;
 10794  0030F4  0E01               	movlw	1
 10795  0030F6  0101               	movlb	1	; () banked
 10796  0030F8  258E               	addwf	_mode& (0+255),w,b
 10797  0030FA  0101               	movlb	1	; () banked
 10798  0030FC  6F8E               	movwf	_mode& (0+255),b
 10799  0030FE  0E00               	movlw	0
 10800  003100  0101               	movlb	1	; () banked
 10801  003102  218F               	addwfc	(_mode+1)& (0+255),w,b
 10802  003104  0101               	movlb	1	; () banked
 10803  003106  6F8F               	movwf	(_mode+1)& (0+255),b
 10804  003108  0012               	return	
 10805  00310A                     __end_of_EXT_Int0_isr:
 10806                           	opt stack 0
 10807                           pclatu	equ	0xFFB
 10808                           pclath	equ	0xFFA
 10809                           tblptru	equ	0xFF8
 10810                           tblptrh	equ	0xFF7
 10811                           tblptrl	equ	0xFF6
 10812                           tablat	equ	0xFF5
 10813                           prodh	equ	0xFF4
 10814                           prodl	equ	0xFF3
 10815                           intcon	equ	0xFF2
 10816                           intcon2	equ	0xFF1
 10817                           intcon3	equ	0xFF0
 10818                           postinc0	equ	0xFEE
 10819                           fsr0h	equ	0xFEA
 10820                           fsr0l	equ	0xFE9
 10821                           wreg	equ	0xFE8
 10822                           postdec1	equ	0xFE5
 10823                           fsr1h	equ	0xFE2
 10824                           fsr1l	equ	0xFE1
 10825                           indf2	equ	0xFDF
 10826                           postinc2	equ	0xFDE
 10827                           postdec2	equ	0xFDD
 10828                           fsr2h	equ	0xFDA
 10829                           fsr2l	equ	0xFD9
 10830                           status	equ	0xFD8
 10831                           pclatu	equ	0xFFB
 10832                           pclath	equ	0xFFA
 10833                           tblptru	equ	0xFF8
 10834                           tblptrh	equ	0xFF7
 10835                           tblptrl	equ	0xFF6
 10836                           tablat	equ	0xFF5
 10837                           prodh	equ	0xFF4
 10838                           prodl	equ	0xFF3
 10839                           intcon	equ	0xFF2
 10840                           intcon2	equ	0xFF1
 10841                           intcon3	equ	0xFF0
 10842                           postinc0	equ	0xFEE
 10843                           fsr0h	equ	0xFEA
 10844                           fsr0l	equ	0xFE9
 10845                           wreg	equ	0xFE8
 10846                           postdec1	equ	0xFE5
 10847                           fsr1h	equ	0xFE2
 10848                           fsr1l	equ	0xFE1
 10849                           indf2	equ	0xFDF
 10850                           postinc2	equ	0xFDE
 10851                           postdec2	equ	0xFDD
 10852                           fsr2h	equ	0xFDA
 10853                           fsr2l	equ	0xFD9
 10854                           status	equ	0xFD8
 10855                           
 10856                           	psect	rparam
 10857  0000                     pclatu	equ	0xFFB
 10858                           pclath	equ	0xFFA
 10859                           tblptru	equ	0xFF8
 10860                           tblptrh	equ	0xFF7
 10861                           tblptrl	equ	0xFF6
 10862                           tablat	equ	0xFF5
 10863                           prodh	equ	0xFF4
 10864                           prodl	equ	0xFF3
 10865                           intcon	equ	0xFF2
 10866                           intcon2	equ	0xFF1
 10867                           intcon3	equ	0xFF0
 10868                           postinc0	equ	0xFEE
 10869                           fsr0h	equ	0xFEA
 10870                           fsr0l	equ	0xFE9
 10871                           wreg	equ	0xFE8
 10872                           postdec1	equ	0xFE5
 10873                           fsr1h	equ	0xFE2
 10874                           fsr1l	equ	0xFE1
 10875                           indf2	equ	0xFDF
 10876                           postinc2	equ	0xFDE
 10877                           postdec2	equ	0xFDD
 10878                           fsr2h	equ	0xFDA
 10879                           fsr2l	equ	0xFD9
 10880                           status	equ	0xFD8
 10881                           
 10882                           	psect	temp
 10883  000071                     btemp:
 10884                           	opt stack 0
 10885  000071                     	ds	1
 10886  0000                     int$flags	set	btemp
 10887                           pclatu	equ	0xFFB
 10888                           pclath	equ	0xFFA
 10889                           tblptru	equ	0xFF8
 10890                           tblptrh	equ	0xFF7
 10891                           tblptrl	equ	0xFF6
 10892                           tablat	equ	0xFF5
 10893                           prodh	equ	0xFF4
 10894                           prodl	equ	0xFF3
 10895                           intcon	equ	0xFF2
 10896                           intcon2	equ	0xFF1
 10897                           intcon3	equ	0xFF0
 10898                           postinc0	equ	0xFEE
 10899                           fsr0h	equ	0xFEA
 10900                           fsr0l	equ	0xFE9
 10901                           wreg	equ	0xFE8
 10902                           postdec1	equ	0xFE5
 10903                           fsr1h	equ	0xFE2
 10904                           fsr1l	equ	0xFE1
 10905                           indf2	equ	0xFDF
 10906                           postinc2	equ	0xFDE
 10907                           postdec2	equ	0xFDD
 10908                           fsr2h	equ	0xFDA
 10909                           fsr2l	equ	0xFD9
 10910                           status	equ	0xFD8


Data Sizes:
    Strings     124
    Constant    144
    Data        6
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    102     112
    BANK0           128     41      89
    BANK1           256    130     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_11(CODE[5]), STR_10(CODE[10]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[10]), STR_6(CODE[21]), STR_5(CODE[11]), STR_4(CODE[13]), 
		 -> STR_3(CODE[14]), STR_2(CODE[17]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> display@LCD(BANK1[64]), display@LCDP(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 64
		 -> display@LCD(BANK1[64]), display@LCDP(BANK1[64]), 


Critical Paths under _main in COMRAM

    _read_adc_voltage->___fldiv
    ___fldiv->___xxtofl
    _lcd_init->_lcd_send_byte
    _display->_sprintf
    _sprintf->___flge
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___xxtofl->___wmul
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___flge->___fladd
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_display
    _display->_sprintf

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_display

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   54811
                                             39 BANK0      2     2      0
                            ___fladd
                             ___flge
                            ___flmul
                           _delay_ms
                            _display
                    _init_adc_no_lib
                           _lcd_init
                      _lcd_send_byte
                   _read_adc_voltage
                         _setupPorts
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    2539
                                             59 COMRAM    11     7      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                             14 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             34 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1262
                                             24 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                            132   132      0   42954
                                             37 BANK0      2     2      0
                                              0 BANK1    130   130      0
                         _lcd_gotoxy
                           _lcd_putc
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             47    37     10   35102
                                             98 COMRAM     4     4      0
                                              0 BANK0     37    27     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7133
                                             53 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    6935
                                             53 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3616
                                             28 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                             14 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     450
                                             20 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     671
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     671
                                             27 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     546
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     421
                                             62 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2745
                                             86 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2470
                                             66 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     822
                                             86 COMRAM    12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    3042
                                             28 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    2549
                                             27 COMRAM     1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1    1425
                                             24 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_send_byte                                        2     1      1     714
                                             22 COMRAM     2     1      1
                       _delay_cycles
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_send_nibble                                      2     2      0      68
                                             20 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (3) _delay_cycles                                         6     6      0      46
                                             14 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     2      2     366
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _highIsr                                             14    14      0       0
                                              0 COMRAM    14    14      0
                       _EXT_Int0_isr
                       _EXT_Int1_isr
                       _EXT_Int2_isr
                         _Timer0_isr
 ---------------------------------------------------------------------------------
 (9) _Timer0_isr                                           0     0      0       0
                       _reloadTimer0
 ---------------------------------------------------------------------------------
 (10) _reloadTimer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EXT_Int2_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EXT_Int1_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EXT_Int0_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___flge
     ___fladd (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
   _delay_ms
   _display
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _lcd_send_nibble
           _delay_cycles
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _lcd_send_nibble
             _delay_cycles
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
         ___fladd (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _init_adc_no_lib
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_send_byte
     _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _read_adc_voltage
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _read_adc_raw_no_lib
   _setupPorts

 _highIsr (ROOT)
   _EXT_Int0_isr
   _EXT_Int1_isr
   _EXT_Int2_isr
   _Timer0_isr
     _reloadTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     82      94       7       57.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     29      59       5       69.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     66      70       1       88.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15D      34        0.0%
DATA                 0      0     15D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Apr 09 19:45:01 2022

           ?_read_adc_voltage 003C                  ___fldiv@aexp 003B                  ___fldiv@bexp 003A  
                ___fldiv@sign 002F            ??_read_adc_voltage 0040                            l14 3144  
                          l76 307A                            _HS 00A0                ?_lcd_send_byte 0017  
                ___awdiv@sign 001A                            _ft 006B                            _sp 0182  
         ___wmul@multiplicand 0011                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$XT 000000                   __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000  
                         l320 1360                           l257 31C6                           l290 0E4A  
                         l282 0CB4                           l460 0774                           l357 138E  
                         l294 0ED6                           l707 29D4                           l811 28AC  
                         l804 281E                           l717 2ACA                           l805 2846  
                         l980 1C5E                           l981 1C56                           l982 1C34  
                         l886 2DDE                           l896 2F1E                           l997 1D4C  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _RPS 0067  
                         _lcd 000F83                           _min 018C                           _sec 0190  
                         _spf 00A4                  ___awmod@sign 0014                           prod 000FF3  
   read_adc_voltage@raw_value 0044                           wreg 000FE8                  ___flmul@aexp 002E  
                ___flmul@bexp 002F                  ___flmul@sign 0029                  ___flmul@temp 0034  
                ___flmul@prod 0030                   lcd_gotoxy@x 001A                   lcd_gotoxy@y 0019  
                ___fltol@exp1 0048                   display@LCDP 0100                          l1006 1DB0  
                        l1102 2734                          l1103 2748                          l1036 229A  
                        l1047 2306                          l1066 1836                          l1083 1AD2  
                        l1075 1A4C                          l3102 1B32                          l1095 26F8  
                        l1088 267A                          l3130 1B7E                          l3106 1B36  
                        l3204 1C9E                          l3038 314A                          l3206 1CA2  
                        l3214 1CB4                          l3126 1B7A                          l3080 3032  
                        l3232 1D70                          l3224 1D3C                          l3400 1A90  
                        l3304 17E2                          l3074 3026                          l3242 1D86  
                        l3250 1D94                          l3138 1B9E                          l3322 1822  
                        l3306 17E6                          l5010 05CA                          l5002 0568  
                        l3068 31BA                          l3076 302A                          l3084 3038  
                        l3180 1C42                          l3404 1AAE                          l3332 1854  
                        l3324 1826                          l3308 17F6                          l3078 302E  
                        l3086 3052                          l3510 2FBA                          l3182 1C46  
                        l3430 2C7C                          l3406 1ABC                          l5110 0990  
                        l5006 05AA                          l4302 2298                          l3504 2F8A  
                        l3280 1E24                          l3272 1E02                          l3248 1D90  
                        l3168 1BDA                          l3600 27E4                          l3416 1AF0  
                        l3328 1842                          l5112 0996                          l5104 096A  
                        l5040 0686                          l5024 0616                          l5032 0646  
                        l5200 1E4A                          l3506 2FA2                          l3514 2FC6  
                        l3282 1E26                          l3258 1DAC                          l3442 2CA2  
                        l5050 0728                          l5034 065A                          l5026 062C  
                        l5018 05FC                          l5210 1E98                          l4314 22CE  
                        l4234 213A                          l3508 2FAE                          l3276 1E1C  
                        l3268 1DF6                          l3196 1C7A                          l3700 29C2  
                        l3444 2CAA                          l3436 2C8C                          l3380 1A14  
                        l5132 0A2C                          l5124 09DC                          l5220 1EFE  
                        l5212 1E9C                          l4340 237C                          l4324 2302  
                        l4308 22B0                          l3702 29CE                          l3630 2872  
                        l3462 2CE2                          l3454 2CCA                          l3446 2CAE  
                        l3390 1A48                          l3374 19F6                          l3534 25EE  
                        l3526 2522                          l5150 0ACA                          l5070 07A8  
                        l5062 0778                          l5038 067E                          l5222 1F1C  
                        l5214 1EA4                          l5206 1E70                          l4350 23A6  
                        l4342 2398                          l4334 234A                          l4270 21C4  
                        l4254 217A                          l4238 213E                          l3720 2A1A  
                        l3800 2DA0                          l3640 289A                          l5160 0B04  
                        l5152 0AD4                          l5144 0A8C                          l5128 0A00  
                        l5056 0742                          l5048 071A                          l5216 1EC2  
                        l5208 1E84                          l3650 28DC                          l3642 28A6  
                        l3634 2882                          l3458 2CD4                          l3490 2E3E  
                        l3482 2E1E                          l3474 2E04                          l3554 1584  
                        l5170 0B38                          l5146 0A96                          l5138 0A58  
                        l5074 080A                          l5058 0756                          l5218 1EE0  
                        l5226 1F3A                          l4338 236E                          l4258 217E  
                        l5410 0F94                          l5330 0D76                          l3724 2A4E  
                        l3820 2EEC                          l3484 2E26                          l3572 178C  
                        l3548 14E0                          l5092 0918                          l5084 08F0  
                        l5228 1F6E                          l4364 2F44                          l4348 23A4  
                        l5500 117C                          l5420 0FCE                          l5404 0F5C  
                        l5340 0DF6                          l3734 2B02                          l3742 3126  
                        l3670 293C                          l3486 2E2A                          l3494 2E48  
                        l3478 2E10                          l3566 16E8                          l3558 15AE  
                        l5182 0B84                          l5086 08FE                          l5094 0926  
                        l5190 0C24                          l4382 2F68                          l4374 2F56  
                        l4278 21EC                          l5430 100A                          l5342 0E0A  
                        l5334 0DC2                          l3728 2A8C                          l3752 2B24  
                        l3808 2DD0                          l3824 2F10                          l3816 2EDC  
                        l3840 26A8                          l3656 28FA                          l3584 322A  
                        l5176 0B5E                          l5168 0B2C                          l5192 0C42  
                        l4368 2F4C                          l4296 2272                          l4288 224A  
                        l5424 0FF2                          l5408 0F7E                          l3818 2EE8  
                        l3842 26AE                          l3834 268A                          l3690 299A  
                        l3594 27B8                          l3498 2E56                          l5186 0C08  
                        l4378 2F60                          l5514 11D2                          l5506 119E  
                        l5442 105A                          l5426 0FFA                          l5370 0EC0  
                        l5338 0DE2                          l3780 2BB4                          l3772 2B90  
                        l3852 271E                          l3844 26BA                          l5188 0C0E  
                        l5508 11B4                          l5516 11E8                          l5444 1070  
                        l5356 0E74                          l3782 2BBA                          l3854 272A  
                        l3846 26E0                          l3694 29AA                          l3678 296C  
                        l4902 0160                          l5526 1230                          l5518 11FE  
                        l5438 1036                          l5382 0EEE                          l5358 0E7C  
                        l5366 0EAA                          l3872 318E                          l3768 2B80  
                        l4920 01DA                          l4912 018C                          l4904 0176  
                        l5536 1246                          l5464 10BC                          l5392 0F2A  
                        l5384 0EF8                          l3786 2BD0                          l3778 2BA8  
                        l3866 277A                          l4930 022C                          l4914 01C0  
                        l5490 114E                          l5458 10A0                          l5394 0F32  
                        l5466 10C2                          l3876 31A0                          l3796 2D90  
                        l4908 0186                          l5572 1320                          l5564 12DA  
                        l5556 12AC                          l5548 1288                          l3798 2D9C  
                        l5566 12F0                          l5558 12B6                          l5478 1106  
                        l4960 0370                          l4872 004A                          l4970 040C  
                        l4962 03AC                          l4954 032C                          l4946 02AC  
                        l4874 0060                          l4866 002A                          l5578 1336  
                        l5498 1172                          l4964 03C2                          l4884 009A  
                        l4892 00FC                          l4990 0522                          l4974 043A  
                        l4958 035A                          l4878 006A                          l4984 04A4  
                        l4898 0124                          l4988 051C                          STR_1 FFA9  
                        STR_2 FF98                          STR_3 FFB8                          STR_4 FFC6  
                        STR_5 FFD3                          STR_6 FF83                          STR_7 FFE8  
                        STR_8 FFF7                          STR_9 FFFB                          u3010 1C0A  
                        u3020 1C1A                          u3030 1C1C                          _IPR1 000F9F  
                        _IPR2 000FA2                          _PIE1 000F9D                          u6000 076C  
                        _PIE2 000FA0                          u3470 1A9E                          u3390 19B8  
                        u3711 279C                          u3731 27C8                          u3395 19AE  
                        u3940 2B42                          u2895 30A8                          u2896 30AA  
                        u3945 2B38                          _PIR1 000F9E                          _PIR2 000FA1  
                        u4940 2358                          u6640 10FE                          u6730 11C8  
                        u6660 1130                          u6741 11FC                          u6760 121E  
                        u6907 30D0                          u6860 1304                          u6917 31BC  
                        u6790 1274                          u6880 1358              ?_lcd_send_nibble 0001  
                        _flag 00D7                          _main 0C50                          _mode 018E  
                        _hour 018A                          _temp 0186                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0071                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 0016                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0034                  _sprintf$1688 00B8                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010          __end_of_delay_cycles 3166                 ___fltol@sign1 0047  
             __end_of___fladd 1E42                         ?_main 0001               __end_of___fldiv 23C2  
             __end_of___awdiv 2CEC               __end_of___flneg 3138                         STR_10 FFDE  
                       STR_11 FFF2               __end_of___awmod 2E60               __end_of___flmul 1B06  
             __end_of___flsub 3022               __end_of___fltol 2BE2               __end_of___lldiv 2DF0  
                       _T0CON 000FD5               ___awdiv@divisor 0017               __end_of___llmod 2F30  
             ___awdiv@counter 0019                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _SPBRG 000FAF  
                       _PORTC 000F82       read_adc_voltage@channel 0046                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TXREG 000FAD                         _TXSTA 000FAC  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000               __end_of_highIsr 2C68                 __CFG_WRTB$OFF 000000  
             __end_of_display 210E                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               __end_of_dpowers FF83                         _scale 139E  
             __end_of_isdigit 3232               _init_adc_no_lib 3262                         _tempf 00A8  
                       main@i 00D5                         tablat 000FF5                         status 000FD8  
     read_adc_voltage@voltage 0040               __end_of_sprintf 0C50                __CFG_PBADEN$ON 000000  
             __initialization 2E60                  __end_of_main 139E               ??_lcd_send_byte 0018  
                      ??_main 0067                 __activetblptr 000002          __size_of__tdiv_to_l_ 0132  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 001C                        ?_scale 0036                        _ADRESH 000FC4  
                      _ADRESL 000FC3              ___awdiv@dividend 0015                        i2l4416 30F4  
                      _INTCON 000FF2                        _SPBRGH 000FB0              __end_of___xxtofl 278C  
            __end_of_delay_ms 31D4                        _Buffer 0080                __CFG_XINST$OFF 000000  
            __end_of__powers_ FF5B                    _Timer0_isr 3232              __end_of_lcd_init 2F86  
                      ___flge 29E6              __end_of_lcd_putc 2FDC              __end_of_lcd_puts 31B0  
                   ??___fladd 004B                        ___wmul 3166                     ??___fldiv 002B  
                   ??___awdiv 0019                     ??___flneg 0013                __CFG_STVREN$ON 000000  
                   ??___awmod 0013                     ??___flmul 0025                     ??___flsub 005F  
                   ??___fltol 0043                     ??___lldiv 0017                     ??___llmod 0024  
                      _fround 23C2                        clear_0 2E66                        clear_1 2E72  
            ___awdiv@quotient 001B               ___awmod@divisor 0011               ___awmod@counter 0013  
                   ??_highIsr 0001                     ??_display 00D3       __end_of_init_adc_no_lib 326E  
                __pdataCOMRAM 006D                     ??_isdigit 000F                  __mediumconst FEF2  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                   ??_sprintf 0063                    ___flge@ff1 0057                    ___flge@ff2 005B  
                ___xxtofl@arg 001F                  ___xxtofl@exp 001E                  ___xxtofl@val 0015  
                  __accesstop 0080       __end_of__initialization 2EBC                    ___flneg@f1 000F  
               ___rparam_used 000001                    ___fltol@f1 003F                __pcstackCOMRAM 0001  
       __size_of_delay_cycles 002E                  __pidataBANK0 327C                 ?_EXT_Int0_isr 0001  
               ?_EXT_Int1_isr 0001                 ?_EXT_Int2_isr 0001                 __end_of_scale 17B6  
                  __div_to_l_ 28BE     __size_of_read_adc_voltage 0082             lcd_gotoxy@address 001B  
             __div_to_l_@exp1 001C               __div_to_l_@cntr 001B                       ??_scale 003A  
             __div_to_l_@quot 0017                  sprintf@width 00CA                    __pbssBANK0 0080  
                  __pbssBANK1 0182   __end_of_read_adc_raw_no_lib 309E                  _delay_cycles 3138  
               __div_to_l_@f1 000F                 __div_to_l_@f2 0013                 ?_reloadTimer0 0001  
                 ?_Timer0_isr 0001                lcd_send_byte@n 0017                       ?___flge 0057  
              ??_EXT_Int0_isr 0001                ??_EXT_Int1_isr 0001                ??_EXT_Int2_isr 0001  
                     ?___wmul 000F              lcd_send_nibble@n 0016                       ?_fround 0036  
            ?_init_adc_no_lib 0001                       _INTCON2 000FF1                       _INTCON3 000FF0  
                   ?___xxtofl 0015                     ?_delay_ms 000F                    _lcd_gotoxy 3022  
                   ?_lcd_init 0001                     ?_lcd_putc 0001                     ?_lcd_puts 001D  
              ??_reloadTimer0 0001             __end_of__npowers_ FF27                       __Hparam 0000  
                  _scale$1687 003A                       __Lparam 0000      __size_of_lcd_send_nibble 0022  
             __size_of___flge 0120                       ___fladd 1B06                       ___fldiv 210E  
                     ___awdiv 2C68                       ___flneg 310A                       ___awmod 2DF0  
                     ___flmul 17B6                       ___flsub 2FDC                       ___fltol 2B06  
                     ___lldiv 2D6E               __size_of___wmul 0026                       ___llmod 2ECA  
                     __pcinit 2E60               __size_of_fround 027A                       __ramtop 1000  
                     __ptext0 0C50                       __ptext1 31F6                       __ptext2 2CEC  
                     __ptext3 3064                       __ptext4 210E                       __ptext5 2F30  
                     __ptext6 3262                       __ptext7 1E42                       __ptext8 001A  
                     __ptext9 139E                       _highIsr 0008                       _display 1E42  
                 ?__div_to_l_ 000F                       _dpowers FF5B                       _isdigit 3214  
                  ??___xxtofl 0019              ___awmod@dividend 000F                    ??_delay_ms 0011  
         __size_of_Timer0_isr 0012                       _sprintf 001A                    ??_lcd_init 0019  
              __pintcode_body 2BE2                    ??_lcd_putc 001C                    ??_lcd_puts 001F  
        end_of_initialization 2EBC                 __Lmediumconst FEF2                       int_func 2BE2  
        lcd_send_byte@cm_data 0018               ___lldiv@divisor 0013               ___lldiv@counter 001B  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                __tdiv_to_l_@f1 000F  
              __tdiv_to_l_@f2 0013         __end_of_lcd_send_byte 30D8                 ??__tdiv_to_l_ 0017  
                  _timer_flag 00AC                     _PORTBbits 000F81                     _PORTCbits 000F82  
                   _PORTEbits 000F84                    _setupPorts 31F6                   ___fladd@grs 0056  
               ___xxtofl@sign 001D              _read_adc_voltage 2CEC                   ?_lcd_gotoxy 0019  
                 ___fldiv@grs 0036                   ___fldiv@rem 0030          __end_of_EXT_Int0_isr 310A  
        __end_of_EXT_Int1_isr 3262               _LCD_INIT_STRING 006D          __end_of_EXT_Int2_isr 3254  
                  _start_flag 0192                     _RPS_count 0069                   ___flmul@grs 002A  
                  display@LCD 0140                     _TXSTAbits 000FAC           __size_of__div_to_l_ 0128  
              __end_of___flge 2B06                __end_of___wmul 318C                   _BAUDCONbits 000FB8  
               __pidataCOMRAM 3278                 delay_cycles@n 0012                 delay_cycles@x 0013  
           ??_lcd_send_nibble 0015                __end_of_fround 263C          __end_of_reloadTimer0 3278  
         start_initialization 2E60           __end_of__tdiv_to_l_ 28BE               ___llmod@divisor 0020  
             ___llmod@counter 0024                  ??_Timer0_isr 0001                      ??___flge 005F  
         __size_of_lcd_gotoxy 0042                      ??___wmul 0013                   __pdataBANK0 00D7  
read_adc_raw_no_lib@raw_value 0013              __CFG_LPT1OSC$OFF 000000                      ??_fround 003A  
               sprintf@tmpval 00BE                   ?_setupPorts 0001                     ___fladd@a 0047  
                   ___fladd@b 0043                    fround@prec 0042                     ___fldiv@a 0027  
                   ___fldiv@b 0023                     ___flmul@a 0021                     ___flmul@b 001D  
                 __pbssCOMRAM 0067                     ___flsub@a 005B                     ___flsub@b 0057  
               __pcstackBANK0 00AE                 __pcstackBANK1 0100             __size_of___xxtofl 0150  
                _isdigit$1314 0010            __end_of_Timer0_isr 3244             __size_of_delay_ms 0024  
           __size_of_lcd_init 0056                   sprintf@flag 00C8             __size_of_lcd_putc 0056  
           __size_of_lcd_puts 0024                   sprintf@fval 00CC                   sprintf@prec 00D0  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  __size_of_read_adc_raw_no_lib 003A  
               __pmediumconst FEF2                      ?___fladd 0043                      ?___fldiv 0023  
                    ?___awdiv 0015                      ?___flneg 000F                      ?___awmod 000F  
                    ?___flmul 001D                      ?___flsub 0057                      ?___fltol 003F  
                    ?___lldiv 000F                      ?___llmod 001C                     __npowers_ FEF3  
                 __tdiv_to_l_ 278C                      ?_highIsr 0001                      ?_display 0001  
                ??__div_to_l_ 0017         __size_of_EXT_Int0_isr 0032                      ?_isdigit 0001  
       __size_of_EXT_Int1_isr 000E         __size_of_EXT_Int2_isr 0010                      ?_sprintf 00AE  
              __size_of_scale 0418      __size_of_init_adc_no_lib 000C                ___wmul@product 0013  
                   delay_ms@i 0011                     delay_ms@n 000F           __size_of_setupPorts 001E  
                    _PIR1bits 000F9E            __end_of__div_to_l_ 29E6      __end_of_read_adc_voltage 2D6E  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000    read_adc_raw_no_lib@channel 0015  
                _EXT_Int0_isr 30D8                  _EXT_Int1_isr 3254                  _EXT_Int2_isr 3244  
       __size_of_reloadTimer0 000A                    _ADCON0bits 000FC2             ___wmul@multiplier 000F  
                   lcd_init@i 0019                     lcd_putc@c 001C                     lcd_puts@s 001D  
                ??_lcd_gotoxy 001A                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 2EB0               _lcd_send_nibble 31D4                  _reloadTimer0 326E  
                    __Hrparam 0000                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
          __end_of_lcd_gotoxy 3064              __size_of___fladd 033C              __size_of___fldiv 02B4  
            __size_of___awdiv 0084              __size_of___flneg 002E              __size_of___awmod 0070  
            __size_of___flmul 0350              __size_of___flsub 0046              __size_of___fltol 00DC  
            __size_of___lldiv 0082              __size_of___llmod 0066                   _fround$1685 003E  
                 _fround$1686 003A              __size_of_highIsr 2C60              __size_of_display 02CC  
                  sprintf@exp 00C6                    sprintf@val 00C2                      ___xxtofl 263C  
            __size_of_isdigit 001E                      _delay_ms 31B0                      __ptext10 3214  
                    __ptext11 23C2                      __ptext20 2D6E                      __ptext12 17B6  
                    __ptext21 2B06                      __ptext13 2DF0                      __ptext30 31D4  
                    __ptext22 2FDC                      __ptext14 2C68                      __ptext31 3138  
                    __ptext23 1B06                      __ptext15 278C                      __ptext32 31B0  
                    __ptext24 310A                      __ptext16 28BE                      __ptext25 29E6  
                    __ptext17 263C                      __ptext34 3232                      __ptext26 318C  
                    __ptext18 3166                      __ptext35 326E                      __ptext27 2F86  
                    __ptext19 2ECA                      __ptext36 3244                      __ptext28 3022  
                    __ptext37 3254                      __ptext29 309E                      __ptext38 30D8  
                    __powers_ FF27                      _lcd_init 2F30                      _lcd_putc 2F86  
                    _lcd_puts 318C              __size_of_sprintf 0C36        __size_of_lcd_send_byte 003A  
               ?_delay_cycles 0001                 __size_of_main 074E             ??_init_adc_no_lib 000F  
                    int$flags 0071                      display@C 0180                      display@H 0181  
                ??_setupPorts 000F                    _INTCONbits 000FF2                      isdigit@c 0011  
         _read_adc_raw_no_lib 3064                      scale@scl 003E                      intlevel2 0000  
                   sprintf@ap 00BC       __end_of_lcd_send_nibble 31F6              __tdiv_to_l_@exp1 001F  
            __tdiv_to_l_@cntr 001E                     sprintf@sp 00AE                ??_delay_cycles 000F  
            __tdiv_to_l_@quot 001A              ___lldiv@dividend 000F            __end_of_setupPorts 3214  
        ?_read_adc_raw_no_lib 000F                 _lcd_send_byte 309E                  ?__tdiv_to_l_ 000F  
                    sprintf@c 00D2                      sprintf@f 00B0              ___lldiv@quotient 0017  
               ___fladd@signs 0053                  ___fladd@aexp 0054                  ___fladd@bexp 0055  
       ??_read_adc_raw_no_lib 0011  
